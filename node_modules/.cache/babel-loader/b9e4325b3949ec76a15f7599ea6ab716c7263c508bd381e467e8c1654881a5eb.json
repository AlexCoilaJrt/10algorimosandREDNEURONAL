{"ast":null,"code":"import React,{useState}from'react';import{Card,Row,Col,Button,Progress,Tabs,Table,Statistic,Alert}from'antd';import{CheckCircleOutlined,CloseCircleOutlined}from'@ant-design/icons';import{ResponsiveContainer,BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{TabPane}=Tabs;function App(){const[selectedMethods,setSelectedMethods]=useState([]);const[isAnalyzing,setIsAnalyzing]=useState(false);const[analysisResults,setAnalysisResults]=useState(null);const[currentStep,setCurrentStep]=useState(0);const metodosML=[{id:1,nombre:\"Regresión Logística\",descripcion:\"Modelo lineal para clasificación binaria y multiclase.\",tipo:\"classification\",accuracy:0.9778,auc:0.9787,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"texto_tfidf\"],proceso:[\"Normalización de características\",\"Entrenamiento con gradiente descendente\",\"Cálculo de probabilidades\",\"Evaluación con métricas\"],explicacion:{que_es:\"Algoritmo de clasificación que utiliza la función logística para modelar probabilidades.\",como_funciona:\"Transforma una combinación lineal de características en probabilidades entre 0 y 1.\",ventajas:[\"Interpretable\",\"Rápido\",\"Probabilidades\"],desventajas:[\"Asume relación lineal\",\"Sensible a outliers\"]}},{id:2,nombre:\"K-Nearest Neighbors\",descripcion:\"Clasificador basado en instancias. Usa los k vecinos más cercanos.\",tipo:\"classification\",accuracy:0.9810,auc:0.9886,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"texto_tfidf\"],proceso:[\"Cálculo de distancias euclidianas\",\"Selección de k vecinos\",\"Votación por mayoría\",\"Optimización del parámetro k\"],explicacion:{que_es:\"Algoritmo basado en instancias que clasifica según los vecinos más cercanos.\",como_funciona:\"Encuentra los k puntos más cercanos y asigna la clase más común.\",ventajas:[\"Simple\",\"No paramétrico\",\"Efectivo con datos no lineales\"],desventajas:[\"Computacionalmente costoso\",\"Sensible a la escala\"]}},{id:3,nombre:\"Naive Bayes\",descripcion:\"Basado en el teorema de Bayes. Asume independencia entre características.\",tipo:\"classification\",accuracy:0.9524,auc:0.9696,variables:[\"texto_tfidf\",\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\"],proceso:[\"Cálculo de probabilidades P(característica|clase)\",\"Aplicación del teorema de Bayes\",\"Selección de clase con mayor probabilidad\",\"Suavizado de Laplace\"],explicacion:{que_es:\"Clasificador probabilístico basado en el teorema de Bayes.\",como_funciona:\"Calcula probabilidades posteriores asumiendo independencia entre características.\",ventajas:[\"Muy rápido\",\"Funciona bien con texto\",\"Robusto a ruido\"],desventajas:[\"Asunción de independencia\",\"Puede ser ingenuo\"]}},{id:4,nombre:\"Árbol de Decisión\",descripcion:\"Modelo de árbol que divide datos en nodos basado en reglas simples.\",tipo:\"classification\",accuracy:1.0000,auc:1.0000,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"categoria_encoded\"],proceso:[\"Cálculo de ganancia de información\",\"División recursiva de nodos\",\"Criterio de parada\",\"Podado del árbol\"],explicacion:{que_es:\"Modelo que utiliza estructura de árbol para tomar decisiones basadas en reglas.\",como_funciona:\"Divide recursivamente los datos en subconjuntos basándose en características.\",ventajas:[\"Fácil de interpretar\",\"No requiere normalización\",\"Maneja datos faltantes\"],desventajas:[\"Tendencia al sobreajuste\",\"Inestable\"]}},{id:5,nombre:\"Random Forest\",descripcion:\"Ensemble de árboles de decisión. Combina múltiples árboles para mejorar precisión.\",tipo:\"classification\",accuracy:0.9905,auc:0.9994,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"categoria_encoded\",\"texto_tfidf\"],proceso:[\"Bootstrap: Creación de muestras aleatorias\",\"Entrenamiento paralelo de múltiples árboles\",\"Votación por mayoría\",\"Cálculo de importancia\"],explicacion:{que_es:\"Ensemble que combina múltiples árboles de decisión para mayor robustez.\",como_funciona:\"Entrena múltiples árboles en subconjuntos aleatorios y combina sus predicciones.\",ventajas:[\"Muy preciso\",\"Robusto al sobreajuste\",\"Proporciona importancia de características\"],desventajas:[\"Menos interpretable\",\"Más lento\"]}},{id:6,nombre:\"Support Vector Machine\",descripcion:\"Encuentra el hiperplano óptimo que separa las clases con máximo margen.\",tipo:\"classification\",accuracy:0.9873,auc:0.9996,variables:[\"texto_tfidf\",\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\"],proceso:[\"Mapeo a espacio de alta dimensión\",\"Búsqueda del hiperplano con máximo margen\",\"Identificación de vectores de soporte\",\"Clasificación basada en posición\"],explicacion:{que_es:\"Algoritmo que encuentra el hiperplano óptimo para separar clases.\",como_funciona:\"Utiliza vectores de soporte para definir la frontera de decisión óptima.\",ventajas:[\"Efectivo en alta dimensión\",\"Robusto\",\"Maneja datos no lineales\"],desventajas:[\"Lento con conjuntos grandes\",\"Sensible a parámetros\"]}},{id:7,nombre:\"LightGBM\",descripcion:\"Gradient boosting optimizado. Combina múltiples modelos débiles secuencialmente.\",tipo:\"classification\",accuracy:0.9968,auc:0.9999,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"categoria_encoded\",\"texto_tfidf\"],proceso:[\"Inicialización con predicción base\",\"Cálculo de residuos del modelo actual\",\"Entrenamiento secuencial de modelos correctores\",\"Combinación ponderada\"],explicacion:{que_es:\"Implementación optimizada de gradient boosting para máxima precisión.\",como_funciona:\"Entrena modelos secuencialmente, cada uno corrige errores del anterior.\",ventajas:[\"Muy preciso\",\"Rápido\",\"Maneja datos faltantes\"],desventajas:[\"Complejo de interpretar\",\"Sensible a parámetros\"]}},{id:8,nombre:\"K-Means Clustering\",descripcion:\"Algoritmo de clustering que agrupa datos en k clusters basado en similitud.\",tipo:\"clustering\",accuracy:0.3541,auc:0.3541,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"categoria_encoded\"],proceso:[\"Inicialización aleatoria de k centroides\",\"Asignación de puntos al centroide más cercano\",\"Recálculo de centroides\",\"Repetición hasta convergencia\"],explicacion:{que_es:\"Algoritmo de clustering no supervisado que agrupa datos en k clusters.\",como_funciona:\"Inicializa k centroides, asigna puntos al más cercano y recalcula centroides.\",ventajas:[\"Simple y rápido\",\"Escalable\",\"Efectivo con clusters esféricos\"],desventajas:[\"Requiere especificar k\",\"Sensible a inicialización\"]}},{id:9,nombre:\"Análisis Temporal\",descripcion:\"ARIMA y suavizado exponencial para análisis de series temporales.\",tipo:\"temporal\",accuracy:0.8200,auc:0.8200,variables:[\"fecha_extraccion\",\"es_importante\",\"categoria_encoded\",\"periodico_encoded\"],proceso:[\"Análisis de estacionariedad\",\"Identificación de parámetros ARIMA\",\"Estimación de parámetros\",\"Validación con residuos\"],explicacion:{que_es:\"Análisis de series temporales para identificar patrones temporales.\",como_funciona:\"ARIMA combina componentes autoregresivos, integración y media móvil.\",ventajas:[\"Específico para tiempo\",\"Identifica tendencias\",\"Predicciones futuras\"],desventajas:[\"Requiere datos temporales\",\"Complejo de configurar\"]}},{id:10,nombre:\"Ensemble\",descripcion:\"Combinación de múltiples modelos para mejorar la precisión general.\",tipo:\"ensemble\",accuracy:0.9841,auc:0.9993,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"texto_tfidf\"],proceso:[\"Selección de modelos complementarios\",\"Entrenamiento paralelo\",\"Combinación por votación\",\"Optimización de pesos\"],explicacion:{que_es:\"Método que combina múltiples modelos para mayor robustez.\",como_funciona:\"Entrena varios modelos y combina sus predicciones mediante votación.\",ventajas:[\"Mayor precisión\",\"Más robusto\",\"Reduce sobreajuste\"],desventajas:[\"Más complejo\",\"Requiere más tiempo\"]}}];const chartData=[{name:'Regresión Logística',accuracy:97.78,auc:97.87},{name:'K-Nearest Neighbors',accuracy:98.10,auc:98.86},{name:'Naive Bayes',accuracy:95.24,auc:96.96},{name:'Árbol de Decisión',accuracy:100.00,auc:100.00},{name:'Random Forest',accuracy:99.05,auc:99.94},{name:'SVM',accuracy:98.73,auc:99.96},{name:'LightGBM',accuracy:99.68,auc:99.99},{name:'K-Means',accuracy:35.41,auc:35.41},{name:'Análisis Temporal',accuracy:82.00,auc:82.00},{name:'Ensemble',accuracy:98.41,auc:99.93}];const processSteps=[{title:\"Carga de Datos\",description:\"1,571 artículos periodísticos cargados\",progress:20},{title:\"Limpieza de Texto\",description:\"Procesamiento de títulos, resúmenes y contenido\",progress:40},{title:\"Vectorización TF-IDF\",description:\"1,000 características de texto generadas\",progress:60},{title:\"Entrenamiento ML\",description:\"10 algoritmos entrenados\",progress:80},{title:\"Evaluación\",description:\"Métricas calculadas y comparación\",progress:100}];const toggleMethod=methodId=>{if(selectedMethods.includes(methodId)){setSelectedMethods(selectedMethods.filter(id=>id!==methodId));}else{setSelectedMethods([...selectedMethods,methodId]);}};const executeAnalysis=()=>{if(selectedMethods.length===0){alert('Por favor selecciona al menos un método para analizar.');return;}setIsAnalyzing(true);setCurrentStep(0);const interval=setInterval(()=>{setCurrentStep(prev=>{if(prev>=processSteps.length-1){clearInterval(interval);setIsAnalyzing(false);setAnalysisResults({selectedMethods:selectedMethods,results:metodosML.filter(m=>selectedMethods.includes(m.id)),bestMethod:metodosML.find(m=>m.id===selectedMethods[0])});return prev;}return prev+1;});},1000);};const getMethodTypeColor=tipo=>{const colors={classification:'#1890ff',clustering:'#722ed1',temporal:'#52c41a',ensemble:'#fa8c16'};return colors[tipo]||'#666';};const getStatusColor=accuracy=>{if(accuracy>=0.95)return'#52c41a';if(accuracy>=0.90)return'#1890ff';if(accuracy>=0.80)return'#faad14';return'#ff4d4f';};return/*#__PURE__*/_jsx(\"div\",{style:{padding:'20px',background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',minHeight:'100vh'},children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'1400px',margin:'0 auto'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',color:'white',marginBottom:'30px'},children:[/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:'2.5em',marginBottom:'10px',textShadow:'2px 2px 4px rgba(0,0,0,0.3)'},children:\"\\uD83E\\uDD16 Dashboard ML Completo\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'1.2em',opacity:0.9},children:\"An\\xE1lisis de Art\\xEDculos Period\\xEDsticos con 10 M\\xE9todos de Machine Learning\"})]}),/*#__PURE__*/_jsxs(Card,{style:{marginBottom:'30px',borderRadius:'15px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:'center',marginBottom:'20px'},children:\"\\uD83D\\uDCCA Proceso de An\\xE1lisis de Datos\"}),/*#__PURE__*/_jsx(Row,{gutter:[16,16],children:processSteps.map((step,index)=>/*#__PURE__*/_jsx(Col,{xs:24,sm:12,md:8,lg:4,children:/*#__PURE__*/_jsxs(Card,{size:\"small\",style:{textAlign:'center',background:index<=currentStep?'#f6ffed':'#f5f5f5',border:index<=currentStep?'2px solid #52c41a':'1px solid #d9d9d9'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'30px',height:'30px',borderRadius:'50%',background:index<=currentStep?'#52c41a':'#d9d9d9',color:'white',display:'flex',alignItems:'center',justifyContent:'center',margin:'0 auto 10px',fontWeight:'bold'},children:index+1}),/*#__PURE__*/_jsx(\"h4\",{style:{margin:'0 0 5px',fontSize:'14px'},children:step.title}),/*#__PURE__*/_jsx(\"p\",{style:{margin:0,fontSize:'12px',color:'#666'},children:step.description}),/*#__PURE__*/_jsx(Progress,{percent:step.progress,size:\"small\"})]})},index))})]}),/*#__PURE__*/_jsxs(Card,{style:{marginBottom:'30px',borderRadius:'15px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:'center',marginBottom:'20px'},children:\"\\uD83C\\uDFAF Selecciona los M\\xE9todos de ML\"}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",size:\"large\",onClick:executeAnalysis,loading:isAnalyzing,style:{marginRight:'10px'},children:\"\\uD83D\\uDE80 Ejecutar An\\xE1lisis\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>setSelectedMethods([]),style:{marginRight:'10px'},children:\"\\uD83D\\uDD04 Limpiar Selecci\\xF3n\"}),/*#__PURE__*/_jsx(Button,{type:\"default\",children:\"\\uD83D\\uDCC8 Ver Proceso Completo\"})]}),/*#__PURE__*/_jsx(Row,{gutter:[16,16],children:metodosML.map(metodo=>/*#__PURE__*/_jsx(Col,{xs:24,sm:12,lg:8,xl:6,children:/*#__PURE__*/_jsx(Card,{hoverable:true,style:{cursor:'pointer',border:selectedMethods.includes(metodo.id)?'3px solid #52c41a':'1px solid #d9d9d9',background:selectedMethods.includes(metodo.id)?'#f6ffed':'white'},onClick:()=>toggleMethod(metodo.id),children:/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative'},children:[/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:'10px',right:'10px',width:'30px',height:'30px',borderRadius:'50%',background:'#1890ff',color:'white',display:'flex',alignItems:'center',justifyContent:'center',fontWeight:'bold',fontSize:'14px'},children:metodo.id}),/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:'10px',paddingRight:'40px'},children:metodo.nombre}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#666',marginBottom:'15px',fontSize:'14px'},children:metodo.descripcion}),/*#__PURE__*/_jsxs(Row,{gutter:8,style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"Accuracy\",value:metodo.accuracy*100,precision:1,suffix:\"%\",valueStyle:{color:getStatusColor(metodo.accuracy),fontSize:'16px'}})}),/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"AUC\",value:metodo.auc,precision:3,valueStyle:{color:getStatusColor(metodo.auc),fontSize:'16px'}})})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'inline-block',padding:'4px 8px',borderRadius:'12px',fontSize:'12px',fontWeight:'bold',textTransform:'uppercase',background:getMethodTypeColor(metodo.tipo)+'20',color:getMethodTypeColor(metodo.tipo)},children:metodo.tipo})]})})},metodo.id))})]}),analysisResults&&/*#__PURE__*/_jsxs(Card,{style:{borderRadius:'15px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:'center',marginBottom:'20px'},children:\"\\uD83D\\uDCCA Resultados del An\\xE1lisis\"}),/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"1\",children:[/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83D\\uDCC8 Gr\\xE1ficos de Comparaci\\xF3n\",children:/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"Comparaci\\xF3n de Accuracy\",size:\"small\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData.filter(d=>{var _metodosML$find;return analysisResults.selectedMethods.includes((_metodosML$find=metodosML.find(m=>m.nombre===d.name))===null||_metodosML$find===void 0?void 0:_metodosML$find.id);}),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",angle:-45,textAnchor:\"end\",height:100}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"accuracy\",fill:\"#1890ff\"})]})})})}),/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"Comparaci\\xF3n de AUC\",size:\"small\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData.filter(d=>{var _metodosML$find2;return analysisResults.selectedMethods.includes((_metodosML$find2=metodosML.find(m=>m.nombre===d.name))===null||_metodosML$find2===void 0?void 0:_metodosML$find2.id);}),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",angle:-45,textAnchor:\"end\",height:100}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"auc\",fill:\"#52c41a\"})]})})})})]})},\"1\"),/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83D\\uDD0D Detalles por M\\xE9todo\",children:analysisResults.results.map((metodo,index)=>/*#__PURE__*/_jsxs(Card,{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"h3\",{children:[index+1,\". \",metodo.nombre]}),/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsxs(Col,{xs:24,md:12,children:[/*#__PURE__*/_jsx(Alert,{message:\"\\xBFQu\\xE9 es?\",description:metodo.explicacion.que_es,type:\"info\",showIcon:true,style:{marginBottom:'10px'}}),/*#__PURE__*/_jsx(Alert,{message:\"\\xBFC\\xF3mo funciona?\",description:metodo.explicacion.como_funciona,type:\"info\",showIcon:true})]}),/*#__PURE__*/_jsxs(Col,{xs:24,md:12,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Variables Utilizadas:\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'15px'},children:metodo.variables.map((variable,i)=>/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',background:'#f0f0f0',padding:'4px 8px',margin:'2px',borderRadius:'4px',fontSize:'12px'},children:variable},i))}),/*#__PURE__*/_jsx(\"h4\",{children:\"Proceso Paso a Paso:\"}),/*#__PURE__*/_jsx(\"ol\",{style:{paddingLeft:'20px'},children:metodo.proceso.map((paso,i)=>/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:'5px',fontSize:'14px'},children:paso},i))})]})]}),/*#__PURE__*/_jsxs(Row,{gutter:[16,16],style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"Rendimiento de \".concat(metodo.nombre),size:\"small\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{name:'Accuracy',value:metodo.accuracy*100,color:'#1890ff'},{name:'AUC',value:metodo.auc*100,color:'#52c41a'}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>\"\".concat(value.toFixed(1),\"%\")}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#1890ff\"})]})})})}),/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"Importancia de Variables\",size:\"small\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:metodo.variables.map((variable,i)=>({name:variable,importance:Math.random()*100// Simular importancia\n})),layout:\"horizontal\",children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{type:\"number\"}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"name\",type:\"category\",width:100}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>\"\".concat(value.toFixed(1),\"%\")}),/*#__PURE__*/_jsx(Bar,{dataKey:\"importance\",fill:\"#722ed1\"})]})})})})]}),/*#__PURE__*/_jsxs(Row,{gutter:16,children:[/*#__PURE__*/_jsxs(Col,{span:12,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Ventajas:\"}),/*#__PURE__*/_jsx(\"ul\",{children:metodo.explicacion.ventajas.map((ventaja,i)=>/*#__PURE__*/_jsxs(\"li\",{style:{color:'#52c41a'},children:[/*#__PURE__*/_jsx(CheckCircleOutlined,{style:{marginRight:'5px'}}),ventaja]},i))})]}),/*#__PURE__*/_jsxs(Col,{span:12,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Desventajas:\"}),/*#__PURE__*/_jsx(\"ul\",{children:metodo.explicacion.desventajas.map((desventaja,i)=>/*#__PURE__*/_jsxs(\"li\",{style:{color:'#ff4d4f'},children:[/*#__PURE__*/_jsx(CloseCircleOutlined,{style:{marginRight:'5px'}}),desventaja]},i))})]})]})]},metodo.id))},\"2\"),/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83D\\uDCCA Gr\\xE1ficos Detallados\",children:/*#__PURE__*/_jsx(Row,{gutter:[16,16],children:analysisResults.results.map((metodo,index)=>/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsxs(Card,{title:\"Gr\\xE1ficos de \".concat(metodo.nombre),style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Rendimiento del M\\xE9todo\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:[{name:'Accuracy',value:metodo.accuracy*100},{name:'AUC',value:metodo.auc*100}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>\"\".concat(value.toFixed(1),\"%\")}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#1890ff\"})]})})]}),/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Importancia de Variables\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:metodo.variables.map((variable,i)=>({name:variable.length>15?variable.substring(0,15)+'...':variable,importance:100-i*10+Math.random()*20})),layout:\"horizontal\",children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{type:\"number\"}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"name\",type:\"category\",width:120}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>\"\".concat(value.toFixed(1),\"%\")}),/*#__PURE__*/_jsx(Bar,{dataKey:\"importance\",fill:\"#722ed1\"})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'15px',padding:'10px',background:'#f5f5f5',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Variables Utilizadas:\"}),/*#__PURE__*/_jsx(\"div\",{children:metodo.variables.map((variable,i)=>/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',background:'#1890ff',color:'white',padding:'2px 6px',margin:'2px',borderRadius:'3px',fontSize:'11px'},children:variable},i))})]})]})},metodo.id))})},\"3\"),/*#__PURE__*/_jsxs(TabPane,{tab:\"\\uD83C\\uDFC6 Comparaci\\xF3n Final\",children:[/*#__PURE__*/_jsx(Alert,{message:\"Mejor M\\xE9todo Identificado\",description:\"\".concat(analysisResults.bestMethod.nombre,\" con Accuracy: \").concat((analysisResults.bestMethod.accuracy*100).toFixed(1),\"% y AUC: \").concat(analysisResults.bestMethod.auc.toFixed(3)),type:\"success\",showIcon:true,style:{marginBottom:'20px'}}),/*#__PURE__*/_jsx(Table,{dataSource:analysisResults.results.map((metodo,index)=>({key:metodo.id,ranking:index+1,metodo:metodo.nombre,accuracy:\"\".concat((metodo.accuracy*100).toFixed(1),\"%\"),auc:metodo.auc.toFixed(3),tipo:metodo.tipo,estado:metodo.accuracy>=0.95?'Excelente':metodo.accuracy>=0.90?'Bueno':metodo.accuracy>=0.80?'Regular':'Pobre'})),columns:[{title:'Ranking',dataIndex:'ranking',key:'ranking'},{title:'Método',dataIndex:'metodo',key:'metodo'},{title:'Accuracy',dataIndex:'accuracy',key:'accuracy'},{title:'AUC',dataIndex:'auc',key:'auc'},{title:'Tipo',dataIndex:'tipo',key:'tipo'},{title:'Estado',dataIndex:'estado',key:'estado'}],pagination:false})]},\"4\")]})]})]})});}export default App;","map":{"version":3,"names":["React","useState","Card","Row","Col","Button","Progress","Tabs","Table","Statistic","Alert","CheckCircleOutlined","CloseCircleOutlined","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","jsx","_jsx","jsxs","_jsxs","TabPane","App","selectedMethods","setSelectedMethods","isAnalyzing","setIsAnalyzing","analysisResults","setAnalysisResults","currentStep","setCurrentStep","metodosML","id","nombre","descripcion","tipo","accuracy","auc","variables","proceso","explicacion","que_es","como_funciona","ventajas","desventajas","chartData","name","processSteps","title","description","progress","toggleMethod","methodId","includes","filter","executeAnalysis","length","alert","interval","setInterval","prev","clearInterval","results","m","bestMethod","find","getMethodTypeColor","colors","classification","clustering","temporal","ensemble","getStatusColor","style","padding","background","minHeight","children","maxWidth","margin","textAlign","color","marginBottom","fontSize","textShadow","opacity","borderRadius","gutter","map","step","index","xs","sm","md","lg","size","border","width","height","display","alignItems","justifyContent","fontWeight","percent","type","onClick","loading","marginRight","metodo","xl","hoverable","cursor","position","top","right","paddingRight","span","value","precision","suffix","valueStyle","textTransform","defaultActiveKey","tab","data","d","_metodosML$find","strokeDasharray","dataKey","angle","textAnchor","fill","_metodosML$find2","message","showIcon","variable","i","paddingLeft","paso","marginTop","concat","formatter","toFixed","importance","Math","random","layout","ventaja","desventaja","substring","dataSource","key","ranking","estado","columns","dataIndex","pagination"],"sources":["/Users/usuario/Documents/clasedepractica/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Row, Col, Button, Progress, Tabs, Table, Statistic, Alert } from 'antd';\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\n\nconst { TabPane } = Tabs;\n\nfunction App() {\n  const [selectedMethods, setSelectedMethods] = useState([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const metodosML = [\n    {\n      id: 1,\n      nombre: \"Regresión Logística\",\n      descripcion: \"Modelo lineal para clasificación binaria y multiclase.\",\n      tipo: \"classification\",\n      accuracy: 0.9778,\n      auc: 0.9787,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"texto_tfidf\"],\n      proceso: [\"Normalización de características\", \"Entrenamiento con gradiente descendente\", \"Cálculo de probabilidades\", \"Evaluación con métricas\"],\n      explicacion: {\n        que_es: \"Algoritmo de clasificación que utiliza la función logística para modelar probabilidades.\",\n        como_funciona: \"Transforma una combinación lineal de características en probabilidades entre 0 y 1.\",\n        ventajas: [\"Interpretable\", \"Rápido\", \"Probabilidades\"],\n        desventajas: [\"Asume relación lineal\", \"Sensible a outliers\"]\n      }\n    },\n    {\n      id: 2,\n      nombre: \"K-Nearest Neighbors\",\n      descripcion: \"Clasificador basado en instancias. Usa los k vecinos más cercanos.\",\n      tipo: \"classification\",\n      accuracy: 0.9810,\n      auc: 0.9886,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"texto_tfidf\"],\n      proceso: [\"Cálculo de distancias euclidianas\", \"Selección de k vecinos\", \"Votación por mayoría\", \"Optimización del parámetro k\"],\n      explicacion: {\n        que_es: \"Algoritmo basado en instancias que clasifica según los vecinos más cercanos.\",\n        como_funciona: \"Encuentra los k puntos más cercanos y asigna la clase más común.\",\n        ventajas: [\"Simple\", \"No paramétrico\", \"Efectivo con datos no lineales\"],\n        desventajas: [\"Computacionalmente costoso\", \"Sensible a la escala\"]\n      }\n    },\n    {\n      id: 3,\n      nombre: \"Naive Bayes\",\n      descripcion: \"Basado en el teorema de Bayes. Asume independencia entre características.\",\n      tipo: \"classification\",\n      accuracy: 0.9524,\n      auc: 0.9696,\n      variables: [\"texto_tfidf\", \"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\"],\n      proceso: [\"Cálculo de probabilidades P(característica|clase)\", \"Aplicación del teorema de Bayes\", \"Selección de clase con mayor probabilidad\", \"Suavizado de Laplace\"],\n      explicacion: {\n        que_es: \"Clasificador probabilístico basado en el teorema de Bayes.\",\n        como_funciona: \"Calcula probabilidades posteriores asumiendo independencia entre características.\",\n        ventajas: [\"Muy rápido\", \"Funciona bien con texto\", \"Robusto a ruido\"],\n        desventajas: [\"Asunción de independencia\", \"Puede ser ingenuo\"]\n      }\n    },\n    {\n      id: 4,\n      nombre: \"Árbol de Decisión\",\n      descripcion: \"Modelo de árbol que divide datos en nodos basado en reglas simples.\",\n      tipo: \"classification\",\n      accuracy: 1.0000,\n      auc: 1.0000,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"categoria_encoded\"],\n      proceso: [\"Cálculo de ganancia de información\", \"División recursiva de nodos\", \"Criterio de parada\", \"Podado del árbol\"],\n      explicacion: {\n        que_es: \"Modelo que utiliza estructura de árbol para tomar decisiones basadas en reglas.\",\n        como_funciona: \"Divide recursivamente los datos en subconjuntos basándose en características.\",\n        ventajas: [\"Fácil de interpretar\", \"No requiere normalización\", \"Maneja datos faltantes\"],\n        desventajas: [\"Tendencia al sobreajuste\", \"Inestable\"]\n      }\n    },\n    {\n      id: 5,\n      nombre: \"Random Forest\",\n      descripcion: \"Ensemble de árboles de decisión. Combina múltiples árboles para mejorar precisión.\",\n      tipo: \"classification\",\n      accuracy: 0.9905,\n      auc: 0.9994,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"categoria_encoded\", \"texto_tfidf\"],\n      proceso: [\"Bootstrap: Creación de muestras aleatorias\", \"Entrenamiento paralelo de múltiples árboles\", \"Votación por mayoría\", \"Cálculo de importancia\"],\n      explicacion: {\n        que_es: \"Ensemble que combina múltiples árboles de decisión para mayor robustez.\",\n        como_funciona: \"Entrena múltiples árboles en subconjuntos aleatorios y combina sus predicciones.\",\n        ventajas: [\"Muy preciso\", \"Robusto al sobreajuste\", \"Proporciona importancia de características\"],\n        desventajas: [\"Menos interpretable\", \"Más lento\"]\n      }\n    },\n    {\n      id: 6,\n      nombre: \"Support Vector Machine\",\n      descripcion: \"Encuentra el hiperplano óptimo que separa las clases con máximo margen.\",\n      tipo: \"classification\",\n      accuracy: 0.9873,\n      auc: 0.9996,\n      variables: [\"texto_tfidf\", \"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\"],\n      proceso: [\"Mapeo a espacio de alta dimensión\", \"Búsqueda del hiperplano con máximo margen\", \"Identificación de vectores de soporte\", \"Clasificación basada en posición\"],\n      explicacion: {\n        que_es: \"Algoritmo que encuentra el hiperplano óptimo para separar clases.\",\n        como_funciona: \"Utiliza vectores de soporte para definir la frontera de decisión óptima.\",\n        ventajas: [\"Efectivo en alta dimensión\", \"Robusto\", \"Maneja datos no lineales\"],\n        desventajas: [\"Lento con conjuntos grandes\", \"Sensible a parámetros\"]\n      }\n    },\n    {\n      id: 7,\n      nombre: \"LightGBM\",\n      descripcion: \"Gradient boosting optimizado. Combina múltiples modelos débiles secuencialmente.\",\n      tipo: \"classification\",\n      accuracy: 0.9968,\n      auc: 0.9999,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"categoria_encoded\", \"texto_tfidf\"],\n      proceso: [\"Inicialización con predicción base\", \"Cálculo de residuos del modelo actual\", \"Entrenamiento secuencial de modelos correctores\", \"Combinación ponderada\"],\n      explicacion: {\n        que_es: \"Implementación optimizada de gradient boosting para máxima precisión.\",\n        como_funciona: \"Entrena modelos secuencialmente, cada uno corrige errores del anterior.\",\n        ventajas: [\"Muy preciso\", \"Rápido\", \"Maneja datos faltantes\"],\n        desventajas: [\"Complejo de interpretar\", \"Sensible a parámetros\"]\n      }\n    },\n    {\n      id: 8,\n      nombre: \"K-Means Clustering\",\n      descripcion: \"Algoritmo de clustering que agrupa datos en k clusters basado en similitud.\",\n      tipo: \"clustering\",\n      accuracy: 0.3541,\n      auc: 0.3541,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"categoria_encoded\"],\n      proceso: [\"Inicialización aleatoria de k centroides\", \"Asignación de puntos al centroide más cercano\", \"Recálculo de centroides\", \"Repetición hasta convergencia\"],\n      explicacion: {\n        que_es: \"Algoritmo de clustering no supervisado que agrupa datos en k clusters.\",\n        como_funciona: \"Inicializa k centroides, asigna puntos al más cercano y recalcula centroides.\",\n        ventajas: [\"Simple y rápido\", \"Escalable\", \"Efectivo con clusters esféricos\"],\n        desventajas: [\"Requiere especificar k\", \"Sensible a inicialización\"]\n      }\n    },\n    {\n      id: 9,\n      nombre: \"Análisis Temporal\",\n      descripcion: \"ARIMA y suavizado exponencial para análisis de series temporales.\",\n      tipo: \"temporal\",\n      accuracy: 0.8200,\n      auc: 0.8200,\n      variables: [\"fecha_extraccion\", \"es_importante\", \"categoria_encoded\", \"periodico_encoded\"],\n      proceso: [\"Análisis de estacionariedad\", \"Identificación de parámetros ARIMA\", \"Estimación de parámetros\", \"Validación con residuos\"],\n      explicacion: {\n        que_es: \"Análisis de series temporales para identificar patrones temporales.\",\n        como_funciona: \"ARIMA combina componentes autoregresivos, integración y media móvil.\",\n        ventajas: [\"Específico para tiempo\", \"Identifica tendencias\", \"Predicciones futuras\"],\n        desventajas: [\"Requiere datos temporales\", \"Complejo de configurar\"]\n      }\n    },\n    {\n      id: 10,\n      nombre: \"Ensemble\",\n      descripcion: \"Combinación de múltiples modelos para mejorar la precisión general.\",\n      tipo: \"ensemble\",\n      accuracy: 0.9841,\n      auc: 0.9993,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"texto_tfidf\"],\n      proceso: [\"Selección de modelos complementarios\", \"Entrenamiento paralelo\", \"Combinación por votación\", \"Optimización de pesos\"],\n      explicacion: {\n        que_es: \"Método que combina múltiples modelos para mayor robustez.\",\n        como_funciona: \"Entrena varios modelos y combina sus predicciones mediante votación.\",\n        ventajas: [\"Mayor precisión\", \"Más robusto\", \"Reduce sobreajuste\"],\n        desventajas: [\"Más complejo\", \"Requiere más tiempo\"]\n      }\n    }\n  ];\n\n  const chartData = [\n    { name: 'Regresión Logística', accuracy: 97.78, auc: 97.87 },\n    { name: 'K-Nearest Neighbors', accuracy: 98.10, auc: 98.86 },\n    { name: 'Naive Bayes', accuracy: 95.24, auc: 96.96 },\n    { name: 'Árbol de Decisión', accuracy: 100.00, auc: 100.00 },\n    { name: 'Random Forest', accuracy: 99.05, auc: 99.94 },\n    { name: 'SVM', accuracy: 98.73, auc: 99.96 },\n    { name: 'LightGBM', accuracy: 99.68, auc: 99.99 },\n    { name: 'K-Means', accuracy: 35.41, auc: 35.41 },\n    { name: 'Análisis Temporal', accuracy: 82.00, auc: 82.00 },\n    { name: 'Ensemble', accuracy: 98.41, auc: 99.93 }\n  ];\n\n  const processSteps = [\n    { title: \"Carga de Datos\", description: \"1,571 artículos periodísticos cargados\", progress: 20 },\n    { title: \"Limpieza de Texto\", description: \"Procesamiento de títulos, resúmenes y contenido\", progress: 40 },\n    { title: \"Vectorización TF-IDF\", description: \"1,000 características de texto generadas\", progress: 60 },\n    { title: \"Entrenamiento ML\", description: \"10 algoritmos entrenados\", progress: 80 },\n    { title: \"Evaluación\", description: \"Métricas calculadas y comparación\", progress: 100 }\n  ];\n\n  const toggleMethod = (methodId) => {\n    if (selectedMethods.includes(methodId)) {\n      setSelectedMethods(selectedMethods.filter(id => id !== methodId));\n    } else {\n      setSelectedMethods([...selectedMethods, methodId]);\n    }\n  };\n\n  const executeAnalysis = () => {\n    if (selectedMethods.length === 0) {\n      alert('Por favor selecciona al menos un método para analizar.');\n      return;\n    }\n\n    setIsAnalyzing(true);\n    setCurrentStep(0);\n\n    const interval = setInterval(() => {\n      setCurrentStep(prev => {\n        if (prev >= processSteps.length - 1) {\n          clearInterval(interval);\n          setIsAnalyzing(false);\n          setAnalysisResults({\n            selectedMethods: selectedMethods,\n            results: metodosML.filter(m => selectedMethods.includes(m.id)),\n            bestMethod: metodosML.find(m => m.id === selectedMethods[0])\n          });\n          return prev;\n        }\n        return prev + 1;\n      });\n    }, 1000);\n  };\n\n  const getMethodTypeColor = (tipo) => {\n    const colors = {\n      classification: '#1890ff',\n      clustering: '#722ed1',\n      temporal: '#52c41a',\n      ensemble: '#fa8c16'\n    };\n    return colors[tipo] || '#666';\n  };\n\n  const getStatusColor = (accuracy) => {\n    if (accuracy >= 0.95) return '#52c41a';\n    if (accuracy >= 0.90) return '#1890ff';\n    if (accuracy >= 0.80) return '#faad14';\n    return '#ff4d4f';\n  };\n\n  return (\n    <div style={{ padding: '20px', background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)', minHeight: '100vh' }}>\n      <div style={{ maxWidth: '1400px', margin: '0 auto' }}>\n        {/* Header */}\n        <div style={{ textAlign: 'center', color: 'white', marginBottom: '30px' }}>\n          <h1 style={{ fontSize: '2.5em', marginBottom: '10px', textShadow: '2px 2px 4px rgba(0,0,0,0.3)' }}>\n            🤖 Dashboard ML Completo\n          </h1>\n          <p style={{ fontSize: '1.2em', opacity: 0.9 }}>\n            Análisis de Artículos Periodísticos con 10 Métodos de Machine Learning\n          </p>\n        </div>\n\n        {/* Proceso de Análisis */}\n        <Card style={{ marginBottom: '30px', borderRadius: '15px' }}>\n          <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>📊 Proceso de Análisis de Datos</h2>\n          \n          <Row gutter={[16, 16]}>\n            {processSteps.map((step, index) => (\n              <Col xs={24} sm={12} md={8} lg={4} key={index}>\n                <Card \n                  size=\"small\" \n                  style={{ \n                    textAlign: 'center',\n                    background: index <= currentStep ? '#f6ffed' : '#f5f5f5',\n                    border: index <= currentStep ? '2px solid #52c41a' : '1px solid #d9d9d9'\n                  }}\n                >\n                  <div style={{ \n                    width: '30px', \n                    height: '30px', \n                    borderRadius: '50%', \n                    background: index <= currentStep ? '#52c41a' : '#d9d9d9',\n                    color: 'white',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    margin: '0 auto 10px',\n                    fontWeight: 'bold'\n                  }}>\n                    {index + 1}\n                  </div>\n                  <h4 style={{ margin: '0 0 5px', fontSize: '14px' }}>{step.title}</h4>\n                  <p style={{ margin: 0, fontSize: '12px', color: '#666' }}>{step.description}</p>\n                  <Progress percent={step.progress} size=\"small\" />\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Card>\n\n        {/* Métodos de ML */}\n        <Card style={{ marginBottom: '30px', borderRadius: '15px' }}>\n          <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>🎯 Selecciona los Métodos de ML</h2>\n          \n          <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n            <Button \n              type=\"primary\" \n              size=\"large\" \n              onClick={executeAnalysis}\n              loading={isAnalyzing}\n              style={{ marginRight: '10px' }}\n            >\n              🚀 Ejecutar Análisis\n            </Button>\n            <Button \n              onClick={() => setSelectedMethods([])}\n              style={{ marginRight: '10px' }}\n            >\n              🔄 Limpiar Selección\n            </Button>\n            <Button type=\"default\">\n              📈 Ver Proceso Completo\n            </Button>\n          </div>\n\n          <Row gutter={[16, 16]}>\n            {metodosML.map((metodo) => (\n              <Col xs={24} sm={12} lg={8} xl={6} key={metodo.id}>\n                <Card\n                  hoverable\n                  style={{\n                    cursor: 'pointer',\n                    border: selectedMethods.includes(metodo.id) ? '3px solid #52c41a' : '1px solid #d9d9d9',\n                    background: selectedMethods.includes(metodo.id) ? '#f6ffed' : 'white'\n                  }}\n                  onClick={() => toggleMethod(metodo.id)}\n                >\n                  <div style={{ position: 'relative' }}>\n                    <div style={{\n                      position: 'absolute',\n                      top: '10px',\n                      right: '10px',\n                      width: '30px',\n                      height: '30px',\n                      borderRadius: '50%',\n                      background: '#1890ff',\n                      color: 'white',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontWeight: 'bold',\n                      fontSize: '14px'\n                    }}>\n                      {metodo.id}\n                    </div>\n                    \n                    <h3 style={{ marginBottom: '10px', paddingRight: '40px' }}>{metodo.nombre}</h3>\n                    <p style={{ color: '#666', marginBottom: '15px', fontSize: '14px' }}>\n                      {metodo.descripcion}\n                    </p>\n                    \n                    <Row gutter={8} style={{ marginBottom: '15px' }}>\n                      <Col span={12}>\n                        <Statistic \n                          title=\"Accuracy\" \n                          value={metodo.accuracy * 100} \n                          precision={1} \n                          suffix=\"%\" \n                          valueStyle={{ color: getStatusColor(metodo.accuracy), fontSize: '16px' }}\n                        />\n                      </Col>\n                      <Col span={12}>\n                        <Statistic \n                          title=\"AUC\" \n                          value={metodo.auc} \n                          precision={3}\n                          valueStyle={{ color: getStatusColor(metodo.auc), fontSize: '16px' }}\n                        />\n                      </Col>\n                    </Row>\n                    \n                    <div style={{\n                      display: 'inline-block',\n                      padding: '4px 8px',\n                      borderRadius: '12px',\n                      fontSize: '12px',\n                      fontWeight: 'bold',\n                      textTransform: 'uppercase',\n                      background: getMethodTypeColor(metodo.tipo) + '20',\n                      color: getMethodTypeColor(metodo.tipo)\n                    }}>\n                      {metodo.tipo}\n                    </div>\n                  </div>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Card>\n\n        {/* Resultados del Análisis */}\n        {analysisResults && (\n          <Card style={{ borderRadius: '15px' }}>\n            <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>📊 Resultados del Análisis</h2>\n            \n            <Tabs defaultActiveKey=\"1\">\n              <TabPane tab=\"📈 Gráficos de Comparación\" key=\"1\">\n                <Row gutter={[16, 16]}>\n                  <Col xs={24} lg={12}>\n                    <Card title=\"Comparación de Accuracy\" size=\"small\">\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <BarChart data={chartData.filter(d => analysisResults.selectedMethods.includes(metodosML.find(m => m.nombre === d.name)?.id))}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={100} />\n                          <YAxis />\n                          <Tooltip />\n                          <Bar dataKey=\"accuracy\" fill=\"#1890ff\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </Card>\n                  </Col>\n                  \n                  <Col xs={24} lg={12}>\n                    <Card title=\"Comparación de AUC\" size=\"small\">\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <BarChart data={chartData.filter(d => analysisResults.selectedMethods.includes(metodosML.find(m => m.nombre === d.name)?.id))}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={100} />\n                          <YAxis />\n                          <Tooltip />\n                          <Bar dataKey=\"auc\" fill=\"#52c41a\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </Card>\n                  </Col>\n                </Row>\n              </TabPane>\n\n              <TabPane tab=\"🔍 Detalles por Método\" key=\"2\">\n                {analysisResults.results.map((metodo, index) => (\n                  <Card key={metodo.id} style={{ marginBottom: '20px' }}>\n                    <h3>{index + 1}. {metodo.nombre}</h3>\n                    \n                    <Row gutter={[16, 16]}>\n                      <Col xs={24} md={12}>\n                        <Alert\n                          message=\"¿Qué es?\"\n                          description={metodo.explicacion.que_es}\n                          type=\"info\"\n                          showIcon\n                          style={{ marginBottom: '10px' }}\n                        />\n                        <Alert\n                          message=\"¿Cómo funciona?\"\n                          description={metodo.explicacion.como_funciona}\n                          type=\"info\"\n                          showIcon\n                        />\n                      </Col>\n                      \n                      <Col xs={24} md={12}>\n                        <h4>Variables Utilizadas:</h4>\n                        <div style={{ marginBottom: '15px' }}>\n                          {metodo.variables.map((variable, i) => (\n                            <span key={i} style={{\n                              display: 'inline-block',\n                              background: '#f0f0f0',\n                              padding: '4px 8px',\n                              margin: '2px',\n                              borderRadius: '4px',\n                              fontSize: '12px'\n                            }}>\n                              {variable}\n                            </span>\n                          ))}\n                        </div>\n                        \n                        <h4>Proceso Paso a Paso:</h4>\n                        <ol style={{ paddingLeft: '20px' }}>\n                          {metodo.proceso.map((paso, i) => (\n                            <li key={i} style={{ marginBottom: '5px', fontSize: '14px' }}>{paso}</li>\n                          ))}\n                        </ol>\n                      </Col>\n                    </Row>\n                    \n                    {/* Gráficos específicos por método */}\n                    <Row gutter={[16, 16]} style={{ marginTop: '20px' }}>\n                      <Col xs={24} lg={12}>\n                        <Card title={`Rendimiento de ${metodo.nombre}`} size=\"small\">\n                          <ResponsiveContainer width=\"100%\" height={250}>\n                            <BarChart data={[\n                              { name: 'Accuracy', value: metodo.accuracy * 100, color: '#1890ff' },\n                              { name: 'AUC', value: metodo.auc * 100, color: '#52c41a' }\n                            ]}>\n                              <CartesianGrid strokeDasharray=\"3 3\" />\n                              <XAxis dataKey=\"name\" />\n                              <YAxis />\n                              <Tooltip formatter={(value) => `${value.toFixed(1)}%`} />\n                              <Bar dataKey=\"value\" fill=\"#1890ff\" />\n                            </BarChart>\n                          </ResponsiveContainer>\n                        </Card>\n                      </Col>\n                      \n                      <Col xs={24} lg={12}>\n                        <Card title=\"Importancia de Variables\" size=\"small\">\n                          <ResponsiveContainer width=\"100%\" height={250}>\n                            <BarChart \n                              data={metodo.variables.map((variable, i) => ({\n                                name: variable,\n                                importance: Math.random() * 100 // Simular importancia\n                              }))}\n                              layout=\"horizontal\"\n                            >\n                              <CartesianGrid strokeDasharray=\"3 3\" />\n                              <XAxis type=\"number\" />\n                              <YAxis dataKey=\"name\" type=\"category\" width={100} />\n                              <Tooltip formatter={(value) => `${value.toFixed(1)}%`} />\n                              <Bar dataKey=\"importance\" fill=\"#722ed1\" />\n                            </BarChart>\n                          </ResponsiveContainer>\n                        </Card>\n                      </Col>\n                    </Row>\n                    \n                    <Row gutter={16}>\n                      <Col span={12}>\n                        <h4>Ventajas:</h4>\n                        <ul>\n                          {metodo.explicacion.ventajas.map((ventaja, i) => (\n                            <li key={i} style={{ color: '#52c41a' }}>\n                              <CheckCircleOutlined style={{ marginRight: '5px' }} />\n                              {ventaja}\n                            </li>\n                          ))}\n                        </ul>\n                      </Col>\n                      <Col span={12}>\n                        <h4>Desventajas:</h4>\n                        <ul>\n                          {metodo.explicacion.desventajas.map((desventaja, i) => (\n                            <li key={i} style={{ color: '#ff4d4f' }}>\n                              <CloseCircleOutlined style={{ marginRight: '5px' }} />\n                              {desventaja}\n                            </li>\n                          ))}\n                        </ul>\n                      </Col>\n                    </Row>\n                  </Card>\n                ))}\n              </TabPane>\n\n              <TabPane tab=\"📊 Gráficos Detallados\" key=\"3\">\n                <Row gutter={[16, 16]}>\n                  {analysisResults.results.map((metodo, index) => (\n                    <Col xs={24} lg={12} key={metodo.id}>\n                      <Card title={`Gráficos de ${metodo.nombre}`} style={{ marginBottom: '20px' }}>\n                        <Row gutter={[16, 16]}>\n                          <Col span={24}>\n                            <h4>Rendimiento del Método</h4>\n                            <ResponsiveContainer width=\"100%\" height={200}>\n                              <BarChart data={[\n                                { name: 'Accuracy', value: metodo.accuracy * 100 },\n                                { name: 'AUC', value: metodo.auc * 100 }\n                              ]}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"name\" />\n                                <YAxis />\n                                <Tooltip formatter={(value) => `${value.toFixed(1)}%`} />\n                                <Bar dataKey=\"value\" fill=\"#1890ff\" />\n                              </BarChart>\n                            </ResponsiveContainer>\n                          </Col>\n                          \n                          <Col span={24}>\n                            <h4>Importancia de Variables</h4>\n                            <ResponsiveContainer width=\"100%\" height={200}>\n                              <BarChart \n                                data={metodo.variables.map((variable, i) => ({\n                                  name: variable.length > 15 ? variable.substring(0, 15) + '...' : variable,\n                                  importance: (100 - i * 10) + Math.random() * 20\n                                }))}\n                                layout=\"horizontal\"\n                              >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis type=\"number\" />\n                                <YAxis dataKey=\"name\" type=\"category\" width={120} />\n                                <Tooltip formatter={(value) => `${value.toFixed(1)}%`} />\n                                <Bar dataKey=\"importance\" fill=\"#722ed1\" />\n                              </BarChart>\n                            </ResponsiveContainer>\n                          </Col>\n                        </Row>\n                        \n                        <div style={{ marginTop: '15px', padding: '10px', background: '#f5f5f5', borderRadius: '5px' }}>\n                          <h5>Variables Utilizadas:</h5>\n                          <div>\n                            {metodo.variables.map((variable, i) => (\n                              <span key={i} style={{\n                                display: 'inline-block',\n                                background: '#1890ff',\n                                color: 'white',\n                                padding: '2px 6px',\n                                margin: '2px',\n                                borderRadius: '3px',\n                                fontSize: '11px'\n                              }}>\n                                {variable}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                      </Card>\n                    </Col>\n                  ))}\n                </Row>\n              </TabPane>\n\n              <TabPane tab=\"🏆 Comparación Final\" key=\"4\">\n                <Alert\n                  message=\"Mejor Método Identificado\"\n                  description={`${analysisResults.bestMethod.nombre} con Accuracy: ${(analysisResults.bestMethod.accuracy * 100).toFixed(1)}% y AUC: ${analysisResults.bestMethod.auc.toFixed(3)}`}\n                  type=\"success\"\n                  showIcon\n                  style={{ marginBottom: '20px' }}\n                />\n                \n                <Table\n                  dataSource={analysisResults.results.map((metodo, index) => ({\n                    key: metodo.id,\n                    ranking: index + 1,\n                    metodo: metodo.nombre,\n                    accuracy: `${(metodo.accuracy * 100).toFixed(1)}%`,\n                    auc: metodo.auc.toFixed(3),\n                    tipo: metodo.tipo,\n                    estado: metodo.accuracy >= 0.95 ? 'Excelente' : \n                           metodo.accuracy >= 0.90 ? 'Bueno' : \n                           metodo.accuracy >= 0.80 ? 'Regular' : 'Pobre'\n                  }))}\n                  columns={[\n                    { title: 'Ranking', dataIndex: 'ranking', key: 'ranking' },\n                    { title: 'Método', dataIndex: 'metodo', key: 'metodo' },\n                    { title: 'Accuracy', dataIndex: 'accuracy', key: 'accuracy' },\n                    { title: 'AUC', dataIndex: 'auc', key: 'auc' },\n                    { title: 'Tipo', dataIndex: 'tipo', key: 'tipo' },\n                    { title: 'Estado', dataIndex: 'estado', key: 'estado' }\n                  ]}\n                  pagination={false}\n                />\n              </TabPane>\n            </Tabs>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}