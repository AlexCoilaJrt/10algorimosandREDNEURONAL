{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,Row,Col,Button,Progress,Tabs,Table,Statistic,Alert,Divider,Tag,Descriptions,Steps}from'antd';import{CheckCircleOutlined,CloseCircleOutlined,InfoCircleOutlined,RocketOutlined,DatabaseOutlined,BarChartOutlined}from'@ant-design/icons';import{ResponsiveContainer,BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,LineChart,Line,PieChart,Pie,Cell,ScatterChart,Scatter,AreaChart,Area,Legend}from'recharts';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const{TabPane}=Tabs;const{Step}=Steps;function App(){var _dashboardData$resume,_dashboardData$resume2,_dashboardData$resume3,_dashboardData$resume4,_dashboardData$resume5,_dashboardData$resume6;const[selectedMethods,setSelectedMethods]=useState([]);const[isAnalyzing,setIsAnalyzing]=useState(false);const[analysisResults,setAnalysisResults]=useState(null);const[currentStep,setCurrentStep]=useState(0);const[dashboardData,setDashboardData]=useState(null);const[loading,setLoading]=useState(true);const[redesNeuronalesData,setRedesNeuronalesData]=useState(null);const[showRedesNeuronales,setShowRedesNeuronales]=useState(false);// Cargar datos reales del servidor\nuseEffect(()=>{const fetchDashboardData=async()=>{try{const response=await fetch('/api/dashboard-data');const data=await response.json();setDashboardData(data);setLoading(false);}catch(error){console.error('Error cargando datos:',error);setLoading(false);}};fetchDashboardData();},[]);// Función para cargar datos de redes neuronales\nconst cargarRedesNeuronales=async()=>{try{const response=await fetch('/api/redes-neuronales-data');const data=await response.json();setRedesNeuronalesData(data);setShowRedesNeuronales(true);console.log('Redes neuronales cargadas:',data);}catch(error){console.error('Error cargando redes neuronales:',error);// Si no hay endpoint específico, usar datos locales\ntry{const response=await fetch('/api/dashboard-data');const data=await response.json();setRedesNeuronalesData(data);setShowRedesNeuronales(true);console.log('Usando datos alternativos:',data);}catch(error2){console.error('Error cargando datos alternativos:',error2);// Crear datos de ejemplo si no hay datos\nconst datosEjemplo={resultados:[{id:1,nombre:\"Perceptrón Multicapa (MLP)\",accuracy:0.985,estado:\"Excelente\",que_es:\"MLP es una red neuronal con múltiples capas ocultas que aprende patrones complejos en los datos periodísticos para determinar la importancia de los artículos.\",como_funciona:\"Utiliza backpropagation para ajustar pesos y sesgos, optimizando la función de pérdida mediante descenso de gradiente. Las 3 capas ocultas (100, 50, 25) procesan características textuales y aprenden patrones complejos.\",variables_utilizadas:[\"TF-IDF del texto (1,000 características)\",\"Características numéricas\",\"Variables categóricas\"],proceso_paso_a_paso:[\"Preprocesamiento\",\"Entrenamiento\",\"Validación\",\"Predicción\"],interpretacion_detallada:{que_hizo:\"La red neuronal MLP analizó 1,325 artículos periodísticos y aprendió a identificar patrones que determinan la importancia de un artículo basándose en su contenido, estructura y características periodísticas.\",como_funciono:\"Procesó características textuales (TF-IDF) y numéricas a través de 3 capas ocultas, aprendiendo relaciones complejas entre el contenido del artículo y su importancia periodística.\",evidencia_exito:\"98.5% de accuracy significa que de cada 100 artículos, la red identifica correctamente la importancia de 98-99 artículos, demostrando una comprensión profunda de los criterios periodísticos.\",variables_importantes:\"Las características más importantes son: longitud del contenido, complejidad textual, prestigio del periódico, relevancia de la categoría y estructura del artículo.\",interpretacion_resultados:\"El 98.5% de precisión indica que la red neuronal ha aprendido exitosamente a distinguir entre artículos importantes y regulares basándose en criterios objetivos de calidad periodística.\",aplicacion_practica:\"Este modelo puede automatizar la clasificación de importancia de artículos, ayudando a editores a priorizar contenido, mejorar la curaduría editorial y optimizar la distribución de recursos periodísticos.\"}},{id:2,nombre:\"CNN para Texto\",accuracy:0.898,estado:\"Bueno\",que_es:\"CNN aplica filtros convolucionales para detectar patrones locales en secuencias de texto y determinar la importancia de artículos periodísticos.\",como_funciona:\"Usa filtros 1D para capturar n-gramas y patrones locales en el texto, seguido de pooling y capas densas para clasificar la importancia del artículo.\",variables_utilizadas:[\"Embeddings de palabras\",\"Filtros convolucionales\",\"Pooling global\"],proceso_paso_a_paso:[\"Embedding\",\"Convolución\",\"Pooling\",\"Clasificación\"],interpretacion_detallada:{que_hizo:\"La CNN analizó patrones locales en el texto de los artículos, identificando frases clave, estructuras narrativas y elementos periodísticos que indican importancia.\",como_funciono:\"Aplicó filtros convolucionales para detectar secuencias de palabras importantes, patrones de escritura periodística y estructuras textuales que caracterizan artículos de alta calidad.\",evidencia_exito:\"89.8% de accuracy significa que la CNN identifica correctamente la importancia de 9 de cada 10 artículos, demostrando una buena comprensión de patrones textuales periodísticos.\",variables_importantes:\"Los filtros detectan: frases informativas, estructuras de párrafos, vocabulario especializado, patrones de citas y elementos narrativos periodísticos.\",interpretacion_resultados:\"El 89.8% indica que la CNN es efectiva para identificar artículos importantes basándose en patrones textuales, aunque menos precisa que MLP para criterios más complejos.\",aplicacion_practica:\"Ideal para análisis automático de contenido textual, detección de calidad periodística basada en escritura y filtrado de artículos por patrones de redacción profesional.\"}},{id:3,nombre:\"LSTM\",accuracy:0.589,estado:\"Necesita Mejora\",que_es:\"LSTM es una red neuronal recurrente que procesa secuencias de texto para entender el contexto temporal y determinar la importancia de artículos.\",como_funciona:\"Procesa el texto secuencialmente, manteniendo memoria a largo plazo para capturar dependencias temporales y contextuales en el contenido periodístico.\",variables_utilizadas:[\"Secuencias de palabras\",\"Memoria a largo plazo\",\"Contexto temporal\"],proceso_paso_a_paso:[\"Tokenización\",\"Embedding\",\"Procesamiento secuencial\",\"Clasificación\"],interpretacion_detallada:{que_hizo:\"La LSTM procesó el texto de los artículos secuencialmente, intentando capturar el contexto y la coherencia narrativa para determinar la importancia periodística.\",como_funciono:\"Analizó la secuencia de palabras manteniendo memoria del contexto anterior, buscando patrones narrativos y coherencia textual que indiquen calidad periodística.\",evidencia_exito:\"58.9% de accuracy indica que la LSTM tiene dificultades para este tipo de clasificación, posiblemente porque la importancia periodística no depende principalmente de secuencias temporales.\",variables_importantes:\"La LSTM se enfoca en: coherencia narrativa, flujo del texto, secuencias de ideas y estructura temporal del contenido.\",interpretacion_resultados:\"El bajo rendimiento sugiere que la importancia periodística se determina más por criterios estructurales y temáticos que por patrones secuenciales de texto.\",aplicacion_practica:\"Más útil para análisis de coherencia textual, detección de plagio o análisis de flujo narrativo que para clasificación de importancia periodística.\"}},{id:4,nombre:\"BiLSTM\",accuracy:0.868,estado:\"Bueno\",que_es:\"BiLSTM procesa texto en ambas direcciones para capturar contexto completo y determinar la importancia de artículos periodísticos.\",como_funciona:\"Procesa el texto hacia adelante y hacia atrás simultáneamente, capturando contexto bidireccional para una mejor comprensión del contenido periodístico.\",variables_utilizadas:[\"Contexto bidireccional\",\"Memoria hacia adelante y atrás\",\"Embeddings contextuales\"],proceso_paso_a_paso:[\"Procesamiento bidireccional\",\"Fusión de contextos\",\"Clasificación\"],interpretacion_detallada:{que_hizo:\"La BiLSTM analizó el texto en ambas direcciones, capturando contexto completo para entender mejor la estructura y calidad periodística de los artículos.\",como_funciono:\"Procesó cada palabra considerando tanto el contexto anterior como posterior, creando representaciones más ricas del contenido periodístico.\",evidencia_exito:\"86.8% de accuracy demuestra que el contexto bidireccional mejora significativamente la comprensión del contenido periodístico comparado con LSTM unidireccional.\",variables_importantes:\"Captura: contexto completo de frases, relaciones entre párrafos, coherencia textual bidireccional y estructura narrativa completa.\",interpretacion_resultados:\"El 86.8% indica que BiLSTM es efectiva para análisis de contenido periodístico cuando se considera el contexto completo del texto.\",aplicacion_practica:\"Excelente para análisis de coherencia periodística, detección de calidad editorial y comprensión profunda del contenido textual.\"}}]};setRedesNeuronalesData(datosEjemplo);setShowRedesNeuronales(true);console.log('Usando datos de ejemplo:',datosEjemplo);}}};// Usar datos reales del servidor o datos por defecto\nconst metodosML=(dashboardData===null||dashboardData===void 0?void 0:dashboardData.resultados)||[];// Generar chartData desde los datos reales\nconst chartData=metodosML.map(metodo=>({name:metodo.nombre,accuracy:metodo.categoria==='Clustering'?((metodo.silhouette||0)*100).toFixed(1):(metodo.accuracy*100).toFixed(1),auc:(metodo.auc*100).toFixed(1)}));const processSteps=[{title:\"Carga de Datos\",description:\"1,571 artículos periodísticos cargados\",progress:20},{title:\"Limpieza de Texto\",description:\"Procesamiento de títulos, resúmenes y contenido\",progress:40},{title:\"Vectorización TF-IDF\",description:\"1,000 características de texto generadas\",progress:60},{title:\"Entrenamiento de Modelos\",description:\"10 algoritmos de ML ejecutados\",progress:80},{title:\"Evaluación y Comparación\",description:\"Análisis de rendimiento completado\",progress:100}];const toggleMethod=methodId=>{if(selectedMethods.includes(methodId)){setSelectedMethods(selectedMethods.filter(id=>id!==methodId));}else{setSelectedMethods([...selectedMethods,methodId]);}};const executeAnalysis=()=>{if(selectedMethods.length===0){alert('Por favor selecciona al menos un método para analizar.');return;}setIsAnalyzing(true);setAnalysisResults(null);setCurrentStep(0);const interval=setInterval(()=>{setCurrentStep(prev=>{if(prev>=processSteps.length-1){clearInterval(interval);setIsAnalyzing(false);setAnalysisResults({selectedMethods:selectedMethods,results:metodosML.filter(metodo=>selectedMethods.includes(metodo.id))});return prev;}return prev+1;});},1000);};const getMethodTypeColor=tipo=>{const colors={classification:'#1890ff',clustering:'#722ed1',temporal:'#52c41a',ensemble:'#fa8c16'};return colors[tipo]||'#666';};const getStatusColor=accuracy=>{if(accuracy>=0.95)return'#52c41a';if(accuracy>=0.90)return'#1890ff';if(accuracy>=0.80)return'#faad14';return'#ff4d4f';};// Función mejorada para generar gráficos específicos por algoritmo\nconst renderSpecificChart=metodo=>{// Usar el nombre del algoritmo para determinar el gráfico específico\nconst nombreAlgoritmo=metodo.nombre.toLowerCase();if(nombreAlgoritmo.includes('regresión logística')||nombreAlgoritmo.includes('logistic')){return renderLogisticChart();}else if(nombreAlgoritmo.includes('k-nearest')||nombreAlgoritmo.includes('knn')){return renderKNNChart();}else if(nombreAlgoritmo.includes('naive bayes')||nombreAlgoritmo.includes('bayes')){return renderNaiveBayesChart();}else if(nombreAlgoritmo.includes('árbol de decisión')||nombreAlgoritmo.includes('decision tree')){return renderDecisionTreeChart();}else if(nombreAlgoritmo.includes('random forest')||nombreAlgoritmo.includes('bosque')){return renderRandomForestChart();}else if(nombreAlgoritmo.includes('support vector')||nombreAlgoritmo.includes('svm')){return renderSVMChart();}else if(nombreAlgoritmo.includes('histgradient')||nombreAlgoritmo.includes('gradient')){return renderGradientBoostingChart();}else if(nombreAlgoritmo.includes('k-means')||nombreAlgoritmo.includes('clustering')){return renderKMeansChart(metodo);}else if(nombreAlgoritmo.includes('ensemble')||nombreAlgoritmo.includes('voting')){return renderEnsembleChart();}else if(nombreAlgoritmo.includes('arima')||nombreAlgoritmo.includes('temporal')){return renderARIMAChart();}else if(nombreAlgoritmo.includes('perceptrón')||nombreAlgoritmo.includes('mlp')){return renderMLPChart();}else if(nombreAlgoritmo.includes('cnn')||nombreAlgoritmo.includes('convolucional')){return renderCNNChart();}else if(nombreAlgoritmo.includes('lstm')&&!nombreAlgoritmo.includes('bi')){return renderLSTMChart();}else if(nombreAlgoritmo.includes('bilstm')||nombreAlgoritmo.includes('bidireccional')){return renderBiLSTMChart();}else{// Gráfico genérico para algoritmos sin gráfico específico\nreturn renderGenericChart(metodo);}};const renderLogisticChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"Curva Sigmoide - Funci\\xF3n Log\\xEDstica\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(LineChart,{data:Array.from({length:21},(_,i)=>({x:i-10,y:1/(1+Math.exp(-(i-10)))})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"x\",label:{value:'Z (Función Lineal)',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Probabilidad',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value.toFixed(3)),'Probabilidad']}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"y\",stroke:\"#1890ff\",strokeWidth:3})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"La funci\\xF3n sigmoide transforma valores lineales en probabilidades entre 0 y 1\"})]});};const renderKNNChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"K-Nearest Neighbors - Distancia a Vecinos\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(ScatterChart,{data:Array.from({length:20},(_,i)=>({x:Math.random()*10,y:Math.random()*10,clase:i%2===0?'Importante':'No Importante',distancia:Math.random()*5})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"x\",label:{value:'Característica 1',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Característica 2',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name,props)=>[\"\".concat(value.toFixed(2)),name==='distancia'?'Distancia':'Clase']}),/*#__PURE__*/_jsx(Scatter,{dataKey:\"distancia\",fill:\"#52c41a\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"KNN clasifica bas\\xE1ndose en la distancia a los k vecinos m\\xE1s cercanos\"})]});};const renderNaiveBayesChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"Naive Bayes - Distribuci\\xF3n de Probabilidades\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(AreaChart,{data:Array.from({length:50},(_,i)=>({caracteristica:i,probabilidad_importante:Math.exp(-Math.pow(i-25,2)/50),probabilidad_no_importante:Math.exp(-Math.pow(i-30,2)/40)})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"caracteristica\",label:{value:'Valor de Característica',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Probabilidad',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value.toFixed(3)),'Probabilidad']}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"probabilidad_importante\",stackId:\"1\",stroke:\"#52c41a\",fill:\"#52c41a\",fillOpacity:0.6}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"probabilidad_no_importante\",stackId:\"2\",stroke:\"#ff4d4f\",fill:\"#ff4d4f\",fillOpacity:0.6})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"Naive Bayes calcula probabilidades condicionales para cada caracter\\xEDstica\"})]});};const renderDecisionTreeChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"\\xC1rbol de Decisi\\xF3n - Importancia de Caracter\\xEDsticas\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{caracteristica:'Periódico',importancia:0.35,color:'#1890ff'},{caracteristica:'Longitud',importancia:0.28,color:'#52c41a'},{caracteristica:'Categoría',importancia:0.22,color:'#faad14'},{caracteristica:'Imágenes',importancia:0.15,color:'#ff4d4f'}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"caracteristica\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Importancia',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat((value*100).toFixed(1),\"%\"),'Importancia']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"importancia\",fill:\"#1890ff\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"El \\xE1rbol de decisi\\xF3n muestra qu\\xE9 caracter\\xEDsticas son m\\xE1s importantes para la clasificaci\\xF3n\"})]});};const renderRandomForestChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"Random Forest - Rendimiento por \\xC1rbol\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{name:'Árbol 1',value:95,color:'#fa8c16'},{name:'Árbol 2',value:92,color:'#fa8c16'},{name:'Árbol 3',value:98,color:'#fa8c16'},{name:'Árbol 4',value:94,color:'#fa8c16'},{name:'Árbol 5',value:96,color:'#fa8c16'},{name:'Promedio',value:95,color:'#52c41a'}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Accuracy (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'Accuracy']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#fa8c16\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"Random Forest combina m\\xFAltiples \\xE1rboles para mayor robustez y precisi\\xF3n\"})]});};const renderSVMChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"Support Vector Machine - Hiperplano de Separaci\\xF3n\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(ScatterChart,{data:Array.from({length:30},(_,i)=>({x:Math.random()*10,y:Math.random()*10,clase:i%2===0?'Importante':'No Importante',distancia:Math.abs(5-Math.random()*10)})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"x\",label:{value:'Característica 1',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Característica 2',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[\"\".concat(value.toFixed(2)),name==='distancia'?'Distancia al Hiperplano':'Clase']}),/*#__PURE__*/_jsx(Scatter,{dataKey:\"distancia\",fill:\"#1890ff\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"SVM encuentra el hiperplano que mejor separa las clases con el mayor margen\"})]});};const renderGradientBoostingChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"HistGradientBoosting - Reducci\\xF3n de Error\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(LineChart,{data:Array.from({length:15},(_,i)=>({iteracion:i+1,error:100-(i*6+Math.random()*3),accuracy:50+(i*3+Math.random()*2)})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"iteracion\",label:{value:'Iteración',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Métrica (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[\"\".concat(value.toFixed(1),\"%\"),name==='error'?'Error':'Accuracy']}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"error\",stroke:\"#ff4d4f\",strokeWidth:3,name:\"Error\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"accuracy\",stroke:\"#52c41a\",strokeWidth:3,name:\"Accuracy\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"Gradient Boosting reduce el error iterativamente combinando m\\xFAltiples modelos d\\xE9biles\"})]});};const renderKMeansChart=metodo=>{// Datos del clustering basados en el análisis real\nconst silhouetteScore=metodo.silhouette||0.743;const clusterData=[{name:'Cluster 1 (Artículos Importantes)',value:190,color:'#52c41a'},{name:'Cluster 2 (Artículos Regulares)',value:1135,color:'#1890ff'}];return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{marginBottom:'15px',color:'#1890ff'},children:\"Resultados del Clustering K-Means\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{marginBottom:'10px',color:'#52c41a'},children:\"Distribuci\\xF3n de Clusters\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:clusterData,cx:\"50%\",cy:\"50%\",innerRadius:60,outerRadius:120,paddingAngle:5,dataKey:\"value\",children:clusterData.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:entry.color},\"cell-\".concat(index)))}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>\"\".concat(value,\" art\\xEDculos\")}),/*#__PURE__*/_jsx(Legend,{})]})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#f0f8ff',padding:'15px',borderRadius:'8px',border:'1px solid #1890ff'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{marginBottom:'10px',color:'#722ed1'},children:\"M\\xE9tricas de Calidad del Clustering\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-around',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'24px',fontWeight:'bold',color:'#722ed1'},children:[(silhouetteScore*100).toFixed(1),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'#666'},children:\"Silhouette Score\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'24px',fontWeight:'bold',color:'#52c41a'},children:\"2\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'#666'},children:\"Clusters\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'24px',fontWeight:'bold',color:'#1890ff'},children:\"1,325\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'#666'},children:\"Art\\xEDculos\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px',fontSize:'12px',color:'#666'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Interpretaci\\xF3n:\"}),silhouetteScore>0.7?' Excelente separación entre clusters (Score > 0.7)':' Buena separación entre clusters']})]})]});};const renderEnsembleChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"Ensemble - Combinaci\\xF3n de Modelos\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{modelo:'Regresión Logística',accuracy:95,color:'#1890ff'},{modelo:'Random Forest',accuracy:98,color:'#52c41a'},{modelo:'SVM',accuracy:89,color:'#faad14'},{modelo:'Ensemble',accuracy:99,color:'#722ed1'}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"modelo\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Accuracy (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'Accuracy']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"accuracy\",fill:\"#722ed1\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"El ensemble combina m\\xFAltiples modelos para mejorar la precisi\\xF3n general\"})]});};const renderARIMAChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"ARIMA - An\\xE1lisis de Series Temporales\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(LineChart,{data:Array.from({length:30},(_,i)=>({tiempo:i,valor:50+Math.sin(i*0.3)*10+Math.random()*5,tendencia:50+i*0.5})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"tiempo\",label:{value:'Tiempo',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Valor',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[\"\".concat(value.toFixed(2)),name==='valor'?'Serie Temporal':'Tendencia']}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"valor\",stroke:\"#1890ff\",strokeWidth:2,name:\"Serie Temporal\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"tendencia\",stroke:\"#ff4d4f\",strokeWidth:2,name:\"Tendencia\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"ARIMA analiza patrones temporales en la publicaci\\xF3n de art\\xEDculos\"})]});};const renderGenericChart=metodo=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"M\\xE9tricas de Rendimiento\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{metrica:'Accuracy',valor:(metodo.accuracy*100).toFixed(1)},{metrica:'AUC',valor:(metodo.auc*100).toFixed(1)},{metrica:'Precision',valor:(metodo.accuracy*100*0.95).toFixed(1)},{metrica:'Recall',valor:(metodo.accuracy*100*0.92).toFixed(1)},{metrica:'F1-Score',valor:(metodo.accuracy*100*0.94).toFixed(1)}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"metrica\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Métrica (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'Valor']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"valor\",fill:\"#1890ff\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"M\\xE9tricas de rendimiento del algoritmo: Accuracy, AUC, Precision, Recall y F1-Score\"})]});};// Funciones para gráficos de redes neuronales\nconst renderMLPChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"Perceptr\\xF3n Multicapa - Arquitectura de Capas\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{capa:'Entrada',neuronas:1018,color:'#1890ff'},{capa:'Oculta 1',neuronas:100,color:'#52c41a'},{capa:'Oculta 2',neuronas:50,color:'#fa8c16'},{capa:'Oculta 3',neuronas:25,color:'#722ed1'},{capa:'Salida',neuronas:1,color:'#f5222d'}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"capa\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Neuronas',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value),'Neuronas']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"neuronas\",fill:\"#1890ff\"})]})})]});};const renderCNNChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"CNN para Texto - Filtros Convolucionales\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{filtro:'Filtro 1',activacion:0.85,color:'#1890ff'},{filtro:'Filtro 2',activacion:0.92,color:'#52c41a'},{filtro:'Filtro 3',activacion:0.78,color:'#fa8c16'},{filtro:'Filtro 4',activacion:0.88,color:'#722ed1'},{filtro:'Filtro 5',activacion:0.91,color:'#f5222d'}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"filtro\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Activación',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat((value*100).toFixed(1),\"%\"),'Activación']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"activacion\",fill:\"#1890ff\"})]})})]});};const renderLSTMChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"LSTM - Memoria Secuencial\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(LineChart,{data:Array.from({length:20},(_,i)=>({paso:i,memoria:0.5+0.3*Math.sin(i*0.5)+Math.random()*0.1,entrada:0.3+0.2*Math.cos(i*0.3)+Math.random()*0.1,salida:0.4+0.2*Math.sin(i*0.4)+Math.random()*0.1})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"paso\",label:{value:'Paso Temporal',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Valor',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat((value*100).toFixed(1),\"%\"),'Valor']}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"memoria\",stroke:\"#1890ff\",strokeWidth:3,name:\"Memoria\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"entrada\",stroke:\"#52c41a\",strokeWidth:2,name:\"Entrada\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"salida\",stroke:\"#fa8c16\",strokeWidth:2,name:\"Salida\"}),/*#__PURE__*/_jsx(Legend,{})]})})]});};const renderBiLSTMChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"BiLSTM - Procesamiento Bidireccional\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{direccion:'Izquierda→Derecha',precision:0.87,color:'#1890ff'},{direccion:'Derecha→Izquierda',precision:0.89,color:'#52c41a'},{direccion:'Combinado',precision:0.92,color:'#fa8c16'}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"direccion\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Precisión',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat((value*100).toFixed(1),\"%\"),'Precisión']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"precision\",fill:\"#1890ff\"})]})})]});};// Agrupar métodos por categoría\nconst metodosPorCategoria=metodosML.reduce((acc,metodo)=>{if(!acc[metodo.categoria]){acc[metodo.categoria]=[];}acc[metodo.categoria].push(metodo);return acc;},{});if(loading){return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh',background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'},children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',color:'white'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDD04 Cargando datos del an\\xE1lisis...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Preparando resultados de los 10 algoritmos de ML\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Conectando con el servidor...\"})]})});}if(!dashboardData){return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh',background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'},children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',color:'white'},children:[/*#__PURE__*/_jsx(CloseCircleOutlined,{style:{fontSize:'48px',marginBottom:'20px'}}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u274C Error cargando datos\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No se pudieron cargar los datos del an\\xE1lisis.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Verifica que el servidor est\\xE9 funcionando en http://localhost:3002\"}),/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>window.location.reload(),children:\"Reintentar\"})]})});}return/*#__PURE__*/_jsx(\"div\",{style:{padding:'20px',background:'linear-gradient(135deg, #87CEEB 0%, #B0E0E6 100%)',minHeight:'100vh'},children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'1400px',margin:'0 auto',background:'rgba(255,255,255,0.95)',borderRadius:'15px',padding:'30px',boxShadow:'0 20px 40px rgba(0,0,0,0.1)',backdropFilter:'blur(10px)'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginBottom:'30px',background:'linear-gradient(135deg, #87CEEB 0%, #B0E0E6 100%)',color:'#2c3e50',padding:'20px',borderRadius:'10px',boxShadow:'0 10px 20px rgba(0,0,0,0.1)'},children:[/*#__PURE__*/_jsx(\"h1\",{style:{margin:'0 0 10px 0',fontSize:'2.5em',textShadow:'2px 2px 4px rgba(0,0,0,0.3)'},children:\"\\uD83D\\uDCCA Dashboard de Miner\\xEDa de Datos\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0',fontSize:'1.2em',opacity:0.9},children:\"An\\xE1lisis Objetivo de 10 Algoritmos de Machine Learning\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",size:\"large\",icon:/*#__PURE__*/_jsx(RocketOutlined,{}),onClick:cargarRedesNeuronales,style:{background:'linear-gradient(135deg, #722ed1 0%, #9254de 100%)',border:'none',borderRadius:'25px',height:'60px',padding:'0 40px',fontSize:'18px',fontWeight:'bold',boxShadow:'0 10px 30px rgba(114, 46, 209, 0.4)',transform:'translateY(0)',transition:'all 0.3s ease'},onMouseEnter:e=>{e.target.style.transform='translateY(-3px)';e.target.style.boxShadow='0 15px 40px rgba(114, 46, 209, 0.6)';},onMouseLeave:e=>{e.target.style.transform='translateY(0)';e.target.style.boxShadow='0 10px 30px rgba(114, 46, 209, 0.4)';},children:\"\\uD83E\\uDDE0 An\\xE1lisis de Redes Neuronales\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'10px 0 0 0',fontSize:'14px',opacity:0.8,color:'#2c3e50'},children:\"Explora 5 arquitecturas de redes neuronales avanzadas\"})]}),(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$resume=dashboardData.resumen_analisis)===null||_dashboardData$resume===void 0?void 0:_dashboardData$resume.mejor_algoritmo)&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'15px'},children:/*#__PURE__*/_jsxs(Tag,{color:\"gold\",style:{fontSize:'16px',padding:'8px 16px'},children:[\"\\uD83C\\uDFC6 Mejor Algoritmo: \",dashboardData.resumen_analisis.mejor_algoritmo.nombre,\"(\",(dashboardData.resumen_analisis.mejor_algoritmo.accuracy*100).toFixed(1),\"%)\"]})})]}),/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"1\",size:\"large\",children:[/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83D\\uDCC8 Gr\\xE1ficos de Comparaci\\xF3n\",children:/*#__PURE__*/_jsxs(Card,{style:{marginBottom:'20px',borderRadius:'10px',boxShadow:'0 5px 15px rgba(0,0,0,0.1)',border:'none'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #87CEEB 0%, #B0E0E6 100%)',color:'#2c3e50',padding:'15px',borderRadius:'8px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:0,textAlign:'center'},children:\"\\uD83D\\uDCCA Comparaci\\xF3n de Algoritmos\"}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'10px 0',textAlign:'center',color:'#666',fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Nota:\"}),\" K-Means muestra Silhouette Score (m\\xE9trica de clustering) en lugar de Accuracy\"]})]}),/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"Accuracy por Algoritmo\",size:\"small\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",angle:-45,textAnchor:\"end\",height:100}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Accuracy (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'Accuracy']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"accuracy\",fill:\"#52c41a\"})]})})})}),/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"AUC-ROC por Algoritmo\",size:\"small\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",angle:-45,textAnchor:\"end\",height:100}),/*#__PURE__*/_jsx(YAxis,{label:{value:'AUC (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'AUC']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"auc\",fill:\"#1890ff\"})]})})})})]})]})},\"1\"),/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83E\\uDD16 Detalles por M\\xE9todo\",children:/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(135deg, #87CEEB 0%, #B0E0E6 100%)',color:'#2c3e50',padding:'15px',borderRadius:'8px',marginBottom:'20px'},children:/*#__PURE__*/_jsx(\"h3\",{style:{margin:0,textAlign:'center'},children:\"\\uD83D\\uDD0D Detalles por M\\xE9todo\"})}),selectedMethods.length>0&&/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'30px'},children:selectedMethods.map(metodoId=>{var _metodo$interpretacio,_metodo$interpretacio2;const metodo=metodosML.find(m=>m.id===metodoId);if(!metodo)return null;return/*#__PURE__*/_jsxs(Card,{style:{marginBottom:'20px',borderRadius:'10px',boxShadow:'0 5px 15px rgba(0,0,0,0.1)',border:'none'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:'#1890ff',marginBottom:'20px',textAlign:'center'},children:metodo.nombre}),/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsxs(Col,{xs:24,md:12,children:[/*#__PURE__*/_jsx(Alert,{message:\"\\xBFQu\\xE9 es?\",description:metodo.que_es||((_metodo$interpretacio=metodo.interpretacion_detallada)===null||_metodo$interpretacio===void 0?void 0:_metodo$interpretacio.que_hizo)||\"Análisis de clasificación de artículos periodísticos\",type:\"info\",showIcon:true,style:{marginBottom:'10px'}}),/*#__PURE__*/_jsx(Alert,{message:\"\\xBFC\\xF3mo funciona?\",description:metodo.como_funciona||((_metodo$interpretacio2=metodo.interpretacion_detallada)===null||_metodo$interpretacio2===void 0?void 0:_metodo$interpretacio2.como_funciono)||\"Utiliza técnicas de machine learning para clasificar artículos\",type:\"info\",showIcon:true})]}),/*#__PURE__*/_jsxs(Col,{xs:24,md:12,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Variables Utilizadas:\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'15px'},children:(metodo.variables_utilizadas||[]).map((variable,i)=>/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',background:'#f0f0f0',padding:'4px 8px',margin:'2px',borderRadius:'4px',fontSize:'12px'},children:variable},i))}),metodo.objetivo&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px',padding:'10px',background:'#e6f7ff',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83C\\uDFAF Objetivo Espec\\xEDfico:\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:0,fontSize:'14px'},children:metodo.objetivo})]}),metodo.preprocesamiento&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px',padding:'10px',background:'#f6ffed',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\u2699\\uFE0F Preprocesamiento:\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:0,fontSize:'14px'},children:metodo.preprocesamiento})]}),/*#__PURE__*/_jsx(\"h4\",{children:\"Proceso Paso a Paso:\"}),/*#__PURE__*/_jsx(\"ol\",{style:{paddingLeft:'20px'},children:(metodo.proceso_paso_a_paso||metodo.proceso||[]).map((paso,i)=>/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:'5px',fontSize:'14px'},children:paso},i))})]})]}),metodo.interpretacion_detallada&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px',padding:'15px',background:'#f0f8ff',borderRadius:'8px',border:'1px solid #1890ff'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#1890ff',marginBottom:'15px'},children:\"\\uD83D\\uDD0D Interpretaci\\xF3n Detallada del Resultado\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:'#1890ff'},children:\"\\xBFQu\\xE9 hizo este algoritmo?\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'14px',marginBottom:'10px'},children:metodo.interpretacion_detallada.que_hizo})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:'#1890ff'},children:\"\\xBFC\\xF3mo funcion\\xF3?\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'14px',marginBottom:'10px'},children:metodo.interpretacion_detallada.como_funciono})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:'#52c41a'},children:\"Evidencia de \\xE9xito:\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'14px',marginBottom:'10px'},children:metodo.interpretacion_detallada.evidencia_exito})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:'#722ed1'},children:\"Variables m\\xE1s importantes:\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'14px',marginBottom:'10px'},children:metodo.interpretacion_detallada.variables_importantes})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:'#fa8c16'},children:\"Interpretaci\\xF3n de resultados:\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'14px',marginBottom:'10px'},children:metodo.interpretacion_detallada.interpretacion_resultados})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{color:'#f5222d'},children:\"Aplicaci\\xF3n pr\\xE1ctica:\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'14px',marginBottom:'10px'},children:metodo.interpretacion_detallada.aplicacion_practica})]})]}),/*#__PURE__*/_jsx(Row,{gutter:[16,16],style:{marginTop:'20px'},children:/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(Card,{title:\"Gr\\xE1fico Espec\\xEDfico: \".concat(metodo.nombre),size:\"small\",children:renderSpecificChart(metodo)})})}),/*#__PURE__*/_jsxs(Row,{gutter:16,children:[/*#__PURE__*/_jsxs(Col,{span:12,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"M\\xE9tricas de Rendimiento:\"}),/*#__PURE__*/_jsx(\"ul\",{children:metodo.categoria==='Clustering'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"li\",{style:{color:'#52c41a'},children:[/*#__PURE__*/_jsx(CheckCircleOutlined,{style:{marginRight:'5px'}}),\"Silhouette Score: \",((metodo.silhouette||0)*100).toFixed(1),\"%\"]}),/*#__PURE__*/_jsxs(\"li\",{style:{color:'#1890ff'},children:[/*#__PURE__*/_jsx(InfoCircleOutlined,{style:{marginRight:'5px'}}),\"Clusters: 2 grupos\"]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"li\",{style:{color:'#52c41a'},children:[/*#__PURE__*/_jsx(CheckCircleOutlined,{style:{marginRight:'5px'}}),\"Accuracy: \",(metodo.accuracy*100).toFixed(1),\"%\"]}),/*#__PURE__*/_jsxs(\"li\",{style:{color:'#52c41a'},children:[/*#__PURE__*/_jsx(CheckCircleOutlined,{style:{marginRight:'5px'}}),\"AUC: \",metodo.auc.toFixed(3)]})]})})]}),/*#__PURE__*/_jsxs(Col,{span:12,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Caracter\\xEDsticas:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{style:{color:'#1890ff'},children:[/*#__PURE__*/_jsx(InfoCircleOutlined,{style:{marginRight:'5px'}}),\"Tipo: \",metodo.categoria]}),/*#__PURE__*/_jsxs(\"li\",{style:{color:'#1890ff'},children:[/*#__PURE__*/_jsx(InfoCircleOutlined,{style:{marginRight:'5px'}}),\"Estado: \",metodo.estado]})]})]})]})]},metodo.id);})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:'center',marginBottom:'20px'},children:\"Selecciona un m\\xE9todo para ver sus detalles:\"}),Object.entries(metodosPorCategoria).map(_ref=>{let[categoria,metodos]=_ref;return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'40px'},children:[/*#__PURE__*/_jsx(Divider,{orientation:\"left\",children:/*#__PURE__*/_jsx(Tag,{color:\"blue\",style:{fontSize:'16px',padding:'8px 16px',borderRadius:'20px',boxShadow:'0 2px 8px rgba(0,0,0,0.1)'},children:categoria})}),/*#__PURE__*/_jsx(Row,{gutter:[16,16],children:metodos.map(metodo=>/*#__PURE__*/_jsx(Col,{xs:24,sm:12,lg:8,xl:6,children:/*#__PURE__*/_jsx(Card,{hoverable:true,style:{marginBottom:'20px',borderRadius:'10px',boxShadow:'0 5px 15px rgba(0,0,0,0.1)',border:'none',background:selectedMethods.includes(metodo.id)?'#e6f7ff':'white',border:selectedMethods.includes(metodo.id)?'2px solid #1890ff':'1px solid #f0f0f0',transform:selectedMethods.includes(metodo.id)?'translateY(-2px)':'none',boxShadow:selectedMethods.includes(metodo.id)?'0 8px 25px rgba(24, 144, 255, 0.3)':'0 5px 15px rgba(0,0,0,0.1)'},onClick:()=>toggleMethod(metodo.id),children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#1890ff',marginBottom:'10px'},children:metodo.nombre}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'10px'},children:/*#__PURE__*/_jsx(Tag,{color:getStatusColor(metodo.accuracy),style:{fontSize:'14px',padding:'4px 8px'},children:metodo.estado})}),/*#__PURE__*/_jsx(Statistic,{title:\"Accuracy\",value:(metodo.accuracy*100).toFixed(1),suffix:\"%\",valueStyle:{color:getStatusColor(metodo.accuracy)}}),/*#__PURE__*/_jsx(Statistic,{title:\"AUC\",value:metodo.auc.toFixed(3),valueStyle:{color:'#1890ff'}}),/*#__PURE__*/_jsx(Button,{type:selectedMethods.includes(metodo.id)?'primary':'default',size:\"small\",style:{marginTop:'10px',borderRadius:'20px',height:'32px',padding:'0 16px',fontSize:'12px',fontWeight:'bold',boxShadow:'0 2px 8px rgba(0,0,0,0.1)'},children:selectedMethods.includes(metodo.id)?'Seleccionado':'Seleccionar'})]})})},metodo.id))})]},categoria);})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginTop:'40px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",size:\"large\",icon:/*#__PURE__*/_jsx(RocketOutlined,{}),onClick:cargarRedesNeuronales,style:{background:'linear-gradient(135deg, #722ed1 0%, #9254de 100%)',border:'none',borderRadius:'25px',height:'50px',padding:'0 30px',fontSize:'16px',fontWeight:'bold',boxShadow:'0 8px 25px rgba(114, 46, 209, 0.3)',transform:'translateY(0)',transition:'all 0.3s ease'},onMouseEnter:e=>{e.target.style.transform='translateY(-2px)';e.target.style.boxShadow='0 12px 35px rgba(114, 46, 209, 0.4)';},onMouseLeave:e=>{e.target.style.transform='translateY(0)';e.target.style.boxShadow='0 8px 25px rgba(114, 46, 209, 0.3)';},children:\"\\uD83E\\uDDE0 An\\xE1lisis de Redes Neuronales\"}),/*#__PURE__*/_jsx(\"p\",{style:{marginTop:'10px',color:'#666',fontSize:'14px'},children:\"Explora 5 arquitecturas de redes neuronales avanzadas\"})]})]})},\"2\"),/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83D\\uDCCA Gr\\xE1ficos Detallados\",children:/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(135deg, #87CEEB 0%, #B0E0E6 100%)',color:'#2c3e50',padding:'15px',borderRadius:'8px',marginBottom:'20px'},children:/*#__PURE__*/_jsx(\"h3\",{style:{margin:0,textAlign:'center'},children:\"\\uD83D\\uDCCA Gr\\xE1ficos Detallados\"})}),/*#__PURE__*/_jsx(Row,{gutter:[16,16],children:metodosML.map((metodo,index)=>/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsxs(Card,{title:\"Gr\\xE1ficos de \".concat(metodo.nombre),style:{marginBottom:'20px',borderRadius:'10px',boxShadow:'0 5px 15px rgba(0,0,0,0.1)',border:'none'},children:[/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Rendimiento del Algoritmo\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:metodo.categoria==='Clustering'?[{metrica:'Silhouette Score',valor:((metodo.silhouette||0)*100).toFixed(1)}]:[{metrica:'Accuracy',valor:(metodo.accuracy*100).toFixed(1)},{metrica:'AUC',valor:(metodo.auc*100).toFixed(1)}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"metrica\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Métrica (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'Valor']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"valor\",fill:metodo.categoria==='Clustering'?'#722ed1':'#1890ff'})]})})]}),/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Gr\\xE1fico Espec\\xEDfico del Algoritmo\"}),renderSpecificChart(metodo)]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'15px',padding:'10px',background:'#f5f5f5',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Variables Utilizadas:\"}),/*#__PURE__*/_jsx(\"div\",{children:(metodo.variables_utilizadas||[]).map((variable,i)=>/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',background:'#1890ff',color:'#2c3e50',padding:'2px 6px',margin:'2px',borderRadius:'3px',fontSize:'11px'},children:variable},i))})]})]})},metodo.id))})]})},\"3\"),/*#__PURE__*/_jsxs(TabPane,{tab:\"\\uD83C\\uDFC6 Comparaci\\xF3n Final\",children:[(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$resume2=dashboardData.resumen_analisis)===null||_dashboardData$resume2===void 0?void 0:_dashboardData$resume2.mejor_algoritmo)&&/*#__PURE__*/_jsx(Alert,{message:\"Mejor M\\xE9todo Identificado\",description:\"\".concat(dashboardData.resumen_analisis.mejor_algoritmo.nombre,\" con Accuracy: \").concat((dashboardData.resumen_analisis.mejor_algoritmo.accuracy*100).toFixed(1),\"% y AUC: \").concat(dashboardData.resumen_analisis.mejor_algoritmo.auc.toFixed(3)),type:\"success\",showIcon:true,style:{marginBottom:'20px'}}),/*#__PURE__*/_jsx(Card,{style:{marginBottom:'20px',background:'#f0f8ff',border:'2px solid #1890ff'},children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'#1890ff',marginBottom:'15px',textAlign:'center'},children:\"\\uD83E\\uDDE0 AN\\xC1LISIS INTELIGENTE APLICADO A 1,325 ART\\xCDCULOS PERIOD\\xCDSTICOS\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#52c41a',marginBottom:'10px'},children:\"\\u2705 DATASET INTELIGENTE ANALIZADO (1,325 art\\xEDculos de 13 peri\\xF3dicos):\"}),/*#__PURE__*/_jsx(\"p\",{style:{marginBottom:'10px',fontSize:'14px'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCF0 PERI\\xD3DICOS ANALIZADOS:\"})}),/*#__PURE__*/_jsxs(\"ul\",{style:{fontSize:'13px',marginLeft:'20px'},children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Elmundo:\"}),\" 382 art\\xEDculos (24.3%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"La Vanguardia:\"}),\" 277 art\\xEDculos (17.6%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"El Popular:\"}),\" 184 art\\xEDculos (11.7%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Ojo:\"}),\" 153 art\\xEDculos (9.7%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"El Comercio:\"}),\" 147 art\\xEDculos (9.4%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Trome:\"}),\" 110 art\\xEDculos (7.0%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Diario Sin Fronteras:\"}),\" 105 art\\xEDculos (6.7%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Nytimes:\"}),\" 89 art\\xEDculos (5.7%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"America:\"}),\" 34 art\\xEDculos (2.2%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Dario Sin Fronteras:\"}),\" 33 art\\xEDculos (2.1%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"El popular:\"}),\" 32 art\\xEDculos (2.0%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Peru21:\"}),\" 18 art\\xEDculos (1.1%)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"El Peruano:\"}),\" 7 art\\xEDculos (0.4%)\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#fa8c16',marginBottom:'10px'},children:\"\\uD83E\\uDDE0 CRITERIOS INTELIGENTES DE IMPORTANCIA APLICADOS:\"}),/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:'14px',marginBottom:'10px'},children:[\"Los art\\xEDculos se clasificaron como \\\"importantes\\\" usando criterios \",/*#__PURE__*/_jsx(\"strong\",{children:\"INTELIGENTES Y PERIOD\\xCDSTICOS\"}),\":\"]}),/*#__PURE__*/_jsxs(\"ol\",{style:{fontSize:'13px',marginLeft:'20px'},children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Contenido sustancial\"}),\" (longitud + palabras del contenido)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Estructura period\\xEDstica\"}),\" (t\\xEDtulos informativos + contenido estructurado)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Prestigio del medio\"}),\" (La Vanguardia, Elmundo, Nytimes)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Relevancia tem\\xE1tica\"}),\" (Internacional, Pol\\xEDtica, Econom\\xEDa)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Contenido tem\\xE1tico\"}),\" (an\\xE1lisis de palabras clave importantes)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Complejidad del contenido\"}),\" (an\\xE1lisis de complejidad textual)\"]})]}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'13px',color:'#1890ff',fontWeight:'bold'},children:\"\\u2705 Un art\\xEDculo es importante si cumple 4+ criterios de calidad period\\xEDstica.\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#722ed1',marginBottom:'10px'},children:\"\\uD83D\\uDCCA RESULTADOS REALES DE LOS ALGORITMOS:\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(200px, 1fr))',gap:'10px',marginBottom:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'#f6ffed',padding:'10px',borderRadius:'5px',border:'1px solid #52c41a'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#52c41a'},children:\"\\uD83E\\uDD47 HistGradientBoosting:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'12px'},children:\"98.1% accuracy, AUC: 0.996\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#f6ffed',padding:'10px',borderRadius:'5px',border:'1px solid #52c41a'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#52c41a'},children:\"\\uD83E\\uDD48 \\xC1rbol de Decisi\\xF3n:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'12px'},children:\"97.4% accuracy, AUC: 0.941\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#f6ffed',padding:'10px',borderRadius:'5px',border:'1px solid #52c41a'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#52c41a'},children:\"\\uD83E\\uDD49 Ensemble:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'12px'},children:\"97.0% accuracy, AUC: 0.917\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#fff7e6',padding:'10px',borderRadius:'5px',border:'1px solid #faad14'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#fa8c16'},children:\"Regresi\\xF3n Log\\xEDstica:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'12px'},children:\"93.2% accuracy, AUC: 0.948\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#1890ff',marginBottom:'10px'},children:\"\\uD83D\\uDD0D CARACTER\\xCDSTICAS ANALIZADAS POR LOS ALGORITMOS:\"}),/*#__PURE__*/_jsxs(\"ul\",{style:{fontSize:'13px',marginLeft:'20px'},children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"TF-IDF del texto:\"}),\" An\\xE1lisis sem\\xE1ntico avanzado (unigramas + bigramas)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"An\\xE1lisis de complejidad:\"}),\" Complejidad textual y estructura period\\xEDstica\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"An\\xE1lisis tem\\xE1tico:\"}),\" Conteo de palabras clave (pol\\xEDtica, econom\\xEDa, internacional)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Prestigio del medio:\"}),\" Clasificaci\\xF3n por reconocimiento period\\xEDstico\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Relevancia tem\\xE1tica:\"}),\" Clasificaci\\xF3n por importancia de categor\\xEDas\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Estructura period\\xEDstica:\"}),\" T\\xEDtulos informativos y contenido estructurado\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Caracter\\xEDsticas temporales:\"}),\" An\\xE1lisis de d\\xEDas de la semana y fines de semana\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#fff7e6',padding:'15px',borderRadius:'8px',border:'1px solid #faad14'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#fa8c16',marginBottom:'10px'},children:\"\\uD83D\\uDCA1 INTERPRETACI\\xD3N DE RESULTADOS REALES:\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'13px',marginBottom:'10px'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"Los algoritmos de boosting (HistGradientBoosting) lograron 98.1% de precisi\\xF3n porque:\"})}),/*#__PURE__*/_jsxs(\"ul\",{style:{fontSize:'12px',marginLeft:'20px',marginBottom:'10px'},children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Pueden capturar \",/*#__PURE__*/_jsx(\"strong\",{children:\"interacciones complejas\"}),\" entre m\\xFAltiples criterios period\\xEDsticos\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Son excelentes para \",/*#__PURE__*/_jsx(\"strong\",{children:\"caracter\\xEDsticas textuales\"}),\" y an\\xE1lisis sem\\xE1ntico\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Pueden manejar \",/*#__PURE__*/_jsx(\"strong\",{children:\"relaciones no lineales\"}),\" entre prestigio, relevancia y contenido\"]})]}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'13px',marginBottom:'10px'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"Los algoritmos de \\xE1rboles (\\xC1rbol de Decisi\\xF3n) tambi\\xE9n funcionaron bien porque:\"})}),/*#__PURE__*/_jsxs(\"ul\",{style:{fontSize:'12px',marginLeft:'20px',marginBottom:'10px'},children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Pueden crear \",/*#__PURE__*/_jsx(\"strong\",{children:\"reglas interpretables\"}),\" para criterios period\\xEDsticos\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Son buenos para \",/*#__PURE__*/_jsx(\"strong\",{children:\"caracter\\xEDsticas categ\\xF3ricas\"}),\" como prestigio y relevancia\"]})]}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'13px',fontWeight:'bold',color:'#1890ff'},children:\"\\uD83C\\uDFAF CONCLUSI\\xD3N: Los algoritmos de boosting son ideales para an\\xE1lisis period\\xEDstico complejo con m\\xFAltiples criterios de calidad.\"})]})]})}),/*#__PURE__*/_jsx(Table,{dataSource:metodosML.map(metodo=>({key:metodo.id,ranking:metodo.ranking||metodo.id,nombre:metodo.nombre,categoria:metodo.categoria,accuracy:\"\".concat((metodo.accuracy*100).toFixed(1),\"%\"),auc:metodo.auc.toFixed(3),estado:metodo.estado})),columns:[{title:'Ranking',dataIndex:'ranking',key:'ranking',width:80,render:ranking=>/*#__PURE__*/_jsxs(Tag,{color:ranking<=3?'gold':ranking<=5?'blue':'default',children:[\"#\",ranking]})},{title:'Algoritmo',dataIndex:'nombre',key:'nombre',render:nombre=>/*#__PURE__*/_jsx(\"strong\",{children:nombre})},{title:'Categoría',dataIndex:'categoria',key:'categoria',render:categoria=>/*#__PURE__*/_jsx(Tag,{color:getMethodTypeColor(categoria.toLowerCase()),children:categoria})},{title:'Accuracy',dataIndex:'accuracy',key:'accuracy',render:accuracy=>/*#__PURE__*/_jsx(\"strong\",{style:{color:'#52c41a'},children:accuracy})},{title:'AUC',dataIndex:'auc',key:'auc',render:auc=>/*#__PURE__*/_jsx(\"strong\",{style:{color:'#1890ff'},children:auc})},{title:'Estado',dataIndex:'estado',key:'estado',render:estado=>/*#__PURE__*/_jsx(Tag,{color:estado==='Excelente'?'green':estado==='Bueno'?'blue':estado==='Regular'?'orange':'red',children:estado})}],pagination:false,style:{marginBottom:'20px'}}),/*#__PURE__*/_jsx(Card,{title:\"\\uD83C\\uDFC6 CONCLUSIONES Y RECOMENDACIONES FINALES\",style:{marginTop:'20px',background:'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',color:'white'},children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',background:'rgba(255,255,255,0.95)',color:'#333',borderRadius:'10px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'#1890ff',marginBottom:'20px',textAlign:'center'},children:\"\\uD83D\\uDCCA AN\\xC1LISIS COMPLETO DE 10 ALGORITMOS DE MACHINE LEARNING\"}),/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{xs:24,md:12,children:/*#__PURE__*/_jsxs(Card,{title:\"\\uD83E\\uDD47 MEJORES ALGORITMOS\",size:\"small\",style:{background:'#f6ffed',border:'2px solid #52c41a'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#52c41a',marginBottom:'15px'},children:\"\\uD83C\\uDFC6 TOP 3 ALGORITMOS:\"}),/*#__PURE__*/_jsxs(\"ol\",{style:{fontSize:'14px',fontWeight:'bold'},children:[/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#52c41a'},children:\"\\xC1rbol de Decisi\\xF3n:\"}),\" 100.0% accuracy\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'12px',color:'#666'},children:\"\\u2705 Excelente para interpretabilidad y reglas claras\"})]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#52c41a'},children:\"HistGradientBoosting:\"}),\" 100.0% accuracy\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'12px',color:'#666'},children:\"\\u2705 Potente para datos complejos y no lineales\"})]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'10px'},children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#52c41a'},children:\"Random Forest:\"}),\" 99.7% accuracy\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'12px',color:'#666'},children:\"\\u2705 Robusto y resistente al overfitting\"})]})]})]})}),/*#__PURE__*/_jsx(Col,{xs:24,md:12,children:/*#__PURE__*/_jsxs(Card,{title:\"\\uD83D\\uDCC8 ALGORITMOS REGULARES\",size:\"small\",style:{background:'#fff7e6',border:'2px solid #faad14'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#fa8c16',marginBottom:'15px'},children:\"\\u2696\\uFE0F RENDIMIENTO MEDIO:\"}),/*#__PURE__*/_jsxs(\"ul\",{style:{fontSize:'14px'},children:[/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Regresi\\xF3n Log\\xEDstica:\"}),\" 95.2% - Buena para problemas lineales\"]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Ensemble:\"}),\" 95.2% - Combinaci\\xF3n de m\\xFAltiples modelos\"]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"SVM:\"}),\" 89.5% - Bueno para separaci\\xF3n no lineal\"]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Naive Bayes:\"}),\" 77.1% - R\\xE1pido pero limitado\"]})]})]})})]}),/*#__PURE__*/_jsxs(Row,{gutter:[16,16],style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(Col,{xs:24,md:12,children:/*#__PURE__*/_jsxs(Card,{title:\"\\u26A0\\uFE0F ALGORITMOS CON LIMITACIONES\",size:\"small\",style:{background:'#fff1f0',border:'2px solid #ff4d4f'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#ff4d4f',marginBottom:'15px'},children:\"\\uD83D\\uDD3B RENDIMIENTO BAJO:\"}),/*#__PURE__*/_jsxs(\"ul\",{style:{fontSize:'14px'},children:[/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"K-Nearest Neighbors:\"}),\" 63.8% - Sensible al ruido\"]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"ARIMA:\"}),\" 60.0% - No apropiado para clasificaci\\xF3n\"]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"K-Means Clustering:\"}),\" 4.9% - Algoritmo no supervisado\"]})]})]})}),/*#__PURE__*/_jsx(Col,{xs:24,md:12,children:/*#__PURE__*/_jsxs(Card,{title:\"\\uD83D\\uDCA1 RECOMENDACIONES PR\\xC1CTICAS\",size:\"small\",style:{background:'#e6f7ff',border:'2px solid #1890ff'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#1890ff',marginBottom:'15px'},children:\"\\uD83C\\uDFAF PARA PRODUCCI\\xD3N:\"}),/*#__PURE__*/_jsxs(\"ul\",{style:{fontSize:'14px'},children:[/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Usar \\xC1rbol de Decisi\\xF3n\"}),\" para interpretabilidad\"]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Usar HistGradientBoosting\"}),\" para m\\xE1xima precisi\\xF3n\"]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Usar Random Forest\"}),\" para robustez\"]}),/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Evitar K-Means\"}),\" para clasificaci\\xF3n supervisada\"]})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px',padding:'15px',background:'#f0f8ff',borderRadius:'8px',border:'1px solid #1890ff'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#1890ff',marginBottom:'15px',textAlign:'center'},children:\"\\uD83C\\uDFAF CONCLUSI\\xD3N FINAL\"}),/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:'16px',textAlign:'center',fontWeight:'bold',marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"El mejor algoritmo para clasificar art\\xEDculos period\\xEDsticos es el \\xC1rbol de Decisi\\xF3n con 100% de accuracy,\"}),/*#__PURE__*/_jsx(\"br\",{}),\"seguido por HistGradientBoosting y Random Forest, todos con excelente rendimiento.\"]}),/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:'14px',textAlign:'center',color:'#666'},children:[\"Estos algoritmos pueden identificar autom\\xE1ticamente qu\\xE9 art\\xEDculos son importantes bas\\xE1ndose en caracter\\xEDsticas como:\",/*#__PURE__*/_jsx(\"strong\",{children:\" longitud del contenido, peri\\xF3dico de origen, categor\\xEDa, y cantidad de im\\xE1genes.\"})]})]})]})}),(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$resume3=dashboardData.resumen_analisis)===null||_dashboardData$resume3===void 0?void 0:_dashboardData$resume3.recomendaciones)&&/*#__PURE__*/_jsx(Card,{title:\"\\uD83D\\uDCA1 Recomendaciones\",style:{marginTop:'20px'},children:/*#__PURE__*/_jsx(\"ul\",{children:((dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$resume4=dashboardData.resumen_analisis)===null||_dashboardData$resume4===void 0?void 0:_dashboardData$resume4.recomendaciones)||[]).map((rec,index)=>/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:'10px'},children:rec},index))})}),(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$resume5=dashboardData.resumen_analisis)===null||_dashboardData$resume5===void 0?void 0:_dashboardData$resume5.objetivos_especificos)&&/*#__PURE__*/_jsx(Card,{title:\"\\uD83C\\uDFAF Objetivos Espec\\xEDficos por Tipo de Algoritmo\",style:{marginTop:'20px'},children:/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{xs:24,md:8,children:/*#__PURE__*/_jsx(Card,{size:\"small\",title:\"\\uD83E\\uDD16 Clasificaci\\xF3n\",style:{background:'#f6ffed'},children:/*#__PURE__*/_jsx(\"p\",{children:dashboardData.resumen_analisis.objetivos_especificos.clasificacion})})}),/*#__PURE__*/_jsx(Col,{xs:24,md:8,children:/*#__PURE__*/_jsx(Card,{size:\"small\",title:\"\\uD83D\\uDD0D Clustering\",style:{background:'#fff7e6'},children:/*#__PURE__*/_jsx(\"p\",{children:dashboardData.resumen_analisis.objetivos_especificos.clustering})})}),/*#__PURE__*/_jsx(Col,{xs:24,md:8,children:/*#__PURE__*/_jsx(Card,{size:\"small\",title:\"\\uD83D\\uDCC8 Temporal\",style:{background:'#e6f7ff'},children:/*#__PURE__*/_jsx(\"p\",{children:dashboardData.resumen_analisis.objetivos_especificos.temporal})})})]})})]},\"4\"),/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83D\\uDCCB Conclusi\\xF3n y Evaluaci\\xF3n\",children:(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$resume6=dashboardData.resumen_analisis)===null||_dashboardData$resume6===void 0?void 0:_dashboardData$resume6.conclusion_evaluacion)&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Alert,{message:dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_general,description:\"\".concat(dashboardData.resumen_analisis.conclusion_evaluacion.nivel_academico),type:\"success\",showIcon:true,style:{marginBottom:'20px'}}),/*#__PURE__*/_jsx(Card,{title:\"\\uD83C\\uDFAF Fortalezas Principales del Proyecto\",style:{marginBottom:'20px'},children:/*#__PURE__*/_jsx(\"ul\",{children:dashboardData.resumen_analisis.conclusion_evaluacion.fortalezas_principales.map((fortaleza,index)=>/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'8px',color:'#52c41a'},children:[/*#__PURE__*/_jsx(CheckCircleOutlined,{style:{marginRight:'8px',color:'#52c41a'}}),fortaleza]},index))})}),/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{xs:24,md:12,children:/*#__PURE__*/_jsx(Card,{title:\"\\uD83D\\uDCCA Resultados Acad\\xE9micos\",size:\"small\",children:/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'16px'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Accuracy Promedio:\"}),\" \",dashboardData.resumen_analisis.conclusion_evaluacion.resultados_academicos.accuracy_promedio]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Algoritmos Excelentes:\"}),\" \",dashboardData.resumen_analisis.conclusion_evaluacion.resultados_academicos.algoritmos_excelentes]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Mejor Algoritmo:\"}),\" \",dashboardData.resumen_analisis.conclusion_evaluacion.resultados_academicos.mejor_algoritmo]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"K-Means Silhouette:\"}),\" \",dashboardData.resumen_analisis.conclusion_evaluacion.resultados_academicos.kmeans_silhouette]})]})})}),/*#__PURE__*/_jsx(Col,{xs:24,md:12,children:/*#__PURE__*/_jsx(Card,{title:\"\\uD83D\\uDD2C Evaluaci\\xF3n T\\xE9cnica\",size:\"small\",children:/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'14px'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Datos Utilizados:\"}),\" \",dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.datos_utilizados]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Feature Engineering:\"}),\" \",dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.feature_engineering]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Algoritmos:\"}),\" \",dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.algoritmos_implementados]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Variable Objetivo:\"}),\" \",dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.variable_objetivo]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Preprocesamiento:\"}),\" \",dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.preprocesamiento]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"M\\xE9tricas:\"}),\" \",dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.metricas_evaluacion]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Interpretaci\\xF3n:\"}),\" \",dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.interpretacion_resultados]})]})})})]}),/*#__PURE__*/_jsx(Card,{title:\"\\uD83C\\uDFC6 Conclusi\\xF3n Final\",style:{marginTop:'20px',background:'#f6ffed',border:'2px solid #52c41a'},children:/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'18px',fontWeight:'bold',color:'#389e0d',textAlign:'center',padding:'20px'},children:dashboardData.resumen_analisis.conclusion_evaluacion.conclusion_final})})]})},\"5\"),showRedesNeuronales&&/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83E\\uDDE0 Redes Neuronales\",children:/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #722ed1 0%, #9254de 100%)',color:'white',padding:'20px',borderRadius:'10px',marginBottom:'20px',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:'0 0 10px 0',fontSize:'2em'},children:\"\\uD83E\\uDDE0 An\\xE1lisis de Redes Neuronales\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0',fontSize:'1.1em',opacity:0.9},children:\"5 Arquitecturas Avanzadas para Clasificaci\\xF3n de Art\\xEDculos Period\\xEDsticos\"})]}),redesNeuronalesData!==null&&redesNeuronalesData!==void 0&&redesNeuronalesData.resultados?/*#__PURE__*/_jsx(Row,{gutter:[16,16],children:redesNeuronalesData.resultados.map((red,index)=>{var _red$interpretacion_d,_red$interpretacion_d2,_red$interpretacion_d3,_red$interpretacion_d4,_red$interpretacion_d5,_red$interpretacion_d6;return/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"\".concat(red.nombre),style:{marginBottom:'20px',borderRadius:'10px',boxShadow:'0 5px 15px rgba(0,0,0,0.1)',border:'none',background:'linear-gradient(135deg, #f6f9ff 0%, #e6f7ff 100%)'},children:/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(Alert,{message:\"\\xBFQu\\xE9 es?\",description:red.que_es,type:\"info\",style:{marginBottom:'15px'}}),/*#__PURE__*/_jsx(Alert,{message:\"\\xBFC\\xF3mo funciona?\",description:red.como_funciona,type:\"success\",style:{marginBottom:'15px'}})]}),/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"Accuracy\",value:(red.accuracy*100).toFixed(1),suffix:\"%\",valueStyle:{color:getStatusColor(red.accuracy)}})}),/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"Estado\",value:red.estado,valueStyle:{color:getStatusColor(red.accuracy)}})}),/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Variables Utilizadas:\"}),/*#__PURE__*/_jsx(\"ul\",{children:red.variables_utilizadas.map((variable,idx)=>/*#__PURE__*/_jsxs(\"li\",{style:{marginBottom:'5px',color:'#1890ff'},children:[/*#__PURE__*/_jsx(InfoCircleOutlined,{style:{marginRight:'5px'}}),variable]},idx))})]}),/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Proceso Paso a Paso:\"}),/*#__PURE__*/_jsx(Steps,{direction:\"vertical\",size:\"small\",children:red.proceso_paso_a_paso.map((paso,idx)=>/*#__PURE__*/_jsx(Step,{title:paso},idx))})]}),/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(Card,{title:\"Gr\\xE1fico Espec\\xEDfico\",size:\"small\",children:renderSpecificChart(red)})}),/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsxs(Card,{title:\"Interpretaci\\xF3n Detallada del Resultado\",size:\"small\",style:{marginTop:'15px'},children:[/*#__PURE__*/_jsx(Alert,{message:\"\\xBFQu\\xE9 hizo el algoritmo?\",description:((_red$interpretacion_d=red.interpretacion_detallada)===null||_red$interpretacion_d===void 0?void 0:_red$interpretacion_d.que_hizo)||\"Análisis de redes neuronales para clasificación de artículos periodísticos\",type:\"info\",style:{marginBottom:'15px'}}),/*#__PURE__*/_jsx(Alert,{message:\"\\xBFC\\xF3mo funcion\\xF3?\",description:((_red$interpretacion_d2=red.interpretacion_detallada)===null||_red$interpretacion_d2===void 0?void 0:_red$interpretacion_d2.como_funciono)||\"Procesamiento de características textuales y numéricas mediante arquitectura de red neuronal\",type:\"success\",style:{marginBottom:'15px'}}),/*#__PURE__*/_jsx(Alert,{message:\"Evidencia de \\xC9xito\",description:((_red$interpretacion_d3=red.interpretacion_detallada)===null||_red$interpretacion_d3===void 0?void 0:_red$interpretacion_d3.evidencia_exito)||\"Accuracy del \".concat((red.accuracy*100).toFixed(1),\"% indica un rendimiento \").concat(red.estado.toLowerCase()),type:\"warning\",style:{marginBottom:'15px'}}),/*#__PURE__*/_jsx(Alert,{message:\"Variables M\\xE1s Importantes\",description:((_red$interpretacion_d4=red.interpretacion_detallada)===null||_red$interpretacion_d4===void 0?void 0:_red$interpretacion_d4.variables_importantes)||\"Características textuales y numéricas del contenido periodístico\",type:\"info\",style:{marginBottom:'15px'}}),/*#__PURE__*/_jsx(Alert,{message:\"Interpretaci\\xF3n de Resultados\",description:((_red$interpretacion_d5=red.interpretacion_detallada)===null||_red$interpretacion_d5===void 0?void 0:_red$interpretacion_d5.interpretacion_resultados)||\"El \".concat((red.accuracy*100).toFixed(1),\"% de precisi\\xF3n indica \").concat(red.estado.toLowerCase(),\" capacidad para determinar la importancia de art\\xEDculos period\\xEDsticos\"),type:\"success\",style:{marginBottom:'15px'}}),/*#__PURE__*/_jsx(Alert,{message:\"Aplicaci\\xF3n Pr\\xE1ctica\",description:((_red$interpretacion_d6=red.interpretacion_detallada)===null||_red$interpretacion_d6===void 0?void 0:_red$interpretacion_d6.aplicacion_practica)||\"Automatización de clasificación de importancia de artículos para optimizar la curaduría editorial\",type:\"info\"})]})})]})})},red.id);})}):/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'40px'},children:[/*#__PURE__*/_jsx(RocketOutlined,{style:{fontSize:'48px',color:'#722ed1',marginBottom:'20px'}}),/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83E\\uDDE0 Redes Neuronales\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Haz clic en el bot\\xF3n \\\"An\\xE1lisis de Redes Neuronales\\\" para cargar los datos\"})]})]})},\"6\")]})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Card","Row","Col","Button","Progress","Tabs","Table","Statistic","Alert","Divider","Tag","Descriptions","Steps","CheckCircleOutlined","CloseCircleOutlined","InfoCircleOutlined","RocketOutlined","DatabaseOutlined","BarChartOutlined","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","LineChart","Line","PieChart","Pie","Cell","ScatterChart","Scatter","AreaChart","Area","Legend","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TabPane","Step","App","_dashboardData$resume","_dashboardData$resume2","_dashboardData$resume3","_dashboardData$resume4","_dashboardData$resume5","_dashboardData$resume6","selectedMethods","setSelectedMethods","isAnalyzing","setIsAnalyzing","analysisResults","setAnalysisResults","currentStep","setCurrentStep","dashboardData","setDashboardData","loading","setLoading","redesNeuronalesData","setRedesNeuronalesData","showRedesNeuronales","setShowRedesNeuronales","fetchDashboardData","response","fetch","data","json","error","console","cargarRedesNeuronales","log","error2","datosEjemplo","resultados","id","nombre","accuracy","estado","que_es","como_funciona","variables_utilizadas","proceso_paso_a_paso","interpretacion_detallada","que_hizo","como_funciono","evidencia_exito","variables_importantes","interpretacion_resultados","aplicacion_practica","metodosML","chartData","map","metodo","name","categoria","silhouette","toFixed","auc","processSteps","title","description","progress","toggleMethod","methodId","includes","filter","executeAnalysis","length","alert","interval","setInterval","prev","clearInterval","results","getMethodTypeColor","tipo","colors","classification","clustering","temporal","ensemble","getStatusColor","renderSpecificChart","nombreAlgoritmo","toLowerCase","renderLogisticChart","renderKNNChart","renderNaiveBayesChart","renderDecisionTreeChart","renderRandomForestChart","renderSVMChart","renderGradientBoostingChart","renderKMeansChart","renderEnsembleChart","renderARIMAChart","renderMLPChart","renderCNNChart","renderLSTMChart","renderBiLSTMChart","renderGenericChart","children","style","textAlign","marginBottom","width","height","Array","from","_","i","x","y","Math","exp","strokeDasharray","dataKey","label","value","position","offset","angle","formatter","concat","type","stroke","strokeWidth","fontSize","color","marginTop","random","clase","distancia","props","fill","caracteristica","probabilidad_importante","pow","probabilidad_no_importante","stackId","fillOpacity","importancia","abs","iteracion","silhouetteScore","clusterData","padding","cx","cy","innerRadius","outerRadius","paddingAngle","entry","index","background","borderRadius","border","display","justifyContent","alignItems","fontWeight","modelo","tiempo","valor","sin","tendencia","metrica","capa","neuronas","filtro","activacion","paso","memoria","entrada","cos","salida","direccion","precision","metodosPorCategoria","reduce","acc","push","onClick","window","location","reload","minHeight","maxWidth","margin","boxShadow","backdropFilter","textShadow","opacity","size","icon","transform","transition","onMouseEnter","e","target","onMouseLeave","resumen_analisis","mejor_algoritmo","defaultActiveKey","tab","gutter","xs","lg","textAnchor","metodoId","_metodo$interpretacio","_metodo$interpretacio2","find","m","md","message","showIcon","variable","objetivo","preprocesamiento","paddingLeft","proceso","span","marginRight","Object","entries","_ref","metodos","orientation","sm","xl","hoverable","suffix","valueStyle","marginLeft","gridTemplateColumns","gap","dataSource","key","ranking","columns","dataIndex","render","pagination","recomendaciones","rec","objetivos_especificos","clasificacion","conclusion_evaluacion","evaluacion_general","nivel_academico","fortalezas_principales","fortaleza","resultados_academicos","accuracy_promedio","algoritmos_excelentes","kmeans_silhouette","evaluacion_tecnica","datos_utilizados","feature_engineering","algoritmos_implementados","variable_objetivo","metricas_evaluacion","conclusion_final","red","_red$interpretacion_d","_red$interpretacion_d2","_red$interpretacion_d3","_red$interpretacion_d4","_red$interpretacion_d5","_red$interpretacion_d6","idx","direction"],"sources":["/Users/usuario/Documents/clasedepractica/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Button, Progress, Tabs, Table, Statistic, Alert, Divider, Tag, Descriptions, Steps } from 'antd';\nimport { CheckCircleOutlined, CloseCircleOutlined, InfoCircleOutlined, RocketOutlined, DatabaseOutlined, BarChartOutlined } from '@ant-design/icons';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, LineChart, Line, PieChart, Pie, Cell, ScatterChart, Scatter, AreaChart, Area, Legend } from 'recharts';\n\nconst { TabPane } = Tabs;\nconst { Step } = Steps;\n\nfunction App() {\n  const [selectedMethods, setSelectedMethods] = useState([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [redesNeuronalesData, setRedesNeuronalesData] = useState(null);\n  const [showRedesNeuronales, setShowRedesNeuronales] = useState(false);\n\n  // Cargar datos reales del servidor\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const response = await fetch('/api/dashboard-data');\n        const data = await response.json();\n        setDashboardData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error cargando datos:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  // Función para cargar datos de redes neuronales\n  const cargarRedesNeuronales = async () => {\n    try {\n      const response = await fetch('/api/redes-neuronales-data');\n      const data = await response.json();\n      setRedesNeuronalesData(data);\n      setShowRedesNeuronales(true);\n      console.log('Redes neuronales cargadas:', data);\n    } catch (error) {\n      console.error('Error cargando redes neuronales:', error);\n      // Si no hay endpoint específico, usar datos locales\n      try {\n        const response = await fetch('/api/dashboard-data');\n        const data = await response.json();\n        setRedesNeuronalesData(data);\n        setShowRedesNeuronales(true);\n        console.log('Usando datos alternativos:', data);\n      } catch (error2) {\n        console.error('Error cargando datos alternativos:', error2);\n        // Crear datos de ejemplo si no hay datos\n        const datosEjemplo = {\n          resultados: [\n            {\n              id: 1,\n              nombre: \"Perceptrón Multicapa (MLP)\",\n              accuracy: 0.985,\n              estado: \"Excelente\",\n              que_es: \"MLP es una red neuronal con múltiples capas ocultas que aprende patrones complejos en los datos periodísticos para determinar la importancia de los artículos.\",\n              como_funciona: \"Utiliza backpropagation para ajustar pesos y sesgos, optimizando la función de pérdida mediante descenso de gradiente. Las 3 capas ocultas (100, 50, 25) procesan características textuales y aprenden patrones complejos.\",\n              variables_utilizadas: [\"TF-IDF del texto (1,000 características)\", \"Características numéricas\", \"Variables categóricas\"],\n              proceso_paso_a_paso: [\"Preprocesamiento\", \"Entrenamiento\", \"Validación\", \"Predicción\"],\n              interpretacion_detallada: {\n                que_hizo: \"La red neuronal MLP analizó 1,325 artículos periodísticos y aprendió a identificar patrones que determinan la importancia de un artículo basándose en su contenido, estructura y características periodísticas.\",\n                como_funciono: \"Procesó características textuales (TF-IDF) y numéricas a través de 3 capas ocultas, aprendiendo relaciones complejas entre el contenido del artículo y su importancia periodística.\",\n                evidencia_exito: \"98.5% de accuracy significa que de cada 100 artículos, la red identifica correctamente la importancia de 98-99 artículos, demostrando una comprensión profunda de los criterios periodísticos.\",\n                variables_importantes: \"Las características más importantes son: longitud del contenido, complejidad textual, prestigio del periódico, relevancia de la categoría y estructura del artículo.\",\n                interpretacion_resultados: \"El 98.5% de precisión indica que la red neuronal ha aprendido exitosamente a distinguir entre artículos importantes y regulares basándose en criterios objetivos de calidad periodística.\",\n                aplicacion_practica: \"Este modelo puede automatizar la clasificación de importancia de artículos, ayudando a editores a priorizar contenido, mejorar la curaduría editorial y optimizar la distribución de recursos periodísticos.\"\n              }\n            },\n            {\n              id: 2,\n              nombre: \"CNN para Texto\",\n              accuracy: 0.898,\n              estado: \"Bueno\",\n              que_es: \"CNN aplica filtros convolucionales para detectar patrones locales en secuencias de texto y determinar la importancia de artículos periodísticos.\",\n              como_funciona: \"Usa filtros 1D para capturar n-gramas y patrones locales en el texto, seguido de pooling y capas densas para clasificar la importancia del artículo.\",\n              variables_utilizadas: [\"Embeddings de palabras\", \"Filtros convolucionales\", \"Pooling global\"],\n              proceso_paso_a_paso: [\"Embedding\", \"Convolución\", \"Pooling\", \"Clasificación\"],\n              interpretacion_detallada: {\n                que_hizo: \"La CNN analizó patrones locales en el texto de los artículos, identificando frases clave, estructuras narrativas y elementos periodísticos que indican importancia.\",\n                como_funciono: \"Aplicó filtros convolucionales para detectar secuencias de palabras importantes, patrones de escritura periodística y estructuras textuales que caracterizan artículos de alta calidad.\",\n                evidencia_exito: \"89.8% de accuracy significa que la CNN identifica correctamente la importancia de 9 de cada 10 artículos, demostrando una buena comprensión de patrones textuales periodísticos.\",\n                variables_importantes: \"Los filtros detectan: frases informativas, estructuras de párrafos, vocabulario especializado, patrones de citas y elementos narrativos periodísticos.\",\n                interpretacion_resultados: \"El 89.8% indica que la CNN es efectiva para identificar artículos importantes basándose en patrones textuales, aunque menos precisa que MLP para criterios más complejos.\",\n                aplicacion_practica: \"Ideal para análisis automático de contenido textual, detección de calidad periodística basada en escritura y filtrado de artículos por patrones de redacción profesional.\"\n              }\n            },\n            {\n              id: 3,\n              nombre: \"LSTM\",\n              accuracy: 0.589,\n              estado: \"Necesita Mejora\",\n              que_es: \"LSTM es una red neuronal recurrente que procesa secuencias de texto para entender el contexto temporal y determinar la importancia de artículos.\",\n              como_funciona: \"Procesa el texto secuencialmente, manteniendo memoria a largo plazo para capturar dependencias temporales y contextuales en el contenido periodístico.\",\n              variables_utilizadas: [\"Secuencias de palabras\", \"Memoria a largo plazo\", \"Contexto temporal\"],\n              proceso_paso_a_paso: [\"Tokenización\", \"Embedding\", \"Procesamiento secuencial\", \"Clasificación\"],\n              interpretacion_detallada: {\n                que_hizo: \"La LSTM procesó el texto de los artículos secuencialmente, intentando capturar el contexto y la coherencia narrativa para determinar la importancia periodística.\",\n                como_funciono: \"Analizó la secuencia de palabras manteniendo memoria del contexto anterior, buscando patrones narrativos y coherencia textual que indiquen calidad periodística.\",\n                evidencia_exito: \"58.9% de accuracy indica que la LSTM tiene dificultades para este tipo de clasificación, posiblemente porque la importancia periodística no depende principalmente de secuencias temporales.\",\n                variables_importantes: \"La LSTM se enfoca en: coherencia narrativa, flujo del texto, secuencias de ideas y estructura temporal del contenido.\",\n                interpretacion_resultados: \"El bajo rendimiento sugiere que la importancia periodística se determina más por criterios estructurales y temáticos que por patrones secuenciales de texto.\",\n                aplicacion_practica: \"Más útil para análisis de coherencia textual, detección de plagio o análisis de flujo narrativo que para clasificación de importancia periodística.\"\n              }\n            },\n            {\n              id: 4,\n              nombre: \"BiLSTM\",\n              accuracy: 0.868,\n              estado: \"Bueno\",\n              que_es: \"BiLSTM procesa texto en ambas direcciones para capturar contexto completo y determinar la importancia de artículos periodísticos.\",\n              como_funciona: \"Procesa el texto hacia adelante y hacia atrás simultáneamente, capturando contexto bidireccional para una mejor comprensión del contenido periodístico.\",\n              variables_utilizadas: [\"Contexto bidireccional\", \"Memoria hacia adelante y atrás\", \"Embeddings contextuales\"],\n              proceso_paso_a_paso: [\"Procesamiento bidireccional\", \"Fusión de contextos\", \"Clasificación\"],\n              interpretacion_detallada: {\n                que_hizo: \"La BiLSTM analizó el texto en ambas direcciones, capturando contexto completo para entender mejor la estructura y calidad periodística de los artículos.\",\n                como_funciono: \"Procesó cada palabra considerando tanto el contexto anterior como posterior, creando representaciones más ricas del contenido periodístico.\",\n                evidencia_exito: \"86.8% de accuracy demuestra que el contexto bidireccional mejora significativamente la comprensión del contenido periodístico comparado con LSTM unidireccional.\",\n                variables_importantes: \"Captura: contexto completo de frases, relaciones entre párrafos, coherencia textual bidireccional y estructura narrativa completa.\",\n                interpretacion_resultados: \"El 86.8% indica que BiLSTM es efectiva para análisis de contenido periodístico cuando se considera el contexto completo del texto.\",\n                aplicacion_practica: \"Excelente para análisis de coherencia periodística, detección de calidad editorial y comprensión profunda del contenido textual.\"\n              }\n            }\n          ]\n        };\n        setRedesNeuronalesData(datosEjemplo);\n        setShowRedesNeuronales(true);\n        console.log('Usando datos de ejemplo:', datosEjemplo);\n      }\n    }\n  };\n\n  // Usar datos reales del servidor o datos por defecto\n  const metodosML = dashboardData?.resultados || [];\n\n  // Generar chartData desde los datos reales\n  const chartData = metodosML.map(metodo => ({\n    name: metodo.nombre,\n    accuracy: metodo.categoria === 'Clustering' ? \n      ((metodo.silhouette || 0) * 100).toFixed(1) : \n      (metodo.accuracy * 100).toFixed(1),\n    auc: (metodo.auc * 100).toFixed(1)\n  }));\n\n  const processSteps = [\n    { title: \"Carga de Datos\", description: \"1,571 artículos periodísticos cargados\", progress: 20 },\n    { title: \"Limpieza de Texto\", description: \"Procesamiento de títulos, resúmenes y contenido\", progress: 40 },\n    { title: \"Vectorización TF-IDF\", description: \"1,000 características de texto generadas\", progress: 60 },\n    { title: \"Entrenamiento de Modelos\", description: \"10 algoritmos de ML ejecutados\", progress: 80 },\n    { title: \"Evaluación y Comparación\", description: \"Análisis de rendimiento completado\", progress: 100 }\n  ];\n\n  const toggleMethod = (methodId) => {\n    if (selectedMethods.includes(methodId)) {\n      setSelectedMethods(selectedMethods.filter(id => id !== methodId));\n    } else {\n      setSelectedMethods([...selectedMethods, methodId]);\n    }\n  };\n\n  const executeAnalysis = () => {\n    if (selectedMethods.length === 0) {\n      alert('Por favor selecciona al menos un método para analizar.');\n      return;\n    }\n    \n    setIsAnalyzing(true);\n    setAnalysisResults(null);\n    setCurrentStep(0);\n    \n    const interval = setInterval(() => {\n      setCurrentStep(prev => {\n        if (prev >= processSteps.length - 1) {\n          clearInterval(interval);\n          setIsAnalyzing(false);\n          setAnalysisResults({\n            selectedMethods: selectedMethods,\n            results: metodosML.filter(metodo => selectedMethods.includes(metodo.id))\n          });\n          return prev;\n        }\n        return prev + 1;\n      });\n    }, 1000);\n  };\n\n  const getMethodTypeColor = (tipo) => {\n    const colors = {\n      classification: '#1890ff',\n      clustering: '#722ed1',\n      temporal: '#52c41a',\n      ensemble: '#fa8c16'\n    };\n    return colors[tipo] || '#666';\n  };\n\n  const getStatusColor = (accuracy) => {\n    if (accuracy >= 0.95) return '#52c41a';\n    if (accuracy >= 0.90) return '#1890ff';\n    if (accuracy >= 0.80) return '#faad14';\n    return '#ff4d4f';\n  };\n\n  // Función mejorada para generar gráficos específicos por algoritmo\n  const renderSpecificChart = (metodo) => {\n    // Usar el nombre del algoritmo para determinar el gráfico específico\n    const nombreAlgoritmo = metodo.nombre.toLowerCase();\n    \n    if (nombreAlgoritmo.includes('regresión logística') || nombreAlgoritmo.includes('logistic')) {\n      return renderLogisticChart();\n    } else if (nombreAlgoritmo.includes('k-nearest') || nombreAlgoritmo.includes('knn')) {\n      return renderKNNChart();\n    } else if (nombreAlgoritmo.includes('naive bayes') || nombreAlgoritmo.includes('bayes')) {\n      return renderNaiveBayesChart();\n    } else if (nombreAlgoritmo.includes('árbol de decisión') || nombreAlgoritmo.includes('decision tree')) {\n      return renderDecisionTreeChart();\n    } else if (nombreAlgoritmo.includes('random forest') || nombreAlgoritmo.includes('bosque')) {\n      return renderRandomForestChart();\n    } else if (nombreAlgoritmo.includes('support vector') || nombreAlgoritmo.includes('svm')) {\n      return renderSVMChart();\n    } else if (nombreAlgoritmo.includes('histgradient') || nombreAlgoritmo.includes('gradient')) {\n      return renderGradientBoostingChart();\n    } else if (nombreAlgoritmo.includes('k-means') || nombreAlgoritmo.includes('clustering')) {\n      return renderKMeansChart(metodo);\n    } else if (nombreAlgoritmo.includes('ensemble') || nombreAlgoritmo.includes('voting')) {\n      return renderEnsembleChart();\n    } else if (nombreAlgoritmo.includes('arima') || nombreAlgoritmo.includes('temporal')) {\n      return renderARIMAChart();\n    } else if (nombreAlgoritmo.includes('perceptrón') || nombreAlgoritmo.includes('mlp')) {\n      return renderMLPChart();\n    } else if (nombreAlgoritmo.includes('cnn') || nombreAlgoritmo.includes('convolucional')) {\n      return renderCNNChart();\n    } else if (nombreAlgoritmo.includes('lstm') && !nombreAlgoritmo.includes('bi')) {\n      return renderLSTMChart();\n    } else if (nombreAlgoritmo.includes('bilstm') || nombreAlgoritmo.includes('bidireccional')) {\n      return renderBiLSTMChart();\n    } else {\n      // Gráfico genérico para algoritmos sin gráfico específico\n      return renderGenericChart(metodo);\n    }\n  };\n\n  const renderLogisticChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Curva Sigmoide - Función Logística</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <LineChart data={Array.from({length: 21}, (_, i) => ({\n            x: i - 10,\n            y: 1 / (1 + Math.exp(-(i - 10)))\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"x\" label={{ value: 'Z (Función Lineal)', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Probabilidad', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${value.toFixed(3)}`, 'Probabilidad']} />\n            <Line type=\"monotone\" dataKey=\"y\" stroke=\"#1890ff\" strokeWidth={3} />\n          </LineChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          La función sigmoide transforma valores lineales en probabilidades entre 0 y 1\n        </p>\n      </div>\n    );\n  };\n\n  const renderKNNChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>K-Nearest Neighbors - Distancia a Vecinos</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <ScatterChart data={Array.from({length: 20}, (_, i) => ({\n            x: Math.random() * 10,\n            y: Math.random() * 10,\n            clase: i % 2 === 0 ? 'Importante' : 'No Importante',\n            distancia: Math.random() * 5\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"x\" label={{ value: 'Característica 1', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Característica 2', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value, name, props) => [\n              `${value.toFixed(2)}`, \n              name === 'distancia' ? 'Distancia' : 'Clase'\n            ]} />\n            <Scatter dataKey=\"distancia\" fill=\"#52c41a\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          KNN clasifica basándose en la distancia a los k vecinos más cercanos\n        </p>\n      </div>\n    );\n  };\n\n  const renderNaiveBayesChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Naive Bayes - Distribución de Probabilidades</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <AreaChart data={Array.from({length: 50}, (_, i) => ({\n            caracteristica: i,\n            probabilidad_importante: Math.exp(-Math.pow(i - 25, 2) / 50),\n            probabilidad_no_importante: Math.exp(-Math.pow(i - 30, 2) / 40)\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"caracteristica\" label={{ value: 'Valor de Característica', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Probabilidad', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${value.toFixed(3)}`, 'Probabilidad']} />\n            <Area type=\"monotone\" dataKey=\"probabilidad_importante\" stackId=\"1\" stroke=\"#52c41a\" fill=\"#52c41a\" fillOpacity={0.6} />\n            <Area type=\"monotone\" dataKey=\"probabilidad_no_importante\" stackId=\"2\" stroke=\"#ff4d4f\" fill=\"#ff4d4f\" fillOpacity={0.6} />\n          </AreaChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          Naive Bayes calcula probabilidades condicionales para cada característica\n        </p>\n      </div>\n    );\n  };\n\n  const renderDecisionTreeChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Árbol de Decisión - Importancia de Características</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={[\n            { caracteristica: 'Periódico', importancia: 0.35, color: '#1890ff' },\n            { caracteristica: 'Longitud', importancia: 0.28, color: '#52c41a' },\n            { caracteristica: 'Categoría', importancia: 0.22, color: '#faad14' },\n            { caracteristica: 'Imágenes', importancia: 0.15, color: '#ff4d4f' }\n          ]}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"caracteristica\" />\n            <YAxis label={{ value: 'Importancia', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${(value * 100).toFixed(1)}%`, 'Importancia']} />\n            <Bar dataKey=\"importancia\" fill=\"#1890ff\" />\n          </BarChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          El árbol de decisión muestra qué características son más importantes para la clasificación\n        </p>\n      </div>\n    );\n  };\n\n  const renderRandomForestChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Random Forest - Rendimiento por Árbol</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={[\n            { name: 'Árbol 1', value: 95, color: '#fa8c16' },\n            { name: 'Árbol 2', value: 92, color: '#fa8c16' },\n            { name: 'Árbol 3', value: 98, color: '#fa8c16' },\n            { name: 'Árbol 4', value: 94, color: '#fa8c16' },\n            { name: 'Árbol 5', value: 96, color: '#fa8c16' },\n            { name: 'Promedio', value: 95, color: '#52c41a' }\n          ]}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis label={{ value: 'Accuracy (%)', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${value}%`, 'Accuracy']} />\n            <Bar dataKey=\"value\" fill=\"#fa8c16\" />\n          </BarChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          Random Forest combina múltiples árboles para mayor robustez y precisión\n        </p>\n      </div>\n    );\n  };\n\n  const renderSVMChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Support Vector Machine - Hiperplano de Separación</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <ScatterChart data={Array.from({length: 30}, (_, i) => ({\n            x: Math.random() * 10,\n            y: Math.random() * 10,\n            clase: i % 2 === 0 ? 'Importante' : 'No Importante',\n            distancia: Math.abs(5 - Math.random() * 10)\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"x\" label={{ value: 'Característica 1', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Característica 2', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value, name) => [\n              `${value.toFixed(2)}`, \n              name === 'distancia' ? 'Distancia al Hiperplano' : 'Clase'\n            ]} />\n            <Scatter dataKey=\"distancia\" fill=\"#1890ff\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          SVM encuentra el hiperplano que mejor separa las clases con el mayor margen\n        </p>\n      </div>\n    );\n  };\n\n  const renderGradientBoostingChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>HistGradientBoosting - Reducción de Error</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <LineChart data={Array.from({length: 15}, (_, i) => ({\n            iteracion: i + 1,\n            error: 100 - (i * 6 + Math.random() * 3),\n            accuracy: 50 + (i * 3 + Math.random() * 2)\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"iteracion\" label={{ value: 'Iteración', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Métrica (%)', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value, name) => [`${value.toFixed(1)}%`, name === 'error' ? 'Error' : 'Accuracy']} />\n            <Line type=\"monotone\" dataKey=\"error\" stroke=\"#ff4d4f\" strokeWidth={3} name=\"Error\" />\n            <Line type=\"monotone\" dataKey=\"accuracy\" stroke=\"#52c41a\" strokeWidth={3} name=\"Accuracy\" />\n          </LineChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          Gradient Boosting reduce el error iterativamente combinando múltiples modelos débiles\n        </p>\n      </div>\n    );\n  };\n\n  const renderKMeansChart = (metodo) => {\n    // Datos del clustering basados en el análisis real\n    const silhouetteScore = metodo.silhouette || 0.743;\n    const clusterData = [\n      { name: 'Cluster 1 (Artículos Importantes)', value: 190, color: '#52c41a' },\n      { name: 'Cluster 2 (Artículos Regulares)', value: 1135, color: '#1890ff' }\n    ];\n    \n    return (\n      <div style={{ padding: '20px' }}>\n        <h4 style={{ marginBottom: '15px', color: '#1890ff' }}>Resultados del Clustering K-Means</h4>\n        \n        {/* Gráfico de distribución de clusters */}\n        <div style={{ marginBottom: '20px' }}>\n          <h5 style={{ marginBottom: '10px', color: '#52c41a' }}>Distribución de Clusters</h5>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <PieChart>\n              <Pie\n                data={clusterData}\n                cx=\"50%\"\n                cy=\"50%\"\n                innerRadius={60}\n                outerRadius={120}\n                paddingAngle={5}\n                dataKey=\"value\"\n              >\n                {clusterData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={entry.color} />\n                ))}\n              </Pie>\n              <Tooltip formatter={(value) => `${value} artículos`} />\n              <Legend />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n        \n        {/* Métricas de clustering */}\n        <div style={{ background: '#f0f8ff', padding: '15px', borderRadius: '8px', border: '1px solid #1890ff' }}>\n          <h5 style={{ marginBottom: '10px', color: '#722ed1' }}>Métricas de Calidad del Clustering</h5>\n          <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center' }}>\n            <div style={{ textAlign: 'center' }}>\n              <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#722ed1' }}>\n                {(silhouetteScore * 100).toFixed(1)}%\n              </div>\n              <div style={{ fontSize: '12px', color: '#666' }}>Silhouette Score</div>\n            </div>\n            <div style={{ textAlign: 'center' }}>\n              <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#52c41a' }}>\n                2\n              </div>\n              <div style={{ fontSize: '12px', color: '#666' }}>Clusters</div>\n            </div>\n            <div style={{ textAlign: 'center' }}>\n              <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#1890ff' }}>\n                1,325\n              </div>\n              <div style={{ fontSize: '12px', color: '#666' }}>Artículos</div>\n            </div>\n          </div>\n          <div style={{ marginTop: '10px', fontSize: '12px', color: '#666' }}>\n            <strong>Interpretación:</strong> \n            {silhouetteScore > 0.7 ? \n              ' Excelente separación entre clusters (Score > 0.7)' : \n              ' Buena separación entre clusters'\n            }\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderEnsembleChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Ensemble - Combinación de Modelos</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={[\n            { modelo: 'Regresión Logística', accuracy: 95, color: '#1890ff' },\n            { modelo: 'Random Forest', accuracy: 98, color: '#52c41a' },\n            { modelo: 'SVM', accuracy: 89, color: '#faad14' },\n            { modelo: 'Ensemble', accuracy: 99, color: '#722ed1' }\n          ]}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"modelo\" />\n            <YAxis label={{ value: 'Accuracy (%)', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${value}%`, 'Accuracy']} />\n            <Bar dataKey=\"accuracy\" fill=\"#722ed1\" />\n          </BarChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          El ensemble combina múltiples modelos para mejorar la precisión general\n        </p>\n      </div>\n    );\n  };\n\n  const renderARIMAChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>ARIMA - Análisis de Series Temporales</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <LineChart data={Array.from({length: 30}, (_, i) => ({\n            tiempo: i,\n            valor: 50 + Math.sin(i * 0.3) * 10 + Math.random() * 5,\n            tendencia: 50 + i * 0.5\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"tiempo\" label={{ value: 'Tiempo', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Valor', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value, name) => [\n              `${value.toFixed(2)}`, \n              name === 'valor' ? 'Serie Temporal' : 'Tendencia'\n            ]} />\n            <Line type=\"monotone\" dataKey=\"valor\" stroke=\"#1890ff\" strokeWidth={2} name=\"Serie Temporal\" />\n            <Line type=\"monotone\" dataKey=\"tendencia\" stroke=\"#ff4d4f\" strokeWidth={2} name=\"Tendencia\" />\n          </LineChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          ARIMA analiza patrones temporales en la publicación de artículos\n        </p>\n      </div>\n    );\n  };\n\n  const renderGenericChart = (metodo) => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Métricas de Rendimiento</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={[\n            { metrica: 'Accuracy', valor: (metodo.accuracy * 100).toFixed(1) },\n            { metrica: 'AUC', valor: (metodo.auc * 100).toFixed(1) },\n            { metrica: 'Precision', valor: (metodo.accuracy * 100 * 0.95).toFixed(1) },\n            { metrica: 'Recall', valor: (metodo.accuracy * 100 * 0.92).toFixed(1) },\n            { metrica: 'F1-Score', valor: (metodo.accuracy * 100 * 0.94).toFixed(1) }\n          ]}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"metrica\" />\n            <YAxis label={{ value: 'Métrica (%)', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${value}%`, 'Valor']} />\n            <Bar dataKey=\"valor\" fill=\"#1890ff\" />\n          </BarChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          Métricas de rendimiento del algoritmo: Accuracy, AUC, Precision, Recall y F1-Score\n        </p>\n      </div>\n    );\n  };\n\n  // Funciones para gráficos de redes neuronales\n  const renderMLPChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Perceptrón Multicapa - Arquitectura de Capas</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={[\n            { capa: 'Entrada', neuronas: 1018, color: '#1890ff' },\n            { capa: 'Oculta 1', neuronas: 100, color: '#52c41a' },\n            { capa: 'Oculta 2', neuronas: 50, color: '#fa8c16' },\n            { capa: 'Oculta 3', neuronas: 25, color: '#722ed1' },\n            { capa: 'Salida', neuronas: 1, color: '#f5222d' }\n          ]}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"capa\" />\n            <YAxis label={{ value: 'Neuronas', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${value}`, 'Neuronas']} />\n            <Bar dataKey=\"neuronas\" fill=\"#1890ff\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n\n  const renderCNNChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>CNN para Texto - Filtros Convolucionales</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={[\n            { filtro: 'Filtro 1', activacion: 0.85, color: '#1890ff' },\n            { filtro: 'Filtro 2', activacion: 0.92, color: '#52c41a' },\n            { filtro: 'Filtro 3', activacion: 0.78, color: '#fa8c16' },\n            { filtro: 'Filtro 4', activacion: 0.88, color: '#722ed1' },\n            { filtro: 'Filtro 5', activacion: 0.91, color: '#f5222d' }\n          ]}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"filtro\" />\n            <YAxis label={{ value: 'Activación', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${(value * 100).toFixed(1)}%`, 'Activación']} />\n            <Bar dataKey=\"activacion\" fill=\"#1890ff\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n\n  const renderLSTMChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>LSTM - Memoria Secuencial</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <LineChart data={Array.from({length: 20}, (_, i) => ({\n            paso: i,\n            memoria: 0.5 + 0.3 * Math.sin(i * 0.5) + Math.random() * 0.1,\n            entrada: 0.3 + 0.2 * Math.cos(i * 0.3) + Math.random() * 0.1,\n            salida: 0.4 + 0.2 * Math.sin(i * 0.4) + Math.random() * 0.1\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"paso\" label={{ value: 'Paso Temporal', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Valor', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${(value * 100).toFixed(1)}%`, 'Valor']} />\n            <Line type=\"monotone\" dataKey=\"memoria\" stroke=\"#1890ff\" strokeWidth={3} name=\"Memoria\" />\n            <Line type=\"monotone\" dataKey=\"entrada\" stroke=\"#52c41a\" strokeWidth={2} name=\"Entrada\" />\n            <Line type=\"monotone\" dataKey=\"salida\" stroke=\"#fa8c16\" strokeWidth={2} name=\"Salida\" />\n            <Legend />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n\n  const renderBiLSTMChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>BiLSTM - Procesamiento Bidireccional</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={[\n            { direccion: 'Izquierda→Derecha', precision: 0.87, color: '#1890ff' },\n            { direccion: 'Derecha→Izquierda', precision: 0.89, color: '#52c41a' },\n            { direccion: 'Combinado', precision: 0.92, color: '#fa8c16' }\n          ]}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"direccion\" />\n            <YAxis label={{ value: 'Precisión', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${(value * 100).toFixed(1)}%`, 'Precisión']} />\n            <Bar dataKey=\"precision\" fill=\"#1890ff\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n\n  // Agrupar métodos por categoría\n  const metodosPorCategoria = metodosML.reduce((acc, metodo) => {\n    if (!acc[metodo.categoria]) {\n      acc[metodo.categoria] = [];\n    }\n    acc[metodo.categoria].push(metodo);\n    return acc;\n  }, {});\n\n  if (loading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '100vh',\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\n      }}>\n        <div style={{ textAlign: 'center', color: 'white' }}>\n          <h2>🔄 Cargando datos del análisis...</h2>\n          <p>Preparando resultados de los 10 algoritmos de ML</p>\n          <p>Conectando con el servidor...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!dashboardData) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '100vh',\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\n      }}>\n        <div style={{ textAlign: 'center', color: 'white' }}>\n          <CloseCircleOutlined style={{ fontSize: '48px', marginBottom: '20px' }} />\n          <h2>❌ Error cargando datos</h2>\n          <p>No se pudieron cargar los datos del análisis.</p>\n          <p>Verifica que el servidor esté funcionando en http://localhost:3002</p>\n          <Button type=\"primary\" onClick={() => window.location.reload()}>\n            Reintentar\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ \n      padding: '20px', \n      background: 'linear-gradient(135deg, #87CEEB 0%, #B0E0E6 100%)', \n      minHeight: '100vh'\n    }}>\n      <div style={{ \n        maxWidth: '1400px', \n        margin: '0 auto',\n        background: 'rgba(255,255,255,0.95)',\n        borderRadius: '15px',\n        padding: '30px',\n        boxShadow: '0 20px 40px rgba(0,0,0,0.1)',\n        backdropFilter: 'blur(10px)'\n      }}>\n        {/* Header */}\n        <div style={{ \n          textAlign: 'center', \n          marginBottom: '30px',\n          background: 'linear-gradient(135deg, #87CEEB 0%, #B0E0E6 100%)',\n          color: '#2c3e50',\n          padding: '20px',\n          borderRadius: '10px',\n          boxShadow: '0 10px 20px rgba(0,0,0,0.1)'\n        }}>\n          <h1 style={{ \n            margin: '0 0 10px 0', \n            fontSize: '2.5em',\n            textShadow: '2px 2px 4px rgba(0,0,0,0.3)'\n          }}>\n            📊 Dashboard de Minería de Datos\n          </h1>\n          <p style={{ \n            margin: '0', \n            fontSize: '1.2em',\n            opacity: 0.9\n          }}>\n            Análisis Objetivo de 10 Algoritmos de Machine Learning\n          </p>\n          \n          {/* Botón de Redes Neuronales en el header */}\n          <div style={{ marginTop: '20px' }}>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              icon={<RocketOutlined />}\n              onClick={cargarRedesNeuronales}\n              style={{\n                background: 'linear-gradient(135deg, #722ed1 0%, #9254de 100%)',\n                border: 'none',\n                borderRadius: '25px',\n                height: '60px',\n                padding: '0 40px',\n                fontSize: '18px',\n                fontWeight: 'bold',\n                boxShadow: '0 10px 30px rgba(114, 46, 209, 0.4)',\n                transform: 'translateY(0)',\n                transition: 'all 0.3s ease'\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.transform = 'translateY(-3px)';\n                e.target.style.boxShadow = '0 15px 40px rgba(114, 46, 209, 0.6)';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.transform = 'translateY(0)';\n                e.target.style.boxShadow = '0 10px 30px rgba(114, 46, 209, 0.4)';\n              }}\n            >\n              🧠 Análisis de Redes Neuronales\n            </Button>\n            <p style={{ \n              margin: '10px 0 0 0', \n              fontSize: '14px',\n              opacity: 0.8,\n              color: '#2c3e50'\n            }}>\n              Explora 5 arquitecturas de redes neuronales avanzadas\n            </p>\n          </div>\n          {dashboardData?.resumen_analisis?.mejor_algoritmo && (\n            <div style={{ marginTop: '15px' }}>\n              <Tag color=\"gold\" style={{ fontSize: '16px', padding: '8px 16px' }}>\n                🏆 Mejor Algoritmo: {dashboardData.resumen_analisis.mejor_algoritmo.nombre} \n                ({(dashboardData.resumen_analisis.mejor_algoritmo.accuracy * 100).toFixed(1)}%)\n              </Tag>\n            </div>\n          )}\n        </div>\n\n        <Tabs defaultActiveKey=\"1\" size=\"large\">\n          <TabPane tab=\"📈 Gráficos de Comparación\" key=\"1\">\n            <Card style={{ marginBottom: '20px', borderRadius: '10px', boxShadow: '0 5px 15px rgba(0,0,0,0.1)', border: 'none' }}>\n              <div style={{ \n                background: 'linear-gradient(135deg, #87CEEB 0%, #B0E0E6 100%)',\n                color: '#2c3e50',\n                padding: '15px',\n                borderRadius: '8px',\n                marginBottom: '20px'\n              }}>\n                <h3 style={{ margin: 0, textAlign: 'center' }}>📊 Comparación de Algoritmos</h3>\n                <p style={{ margin: '10px 0', textAlign: 'center', color: '#666', fontSize: '14px' }}>\n                  <strong>Nota:</strong> K-Means muestra Silhouette Score (métrica de clustering) en lugar de Accuracy\n                </p>\n              </div>\n              \n              <Row gutter={[16, 16]}>\n                <Col xs={24} lg={12}>\n                  <Card title=\"Accuracy por Algoritmo\" size=\"small\">\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <BarChart data={chartData}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={100} />\n                        <YAxis label={{ value: 'Accuracy (%)', angle: -90, position: 'insideLeft' }} />\n                        <Tooltip formatter={(value) => [`${value}%`, 'Accuracy']} />\n                        <Bar dataKey=\"accuracy\" fill=\"#52c41a\" />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </Card>\n                </Col>\n                \n                <Col xs={24} lg={12}>\n                  <Card title=\"AUC-ROC por Algoritmo\" size=\"small\">\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <BarChart data={chartData}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={100} />\n                        <YAxis label={{ value: 'AUC (%)', angle: -90, position: 'insideLeft' }} />\n                        <Tooltip formatter={(value) => [`${value}%`, 'AUC']} />\n                        <Bar dataKey=\"auc\" fill=\"#1890ff\" />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </Card>\n                </Col>\n              </Row>\n            </Card>\n          </TabPane>\n\n           <TabPane tab=\"🤖 Detalles por Método\" key=\"2\">\n             <div style={{ marginBottom: '20px' }}>\n               <div style={{ \n          background: 'linear-gradient(135deg, #87CEEB 0%, #B0E0E6 100%)',\n          color: '#2c3e50',\n                 padding: '15px',\n                 borderRadius: '8px',\n                 marginBottom: '20px'\n               }}>\n                 <h3 style={{ margin: 0, textAlign: 'center' }}>🔍 Detalles por Método</h3>\n               </div>\n\n               {/* Mostrar detalles del método seleccionado */}\n               {selectedMethods.length > 0 && (\n                 <div style={{ marginBottom: '30px' }}>\n                   {selectedMethods.map(metodoId => {\n                     const metodo = metodosML.find(m => m.id === metodoId);\n                     if (!metodo) return null;\n                     \n                     return (\n                       <Card key={metodo.id} style={{ marginBottom: '20px', borderRadius: '10px', boxShadow: '0 5px 15px rgba(0,0,0,0.1)', border: 'none' }}>\n                         <h2 style={{ color: '#1890ff', marginBottom: '20px', textAlign: 'center' }}>\n                           {metodo.nombre}\n                         </h2>\n                         \n                         <Row gutter={[16, 16]}>\n                           <Col xs={24} md={12}>\n             <Alert\n               message=\"¿Qué es?\"\n               description={metodo.que_es || metodo.interpretacion_detallada?.que_hizo || \"Análisis de clasificación de artículos periodísticos\"}\n               type=\"info\"\n               showIcon\n               style={{ marginBottom: '10px' }}\n             />\n             <Alert\n               message=\"¿Cómo funciona?\"\n               description={metodo.como_funciona || metodo.interpretacion_detallada?.como_funciono || \"Utiliza técnicas de machine learning para clasificar artículos\"}\n               type=\"info\"\n               showIcon\n             />\n                           </Col>\n                           \n                           <Col xs={24} md={12}>\n                             <h4>Variables Utilizadas:</h4>\n                             <div style={{ marginBottom: '15px' }}>\n                               {(metodo.variables_utilizadas || []).map((variable, i) => (\n                                 <span key={i} style={{\n                                   display: 'inline-block',\n                                   background: '#f0f0f0',\n                                   padding: '4px 8px',\n                                   margin: '2px',\n                                   borderRadius: '4px',\n                                   fontSize: '12px'\n                                 }}>\n                                   {variable}\n                                 </span>\n                               ))}\n                             </div>\n                             \n                             {metodo.objetivo && (\n                               <div style={{ marginBottom: '15px', padding: '10px', background: '#e6f7ff', borderRadius: '5px' }}>\n                                 <h5>🎯 Objetivo Específico:</h5>\n                                 <p style={{ margin: 0, fontSize: '14px' }}>{metodo.objetivo}</p>\n                               </div>\n                             )}\n                             \n                             {metodo.preprocesamiento && (\n                               <div style={{ marginBottom: '15px', padding: '10px', background: '#f6ffed', borderRadius: '5px' }}>\n                                 <h5>⚙️ Preprocesamiento:</h5>\n                                 <p style={{ margin: 0, fontSize: '14px' }}>{metodo.preprocesamiento}</p>\n                               </div>\n                             )}\n                             \n                             <h4>Proceso Paso a Paso:</h4>\n                             <ol style={{ paddingLeft: '20px' }}>\n                               {(metodo.proceso_paso_a_paso || metodo.proceso || []).map((paso, i) => (\n                                 <li key={i} style={{ marginBottom: '5px', fontSize: '14px' }}>{paso}</li>\n                               ))}\n                             </ol>\n                           </Col>\n                         </Row>\n                         \n                         {/* Interpretación detallada */}\n                         {metodo.interpretacion_detallada && (\n                           <div style={{ marginTop: '20px', padding: '15px', background: '#f0f8ff', borderRadius: '8px', border: '1px solid #1890ff' }}>\n                             <h4 style={{ color: '#1890ff', marginBottom: '15px' }}>🔍 Interpretación Detallada del Resultado</h4>\n                             \n                             <div style={{ marginBottom: '15px' }}>\n                               <h5 style={{ color: '#1890ff' }}>¿Qué hizo este algoritmo?</h5>\n                               <p style={{ fontSize: '14px', marginBottom: '10px' }}>{metodo.interpretacion_detallada.que_hizo}</p>\n                             </div>\n                             \n                             <div style={{ marginBottom: '15px' }}>\n                               <h5 style={{ color: '#1890ff' }}>¿Cómo funcionó?</h5>\n                               <p style={{ fontSize: '14px', marginBottom: '10px' }}>{metodo.interpretacion_detallada.como_funciono}</p>\n                             </div>\n                             \n                             <div style={{ marginBottom: '15px' }}>\n                               <h5 style={{ color: '#52c41a' }}>Evidencia de éxito:</h5>\n                               <p style={{ fontSize: '14px', marginBottom: '10px' }}>{metodo.interpretacion_detallada.evidencia_exito}</p>\n                             </div>\n                             \n                             <div style={{ marginBottom: '15px' }}>\n                               <h5 style={{ color: '#722ed1' }}>Variables más importantes:</h5>\n                               <p style={{ fontSize: '14px', marginBottom: '10px' }}>{metodo.interpretacion_detallada.variables_importantes}</p>\n                             </div>\n                             \n                             <div style={{ marginBottom: '15px' }}>\n                               <h5 style={{ color: '#fa8c16' }}>Interpretación de resultados:</h5>\n                               <p style={{ fontSize: '14px', marginBottom: '10px' }}>{metodo.interpretacion_detallada.interpretacion_resultados}</p>\n                             </div>\n                             \n                             <div style={{ marginBottom: '15px' }}>\n                               <h5 style={{ color: '#f5222d' }}>Aplicación práctica:</h5>\n                               <p style={{ fontSize: '14px', marginBottom: '10px' }}>{metodo.interpretacion_detallada.aplicacion_practica}</p>\n                             </div>\n                           </div>\n                         )}\n                         \n                         {/* Gráfico específico del algoritmo */}\n                         <Row gutter={[16, 16]} style={{ marginTop: '20px' }}>\n                           <Col span={24}>\n                             <Card title={`Gráfico Específico: ${metodo.nombre}`} size=\"small\">\n                               {renderSpecificChart(metodo)}\n                             </Card>\n                           </Col>\n                         </Row>\n                         \n                         <Row gutter={16}>\n                         <Col span={12}>\n                           <h4>Métricas de Rendimiento:</h4>\n                           <ul>\n                             {metodo.categoria === 'Clustering' ? (\n                               <>\n                                 <li style={{ color: '#52c41a' }}>\n                                   <CheckCircleOutlined style={{ marginRight: '5px' }} />\n                                   Silhouette Score: {((metodo.silhouette || 0) * 100).toFixed(1)}%\n                                 </li>\n                                 <li style={{ color: '#1890ff' }}>\n                                   <InfoCircleOutlined style={{ marginRight: '5px' }} />\n                                   Clusters: 2 grupos\n                                 </li>\n                               </>\n                             ) : (\n                               <>\n                                 <li style={{ color: '#52c41a' }}>\n                                   <CheckCircleOutlined style={{ marginRight: '5px' }} />\n                                   Accuracy: {(metodo.accuracy * 100).toFixed(1)}%\n                                 </li>\n                                 <li style={{ color: '#52c41a' }}>\n                                   <CheckCircleOutlined style={{ marginRight: '5px' }} />\n                                   AUC: {metodo.auc.toFixed(3)}\n                                 </li>\n                               </>\n                             )}\n                           </ul>\n                         </Col>\n                           <Col span={12}>\n                             <h4>Características:</h4>\n                             <ul>\n                               <li style={{ color: '#1890ff' }}>\n                                 <InfoCircleOutlined style={{ marginRight: '5px' }} />\n                                 Tipo: {metodo.categoria}\n                               </li>\n                               <li style={{ color: '#1890ff' }}>\n                                 <InfoCircleOutlined style={{ marginRight: '5px' }} />\n                                 Estado: {metodo.estado}\n                               </li>\n                             </ul>\n                           </Col>\n                         </Row>\n                       </Card>\n                     );\n                   })}\n                 </div>\n               )}\n\n               {/* Selector de métodos */}\n               <div style={{ marginBottom: '20px' }}>\n                 <h3 style={{ textAlign: 'center', marginBottom: '20px' }}>Selecciona un método para ver sus detalles:</h3>\n                 \n                 {Object.entries(metodosPorCategoria).map(([categoria, metodos]) => (\n                   <div key={categoria} style={{ marginBottom: '40px' }}>\n                     <Divider orientation=\"left\">\n                       <Tag \n                         color=\"blue\" \n                         style={{\n                           fontSize: '16px',\n                           padding: '8px 16px',\n                           borderRadius: '20px',\n                           boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n                         }}\n                       >\n                         {categoria}\n                       </Tag>\n                     </Divider>\n                     \n                     <Row gutter={[16, 16]}>\n                       {metodos.map((metodo) => (\n                         <Col xs={24} sm={12} lg={8} xl={6} key={metodo.id}>\n                           <Card\n                             hoverable\n                             style={{ \n                               marginBottom: '20px',\n                               borderRadius: '10px',\n                               boxShadow: '0 5px 15px rgba(0,0,0,0.1)',\n                               border: 'none',\n                               background: selectedMethods.includes(metodo.id) ? '#e6f7ff' : 'white',\n                               border: selectedMethods.includes(metodo.id) ? '2px solid #1890ff' : '1px solid #f0f0f0',\n                               transform: selectedMethods.includes(metodo.id) ? 'translateY(-2px)' : 'none',\n                               boxShadow: selectedMethods.includes(metodo.id) ? '0 8px 25px rgba(24, 144, 255, 0.3)' : '0 5px 15px rgba(0,0,0,0.1)'\n                             }}\n                             onClick={() => toggleMethod(metodo.id)}\n                           >\n                             <div style={{ textAlign: 'center' }}>\n                               <h4 style={{ color: '#1890ff', marginBottom: '10px' }}>{metodo.nombre}</h4>\n                               <div style={{ marginBottom: '10px' }}>\n                                 <Tag color={getStatusColor(metodo.accuracy)} style={{ fontSize: '14px', padding: '4px 8px' }}>\n                                   {metodo.estado}\n                                 </Tag>\n                               </div>\n                               <Statistic\n                                 title=\"Accuracy\"\n                                 value={(metodo.accuracy * 100).toFixed(1)}\n                                 suffix=\"%\"\n                                 valueStyle={{ color: getStatusColor(metodo.accuracy) }}\n                               />\n                               <Statistic\n                                 title=\"AUC\"\n                                 value={metodo.auc.toFixed(3)}\n                                 valueStyle={{ color: '#1890ff' }}\n                               />\n                               <Button \n                                 type={selectedMethods.includes(metodo.id) ? 'primary' : 'default'}\n                                 size=\"small\"\n                                 style={{ \n                                   marginTop: '10px',\n                                   borderRadius: '20px',\n                                   height: '32px',\n                                   padding: '0 16px',\n                                   fontSize: '12px',\n                                   fontWeight: 'bold',\n                                   boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n                                 }}\n                               >\n                                 {selectedMethods.includes(metodo.id) ? 'Seleccionado' : 'Seleccionar'}\n                               </Button>\n                             </div>\n                           </Card>\n                         </Col>\n                       ))}\n                     </Row>\n                   </div>\n                 ))}\n               </div>\n\n               {/* Botón de Redes Neuronales */}\n               <div style={{ textAlign: 'center', marginTop: '40px', marginBottom: '20px' }}>\n                 <Button\n                   type=\"primary\"\n                   size=\"large\"\n                   icon={<RocketOutlined />}\n                   onClick={cargarRedesNeuronales}\n                   style={{\n                     background: 'linear-gradient(135deg, #722ed1 0%, #9254de 100%)',\n                     border: 'none',\n                     borderRadius: '25px',\n                     height: '50px',\n                     padding: '0 30px',\n                     fontSize: '16px',\n                     fontWeight: 'bold',\n                     boxShadow: '0 8px 25px rgba(114, 46, 209, 0.3)',\n                     transform: 'translateY(0)',\n                     transition: 'all 0.3s ease'\n                   }}\n                   onMouseEnter={(e) => {\n                     e.target.style.transform = 'translateY(-2px)';\n                     e.target.style.boxShadow = '0 12px 35px rgba(114, 46, 209, 0.4)';\n                   }}\n                   onMouseLeave={(e) => {\n                     e.target.style.transform = 'translateY(0)';\n                     e.target.style.boxShadow = '0 8px 25px rgba(114, 46, 209, 0.3)';\n                   }}\n                 >\n                   🧠 Análisis de Redes Neuronales\n                 </Button>\n                 <p style={{ marginTop: '10px', color: '#666', fontSize: '14px' }}>\n                   Explora 5 arquitecturas de redes neuronales avanzadas\n                 </p>\n               </div>\n             </div>\n           </TabPane>\n\n          <TabPane tab=\"📊 Gráficos Detallados\" key=\"3\">\n            <div style={{ marginBottom: '20px' }}>\n              <div style={{ \n                background: 'linear-gradient(135deg, #87CEEB 0%, #B0E0E6 100%)',\n                color: '#2c3e50',\n                padding: '15px',\n                borderRadius: '8px',\n                marginBottom: '20px'\n              }}>\n                <h3 style={{ margin: 0, textAlign: 'center' }}>📊 Gráficos Detallados</h3>\n              </div>\n\n              <Row gutter={[16, 16]}>\n                {metodosML.map((metodo, index) => (\n                  <Col xs={24} lg={12} key={metodo.id}>\n                    <Card title={`Gráficos de ${metodo.nombre}`} style={{ marginBottom: '20px', borderRadius: '10px', boxShadow: '0 5px 15px rgba(0,0,0,0.1)', border: 'none' }}>\n                      <Row gutter={[16, 16]}>\n                        <Col span={24}>\n                          <h4>Rendimiento del Algoritmo</h4>\n                          <ResponsiveContainer width=\"100%\" height={200}>\n                            <BarChart data={\n                              metodo.categoria === 'Clustering' ? [\n                                { metrica: 'Silhouette Score', valor: ((metodo.silhouette || 0) * 100).toFixed(1) }\n                              ] : [\n                                { metrica: 'Accuracy', valor: (metodo.accuracy * 100).toFixed(1) },\n                                { metrica: 'AUC', valor: (metodo.auc * 100).toFixed(1) }\n                              ]\n                            }>\n                              <CartesianGrid strokeDasharray=\"3 3\" />\n                              <XAxis dataKey=\"metrica\" />\n                              <YAxis label={{ value: 'Métrica (%)', angle: -90, position: 'insideLeft' }} />\n                              <Tooltip formatter={(value) => [`${value}%`, 'Valor']} />\n                              <Bar dataKey=\"valor\" fill={metodo.categoria === 'Clustering' ? '#722ed1' : '#1890ff'} />\n                            </BarChart>\n                          </ResponsiveContainer>\n                        </Col>\n                        \n                        <Col span={24}>\n                          <h4>Gráfico Específico del Algoritmo</h4>\n                          {renderSpecificChart(metodo)}\n                        </Col>\n                      </Row>\n                      \n                      <div style={{ marginTop: '15px', padding: '10px', background: '#f5f5f5', borderRadius: '5px' }}>\n                        <h5>Variables Utilizadas:</h5>\n                        <div>\n                          {(metodo.variables_utilizadas || []).map((variable, i) => (\n                            <span key={i} style={{\n                              display: 'inline-block',\n                              background: '#1890ff',\n                              color: '#2c3e50',\n                              padding: '2px 6px',\n                              margin: '2px',\n                              borderRadius: '3px',\n                              fontSize: '11px'\n                            }}>\n                              {variable}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                    </Card>\n                  </Col>\n                ))}\n              </Row>\n            </div>\n          </TabPane>\n\n           <TabPane tab=\"🏆 Comparación Final\" key=\"4\">\n             {dashboardData?.resumen_analisis?.mejor_algoritmo && (\n               <Alert\n                 message=\"Mejor Método Identificado\"\n                 description={`${dashboardData.resumen_analisis.mejor_algoritmo.nombre} con Accuracy: ${(dashboardData.resumen_analisis.mejor_algoritmo.accuracy * 100).toFixed(1)}% y AUC: ${dashboardData.resumen_analisis.mejor_algoritmo.auc.toFixed(3)}`}\n                 type=\"success\"\n                 showIcon\n                 style={{ marginBottom: '20px' }}\n               />\n             )}\n             \n             {/* ACLARACIÓN IMPORTANTE SOBRE EL ALCANCE DEL ANÁLISIS */}\n             <Card style={{ marginBottom: '20px', background: '#f0f8ff', border: '2px solid #1890ff' }}>\n               <div style={{ padding: '20px' }}>\n                 <h3 style={{ color: '#1890ff', marginBottom: '15px', textAlign: 'center' }}>\n                   🧠 ANÁLISIS INTELIGENTE APLICADO A 1,325 ARTÍCULOS PERIODÍSTICOS\n                 </h3>\n                 \n                 <div style={{ marginBottom: '20px' }}>\n                   <h4 style={{ color: '#52c41a', marginBottom: '10px' }}>\n                     ✅ DATASET INTELIGENTE ANALIZADO (1,325 artículos de 13 periódicos):\n                   </h4>\n                   <p style={{ marginBottom: '10px', fontSize: '14px' }}>\n                     <strong>📰 PERIÓDICOS ANALIZADOS:</strong>\n                   </p>\n                   <ul style={{ fontSize: '13px', marginLeft: '20px' }}>\n                     <li><strong>Elmundo:</strong> 382 artículos (24.3%)</li>\n                     <li><strong>La Vanguardia:</strong> 277 artículos (17.6%)</li>\n                     <li><strong>El Popular:</strong> 184 artículos (11.7%)</li>\n                     <li><strong>Ojo:</strong> 153 artículos (9.7%)</li>\n                     <li><strong>El Comercio:</strong> 147 artículos (9.4%)</li>\n                     <li><strong>Trome:</strong> 110 artículos (7.0%)</li>\n                     <li><strong>Diario Sin Fronteras:</strong> 105 artículos (6.7%)</li>\n                     <li><strong>Nytimes:</strong> 89 artículos (5.7%)</li>\n                     <li><strong>America:</strong> 34 artículos (2.2%)</li>\n                     <li><strong>Dario Sin Fronteras:</strong> 33 artículos (2.1%)</li>\n                     <li><strong>El popular:</strong> 32 artículos (2.0%)</li>\n                     <li><strong>Peru21:</strong> 18 artículos (1.1%)</li>\n                     <li><strong>El Peruano:</strong> 7 artículos (0.4%)</li>\n                   </ul>\n                 </div>\n                 \n                 <div style={{ marginBottom: '20px' }}>\n                   <h4 style={{ color: '#fa8c16', marginBottom: '10px' }}>\n                     🧠 CRITERIOS INTELIGENTES DE IMPORTANCIA APLICADOS:\n                   </h4>\n                   <p style={{ fontSize: '14px', marginBottom: '10px' }}>\n                     Los artículos se clasificaron como \"importantes\" usando criterios <strong>INTELIGENTES Y PERIODÍSTICOS</strong>:\n                   </p>\n                   <ol style={{ fontSize: '13px', marginLeft: '20px' }}>\n                     <li><strong>Contenido sustancial</strong> (longitud + palabras del contenido)</li>\n                     <li><strong>Estructura periodística</strong> (títulos informativos + contenido estructurado)</li>\n                     <li><strong>Prestigio del medio</strong> (La Vanguardia, Elmundo, Nytimes)</li>\n                     <li><strong>Relevancia temática</strong> (Internacional, Política, Economía)</li>\n                     <li><strong>Contenido temático</strong> (análisis de palabras clave importantes)</li>\n                     <li><strong>Complejidad del contenido</strong> (análisis de complejidad textual)</li>\n                   </ol>\n                   <p style={{ fontSize: '13px', color: '#1890ff', fontWeight: 'bold' }}>\n                     ✅ Un artículo es importante si cumple 4+ criterios de calidad periodística.\n                   </p>\n                 </div>\n                 \n                 <div style={{ marginBottom: '20px' }}>\n                   <h4 style={{ color: '#722ed1', marginBottom: '10px' }}>\n                     📊 RESULTADOS REALES DE LOS ALGORITMOS:\n                   </h4>\n                   <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '10px', marginBottom: '15px' }}>\n                     <div style={{ background: '#f6ffed', padding: '10px', borderRadius: '5px', border: '1px solid #52c41a' }}>\n                       <strong style={{ color: '#52c41a' }}>🥇 HistGradientBoosting:</strong><br/>\n                       <span style={{ fontSize: '12px' }}>98.1% accuracy, AUC: 0.996</span>\n                     </div>\n                     <div style={{ background: '#f6ffed', padding: '10px', borderRadius: '5px', border: '1px solid #52c41a' }}>\n                       <strong style={{ color: '#52c41a' }}>🥈 Árbol de Decisión:</strong><br/>\n                       <span style={{ fontSize: '12px' }}>97.4% accuracy, AUC: 0.941</span>\n                     </div>\n                     <div style={{ background: '#f6ffed', padding: '10px', borderRadius: '5px', border: '1px solid #52c41a' }}>\n                       <strong style={{ color: '#52c41a' }}>🥉 Ensemble:</strong><br/>\n                       <span style={{ fontSize: '12px' }}>97.0% accuracy, AUC: 0.917</span>\n                     </div>\n                     <div style={{ background: '#fff7e6', padding: '10px', borderRadius: '5px', border: '1px solid #faad14' }}>\n                       <strong style={{ color: '#fa8c16' }}>Regresión Logística:</strong><br/>\n                       <span style={{ fontSize: '12px' }}>93.2% accuracy, AUC: 0.948</span>\n                     </div>\n                   </div>\n                 </div>\n                 \n                 <div style={{ marginBottom: '20px' }}>\n                   <h4 style={{ color: '#1890ff', marginBottom: '10px' }}>\n                     🔍 CARACTERÍSTICAS ANALIZADAS POR LOS ALGORITMOS:\n                   </h4>\n                   <ul style={{ fontSize: '13px', marginLeft: '20px' }}>\n                     <li><strong>TF-IDF del texto:</strong> Análisis semántico avanzado (unigramas + bigramas)</li>\n                     <li><strong>Análisis de complejidad:</strong> Complejidad textual y estructura periodística</li>\n                     <li><strong>Análisis temático:</strong> Conteo de palabras clave (política, economía, internacional)</li>\n                     <li><strong>Prestigio del medio:</strong> Clasificación por reconocimiento periodístico</li>\n                     <li><strong>Relevancia temática:</strong> Clasificación por importancia de categorías</li>\n                     <li><strong>Estructura periodística:</strong> Títulos informativos y contenido estructurado</li>\n                     <li><strong>Características temporales:</strong> Análisis de días de la semana y fines de semana</li>\n                   </ul>\n                 </div>\n                 \n                 <div style={{ background: '#fff7e6', padding: '15px', borderRadius: '8px', border: '1px solid #faad14' }}>\n                   <h4 style={{ color: '#fa8c16', marginBottom: '10px' }}>\n                     💡 INTERPRETACIÓN DE RESULTADOS REALES:\n                   </h4>\n                   <p style={{ fontSize: '13px', marginBottom: '10px' }}>\n                     <strong>Los algoritmos de boosting (HistGradientBoosting) lograron 98.1% de precisión porque:</strong>\n                   </p>\n                   <ul style={{ fontSize: '12px', marginLeft: '20px', marginBottom: '10px' }}>\n                     <li>Pueden capturar <strong>interacciones complejas</strong> entre múltiples criterios periodísticos</li>\n                     <li>Son excelentes para <strong>características textuales</strong> y análisis semántico</li>\n                     <li>Pueden manejar <strong>relaciones no lineales</strong> entre prestigio, relevancia y contenido</li>\n                   </ul>\n                   <p style={{ fontSize: '13px', marginBottom: '10px' }}>\n                     <strong>Los algoritmos de árboles (Árbol de Decisión) también funcionaron bien porque:</strong>\n                   </p>\n                   <ul style={{ fontSize: '12px', marginLeft: '20px', marginBottom: '10px' }}>\n                     <li>Pueden crear <strong>reglas interpretables</strong> para criterios periodísticos</li>\n                     <li>Son buenos para <strong>características categóricas</strong> como prestigio y relevancia</li>\n                   </ul>\n                   <p style={{ fontSize: '13px', fontWeight: 'bold', color: '#1890ff' }}>\n                     🎯 CONCLUSIÓN: Los algoritmos de boosting son ideales para análisis periodístico complejo con múltiples criterios de calidad.\n                   </p>\n                 </div>\n               </div>\n             </Card>\n             \n             <Table\n               dataSource={metodosML.map((metodo) => ({\n                 key: metodo.id,\n                 ranking: metodo.ranking || metodo.id,\n                 nombre: metodo.nombre,\n                 categoria: metodo.categoria,\n                 accuracy: `${(metodo.accuracy * 100).toFixed(1)}%`,\n                 auc: metodo.auc.toFixed(3),\n                 estado: metodo.estado\n               }))}\n               columns={[\n                 {\n                   title: 'Ranking',\n                   dataIndex: 'ranking',\n                   key: 'ranking',\n                   width: 80,\n                   render: (ranking) => (\n                     <Tag color={ranking <= 3 ? 'gold' : ranking <= 5 ? 'blue' : 'default'}>\n                       #{ranking}\n                     </Tag>\n                   )\n                 },\n                 {\n                   title: 'Algoritmo',\n                   dataIndex: 'nombre',\n                   key: 'nombre',\n                   render: (nombre) => <strong>{nombre}</strong>\n                 },\n                 {\n                   title: 'Categoría',\n                   dataIndex: 'categoria',\n                   key: 'categoria',\n                   render: (categoria) => (\n                     <Tag color={getMethodTypeColor(categoria.toLowerCase())}>\n                       {categoria}\n                     </Tag>\n                   )\n                 },\n                 {\n                   title: 'Accuracy',\n                   dataIndex: 'accuracy',\n                   key: 'accuracy',\n                   render: (accuracy) => <strong style={{ color: '#52c41a' }}>{accuracy}</strong>\n                 },\n                 {\n                   title: 'AUC',\n                   dataIndex: 'auc',\n                   key: 'auc',\n                   render: (auc) => <strong style={{ color: '#1890ff' }}>{auc}</strong>\n                 },\n                 {\n                   title: 'Estado',\n                   dataIndex: 'estado',\n                   key: 'estado',\n                   render: (estado) => (\n                     <Tag color={estado === 'Excelente' ? 'green' : estado === 'Bueno' ? 'blue' : estado === 'Regular' ? 'orange' : 'red'}>\n                       {estado}\n                     </Tag>\n                   )\n                 }\n               ]}\n               pagination={false}\n               style={{ marginBottom: '20px' }}\n             />\n             \n             {/* CONCLUSIONES Y RECOMENDACIONES */}\n             <Card title=\"🏆 CONCLUSIONES Y RECOMENDACIONES FINALES\" style={{ marginTop: '20px', background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)', color: 'white' }}>\n               <div style={{ padding: '20px', background: 'rgba(255,255,255,0.95)', color: '#333', borderRadius: '10px' }}>\n                 <h3 style={{ color: '#1890ff', marginBottom: '20px', textAlign: 'center' }}>\n                   📊 ANÁLISIS COMPLETO DE 10 ALGORITMOS DE MACHINE LEARNING\n                 </h3>\n                 \n                 <Row gutter={[16, 16]}>\n                   <Col xs={24} md={12}>\n                     <Card title=\"🥇 MEJORES ALGORITMOS\" size=\"small\" style={{ background: '#f6ffed', border: '2px solid #52c41a' }}>\n                       <h4 style={{ color: '#52c41a', marginBottom: '15px' }}>🏆 TOP 3 ALGORITMOS:</h4>\n                       <ol style={{ fontSize: '14px', fontWeight: 'bold' }}>\n                         <li style={{ marginBottom: '10px' }}>\n                           <strong style={{ color: '#52c41a' }}>Árbol de Decisión:</strong> 100.0% accuracy\n                           <br/><span style={{ fontSize: '12px', color: '#666' }}>✅ Excelente para interpretabilidad y reglas claras</span>\n                         </li>\n                         <li style={{ marginBottom: '10px' }}>\n                           <strong style={{ color: '#52c41a' }}>HistGradientBoosting:</strong> 100.0% accuracy\n                           <br/><span style={{ fontSize: '12px', color: '#666' }}>✅ Potente para datos complejos y no lineales</span>\n                         </li>\n                         <li style={{ marginBottom: '10px' }}>\n                           <strong style={{ color: '#52c41a' }}>Random Forest:</strong> 99.7% accuracy\n                           <br/><span style={{ fontSize: '12px', color: '#666' }}>✅ Robusto y resistente al overfitting</span>\n                         </li>\n                       </ol>\n                     </Card>\n                   </Col>\n                   \n                   <Col xs={24} md={12}>\n                     <Card title=\"📈 ALGORITMOS REGULARES\" size=\"small\" style={{ background: '#fff7e6', border: '2px solid #faad14' }}>\n                       <h4 style={{ color: '#fa8c16', marginBottom: '15px' }}>⚖️ RENDIMIENTO MEDIO:</h4>\n                       <ul style={{ fontSize: '14px' }}>\n                         <li style={{ marginBottom: '8px' }}>\n                           <strong>Regresión Logística:</strong> 95.2% - Buena para problemas lineales\n                         </li>\n                         <li style={{ marginBottom: '8px' }}>\n                           <strong>Ensemble:</strong> 95.2% - Combinación de múltiples modelos\n                         </li>\n                         <li style={{ marginBottom: '8px' }}>\n                           <strong>SVM:</strong> 89.5% - Bueno para separación no lineal\n                         </li>\n                         <li style={{ marginBottom: '8px' }}>\n                           <strong>Naive Bayes:</strong> 77.1% - Rápido pero limitado\n                         </li>\n                       </ul>\n                     </Card>\n                   </Col>\n                 </Row>\n                 \n                 <Row gutter={[16, 16]} style={{ marginTop: '20px' }}>\n                   <Col xs={24} md={12}>\n                     <Card title=\"⚠️ ALGORITMOS CON LIMITACIONES\" size=\"small\" style={{ background: '#fff1f0', border: '2px solid #ff4d4f' }}>\n                       <h4 style={{ color: '#ff4d4f', marginBottom: '15px' }}>🔻 RENDIMIENTO BAJO:</h4>\n                       <ul style={{ fontSize: '14px' }}>\n                         <li style={{ marginBottom: '8px' }}>\n                           <strong>K-Nearest Neighbors:</strong> 63.8% - Sensible al ruido\n                         </li>\n                         <li style={{ marginBottom: '8px' }}>\n                           <strong>ARIMA:</strong> 60.0% - No apropiado para clasificación\n                         </li>\n                         <li style={{ marginBottom: '8px' }}>\n                           <strong>K-Means Clustering:</strong> 4.9% - Algoritmo no supervisado\n                         </li>\n                       </ul>\n                     </Card>\n                   </Col>\n                   \n                   <Col xs={24} md={12}>\n                     <Card title=\"💡 RECOMENDACIONES PRÁCTICAS\" size=\"small\" style={{ background: '#e6f7ff', border: '2px solid #1890ff' }}>\n                       <h4 style={{ color: '#1890ff', marginBottom: '15px' }}>🎯 PARA PRODUCCIÓN:</h4>\n                       <ul style={{ fontSize: '14px' }}>\n                         <li style={{ marginBottom: '8px' }}>\n                           <strong>Usar Árbol de Decisión</strong> para interpretabilidad\n                         </li>\n                         <li style={{ marginBottom: '8px' }}>\n                           <strong>Usar HistGradientBoosting</strong> para máxima precisión\n                         </li>\n                         <li style={{ marginBottom: '8px' }}>\n                           <strong>Usar Random Forest</strong> para robustez\n                         </li>\n                         <li style={{ marginBottom: '8px' }}>\n                           <strong>Evitar K-Means</strong> para clasificación supervisada\n                         </li>\n                       </ul>\n                     </Card>\n                   </Col>\n                 </Row>\n                 \n                 <div style={{ marginTop: '20px', padding: '15px', background: '#f0f8ff', borderRadius: '8px', border: '1px solid #1890ff' }}>\n                   <h4 style={{ color: '#1890ff', marginBottom: '15px', textAlign: 'center' }}>\n                     🎯 CONCLUSIÓN FINAL\n                   </h4>\n                   <p style={{ fontSize: '16px', textAlign: 'center', fontWeight: 'bold', marginBottom: '15px' }}>\n                     <strong>El mejor algoritmo para clasificar artículos periodísticos es el Árbol de Decisión con 100% de accuracy,</strong>\n                     <br/>seguido por HistGradientBoosting y Random Forest, todos con excelente rendimiento.\n                   </p>\n                   <p style={{ fontSize: '14px', textAlign: 'center', color: '#666' }}>\n                     Estos algoritmos pueden identificar automáticamente qué artículos son importantes basándose en características como:\n                     <strong> longitud del contenido, periódico de origen, categoría, y cantidad de imágenes.</strong>\n                   </p>\n                 </div>\n               </div>\n             </Card>\n             \n             {dashboardData?.resumen_analisis?.recomendaciones && (\n               <Card title=\"💡 Recomendaciones\" style={{ marginTop: '20px' }}>\n                 <ul>\n                   {(dashboardData?.resumen_analisis?.recomendaciones || []).map((rec, index) => (\n                     <li key={index} style={{ marginBottom: '10px' }}>{rec}</li>\n                   ))}\n                 </ul>\n               </Card>\n             )}\n             \n             {dashboardData?.resumen_analisis?.objetivos_especificos && (\n               <Card title=\"🎯 Objetivos Específicos por Tipo de Algoritmo\" style={{ marginTop: '20px' }}>\n                 <Row gutter={[16, 16]}>\n                   <Col xs={24} md={8}>\n                     <Card size=\"small\" title=\"🤖 Clasificación\" style={{ background: '#f6ffed' }}>\n                       <p>{dashboardData.resumen_analisis.objetivos_especificos.clasificacion}</p>\n                     </Card>\n                   </Col>\n                   <Col xs={24} md={8}>\n                     <Card size=\"small\" title=\"🔍 Clustering\" style={{ background: '#fff7e6' }}>\n                       <p>{dashboardData.resumen_analisis.objetivos_especificos.clustering}</p>\n                     </Card>\n                   </Col>\n                   <Col xs={24} md={8}>\n                     <Card size=\"small\" title=\"📈 Temporal\" style={{ background: '#e6f7ff' }}>\n                       <p>{dashboardData.resumen_analisis.objetivos_especificos.temporal}</p>\n                     </Card>\n                   </Col>\n                 </Row>\n               </Card>\n             )}\n           </TabPane>\n\n           <TabPane tab=\"📋 Conclusión y Evaluación\" key=\"5\">\n             {dashboardData?.resumen_analisis?.conclusion_evaluacion && (\n               <div>\n                 <Alert\n                   message={dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_general}\n                   description={`${dashboardData.resumen_analisis.conclusion_evaluacion.nivel_academico}`}\n                   type=\"success\"\n                   showIcon\n                   style={{ marginBottom: '20px' }}\n                 />\n                 \n                 <Card title=\"🎯 Fortalezas Principales del Proyecto\" style={{ marginBottom: '20px' }}>\n                   <ul>\n                     {dashboardData.resumen_analisis.conclusion_evaluacion.fortalezas_principales.map((fortaleza, index) => (\n                       <li key={index} style={{ marginBottom: '8px', color: '#52c41a' }}>\n                         <CheckCircleOutlined style={{ marginRight: '8px', color: '#52c41a' }} />\n                         {fortaleza}\n                       </li>\n                     ))}\n                   </ul>\n                 </Card>\n\n                 <Row gutter={[16, 16]}>\n                   <Col xs={24} md={12}>\n                     <Card title=\"📊 Resultados Académicos\" size=\"small\">\n                       <div style={{ fontSize: '16px' }}>\n                         <p><strong>Accuracy Promedio:</strong> {dashboardData.resumen_analisis.conclusion_evaluacion.resultados_academicos.accuracy_promedio}</p>\n                         <p><strong>Algoritmos Excelentes:</strong> {dashboardData.resumen_analisis.conclusion_evaluacion.resultados_academicos.algoritmos_excelentes}</p>\n                         <p><strong>Mejor Algoritmo:</strong> {dashboardData.resumen_analisis.conclusion_evaluacion.resultados_academicos.mejor_algoritmo}</p>\n                         <p><strong>K-Means Silhouette:</strong> {dashboardData.resumen_analisis.conclusion_evaluacion.resultados_academicos.kmeans_silhouette}</p>\n                       </div>\n                     </Card>\n                   </Col>\n                   <Col xs={24} md={12}>\n                     <Card title=\"🔬 Evaluación Técnica\" size=\"small\">\n                       <div style={{ fontSize: '14px' }}>\n                         <p><strong>Datos Utilizados:</strong> {dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.datos_utilizados}</p>\n                         <p><strong>Feature Engineering:</strong> {dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.feature_engineering}</p>\n                         <p><strong>Algoritmos:</strong> {dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.algoritmos_implementados}</p>\n                         <p><strong>Variable Objetivo:</strong> {dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.variable_objetivo}</p>\n                         <p><strong>Preprocesamiento:</strong> {dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.preprocesamiento}</p>\n                         <p><strong>Métricas:</strong> {dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.metricas_evaluacion}</p>\n                         <p><strong>Interpretación:</strong> {dashboardData.resumen_analisis.conclusion_evaluacion.evaluacion_tecnica.interpretacion_resultados}</p>\n                       </div>\n                     </Card>\n                   </Col>\n                 </Row>\n\n                 <Card title=\"🏆 Conclusión Final\" style={{ marginTop: '20px', background: '#f6ffed', border: '2px solid #52c41a' }}>\n                   <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#389e0d', textAlign: 'center', padding: '20px' }}>\n                     {dashboardData.resumen_analisis.conclusion_evaluacion.conclusion_final}\n                   </div>\n                 </Card>\n               </div>\n             )}\n           </TabPane>\n\n           {/* Pestaña de Redes Neuronales */}\n           {showRedesNeuronales && (\n             <TabPane tab=\"🧠 Redes Neuronales\" key=\"6\">\n               <div style={{ marginBottom: '20px' }}>\n                 <div style={{ \n                   background: 'linear-gradient(135deg, #722ed1 0%, #9254de 100%)',\n                   color: 'white',\n                   padding: '20px',\n                   borderRadius: '10px',\n                   marginBottom: '20px',\n                   textAlign: 'center'\n                 }}>\n                   <h2 style={{ margin: '0 0 10px 0', fontSize: '2em' }}>\n                     🧠 Análisis de Redes Neuronales\n                   </h2>\n                   <p style={{ margin: '0', fontSize: '1.1em', opacity: 0.9 }}>\n                     5 Arquitecturas Avanzadas para Clasificación de Artículos Periodísticos\n                   </p>\n                 </div>\n\n                 {redesNeuronalesData?.resultados ? (\n                   <Row gutter={[16, 16]}>\n                     {redesNeuronalesData.resultados.map((red, index) => (\n                       <Col xs={24} lg={12} key={red.id}>\n                         <Card \n                           title={`${red.nombre}`}\n                           style={{ \n                             marginBottom: '20px', \n                             borderRadius: '10px', \n                             boxShadow: '0 5px 15px rgba(0,0,0,0.1)', \n                             border: 'none',\n                             background: 'linear-gradient(135deg, #f6f9ff 0%, #e6f7ff 100%)'\n                           }}\n                         >\n                           <Row gutter={[16, 16]}>\n                             <Col span={24}>\n                               <Alert\n                                 message=\"¿Qué es?\"\n                                 description={red.que_es}\n                                 type=\"info\"\n                                 style={{ marginBottom: '15px' }}\n                               />\n                               <Alert\n                                 message=\"¿Cómo funciona?\"\n                                 description={red.como_funciona}\n                                 type=\"success\"\n                                 style={{ marginBottom: '15px' }}\n                               />\n                             </Col>\n                             <Col span={12}>\n                               <Statistic\n                                 title=\"Accuracy\"\n                                 value={(red.accuracy * 100).toFixed(1)}\n                                 suffix=\"%\"\n                                 valueStyle={{ color: getStatusColor(red.accuracy) }}\n                               />\n                             </Col>\n                             <Col span={12}>\n                               <Statistic\n                                 title=\"Estado\"\n                                 value={red.estado}\n                                 valueStyle={{ color: getStatusColor(red.accuracy) }}\n                               />\n                             </Col>\n                             <Col span={24}>\n                               <h4>Variables Utilizadas:</h4>\n                               <ul>\n                                 {red.variables_utilizadas.map((variable, idx) => (\n                                   <li key={idx} style={{ marginBottom: '5px', color: '#1890ff' }}>\n                                     <InfoCircleOutlined style={{ marginRight: '5px' }} />\n                                     {variable}\n                                   </li>\n                                 ))}\n                               </ul>\n                             </Col>\n                           <Col span={24}>\n                             <h4>Proceso Paso a Paso:</h4>\n                             <Steps direction=\"vertical\" size=\"small\">\n                               {red.proceso_paso_a_paso.map((paso, idx) => (\n                                 <Step key={idx} title={paso} />\n                               ))}\n                             </Steps>\n                           </Col>\n                           <Col span={24}>\n                             <Card title=\"Gráfico Específico\" size=\"small\">\n                               {renderSpecificChart(red)}\n                             </Card>\n                           </Col>\n                           <Col span={24}>\n                             <Card title=\"Interpretación Detallada del Resultado\" size=\"small\" style={{ marginTop: '15px' }}>\n                               <Alert\n                                 message=\"¿Qué hizo el algoritmo?\"\n                                 description={red.interpretacion_detallada?.que_hizo || \"Análisis de redes neuronales para clasificación de artículos periodísticos\"}\n                                 type=\"info\"\n                                 style={{ marginBottom: '15px' }}\n                               />\n                               <Alert\n                                 message=\"¿Cómo funcionó?\"\n                                 description={red.interpretacion_detallada?.como_funciono || \"Procesamiento de características textuales y numéricas mediante arquitectura de red neuronal\"}\n                                 type=\"success\"\n                                 style={{ marginBottom: '15px' }}\n                               />\n                               <Alert\n                                 message=\"Evidencia de Éxito\"\n                                 description={red.interpretacion_detallada?.evidencia_exito || `Accuracy del ${(red.accuracy * 100).toFixed(1)}% indica un rendimiento ${red.estado.toLowerCase()}`}\n                                 type=\"warning\"\n                                 style={{ marginBottom: '15px' }}\n                               />\n                               <Alert\n                                 message=\"Variables Más Importantes\"\n                                 description={red.interpretacion_detallada?.variables_importantes || \"Características textuales y numéricas del contenido periodístico\"}\n                                 type=\"info\"\n                                 style={{ marginBottom: '15px' }}\n                               />\n                               <Alert\n                                 message=\"Interpretación de Resultados\"\n                                 description={red.interpretacion_detallada?.interpretacion_resultados || `El ${(red.accuracy * 100).toFixed(1)}% de precisión indica ${red.estado.toLowerCase()} capacidad para determinar la importancia de artículos periodísticos`}\n                                 type=\"success\"\n                                 style={{ marginBottom: '15px' }}\n                               />\n                               <Alert\n                                 message=\"Aplicación Práctica\"\n                                 description={red.interpretacion_detallada?.aplicacion_practica || \"Automatización de clasificación de importancia de artículos para optimizar la curaduría editorial\"}\n                                 type=\"info\"\n                               />\n                             </Card>\n                           </Col>\n                           </Row>\n                         </Card>\n                       </Col>\n                     ))}\n                   </Row>\n                 ) : (\n                   <div style={{ textAlign: 'center', padding: '40px' }}>\n                     <RocketOutlined style={{ fontSize: '48px', color: '#722ed1', marginBottom: '20px' }} />\n                     <h3>🧠 Redes Neuronales</h3>\n                     <p>Haz clic en el botón \"Análisis de Redes Neuronales\" para cargar los datos</p>\n                   </div>\n                 )}\n               </div>\n             </TabPane>\n           )}\n         </Tabs>\n       </div>\n     </div>\n   );\n }\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}