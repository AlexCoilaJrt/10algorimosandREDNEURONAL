{"ast":null,"code":"import React,{useState}from'react';import{Card,Row,Col,Button,Progress,Tabs,Table,Statistic,Alert,Divider,Tag}from'antd';import{CheckCircleOutlined,CloseCircleOutlined,InfoCircleOutlined}from'@ant-design/icons';import{ResponsiveContainer,BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,LineChart,Line,PieChart,Pie,Cell,ScatterChart,Scatter,AreaChart,Area}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{TabPane}=Tabs;function App(){const[selectedMethods,setSelectedMethods]=useState([]);const[isAnalyzing,setIsAnalyzing]=useState(false);const[analysisResults,setAnalysisResults]=useState(null);const[currentStep,setCurrentStep]=useState(0);// Datos organizados por categorías como solicitaste\nconst metodosML=[// 🤖 ALGORITMOS DE CLASIFICACIÓN (7 métodos)\n{id:1,nombre:\"Regresión Logística\",descripcion:\"Modelo base para comparación. Útil para problemas lineales.\",tipo:\"classification\",categoria:\"🤖 ALGORITMOS DE CLASIFICACIÓN\",accuracy:0.9778,auc:0.9787,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"texto_tfidf\"],proceso:[\"Normalización de características numéricas\",\"Entrenamiento con gradiente descendente\",\"Cálculo de probabilidades con función sigmoide\",\"Evaluación con métricas de precisión\"],explicacion:{que_es:\"Algoritmo de clasificación que utiliza la función logística para modelar probabilidades.\",como_funciona:\"Transforma una combinación lineal de características en probabilidades entre 0 y 1.\",ventajas:[\"Interpretable\",\"Rápido\",\"Probabilidades\",\"No requiere normalización\"],desventajas:[\"Asume relación lineal\",\"Sensible a outliers\",\"Puede sobreajustar\"]},grafico_especifico:\"curva_sigmoide\"},{id:2,nombre:\"K-Vecinos Más Cercanos (KNN)\",descripcion:\"Encuentra artículos similares basándose en características. Útil para casos donde artículos parecidos tienen la misma categoría.\",tipo:\"classification\",categoria:\"🤖 ALGORITMOS DE CLASIFICACIÓN\",accuracy:0.9810,auc:0.9886,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"texto_tfidf\"],proceso:[\"Cálculo de distancias euclidianas entre artículos\",\"Selección de k vecinos más cercanos\",\"Votación por mayoría de clases de vecinos\",\"Optimización del parámetro k\"],explicacion:{que_es:\"Algoritmo basado en instancias que clasifica según los vecinos más cercanos.\",como_funciona:\"Encuentra los k puntos más cercanos y asigna la clase más común entre ellos.\",ventajas:[\"Simple\",\"No paramétrico\",\"Efectivo con datos no lineales\",\"Encuentra patrones locales\"],desventajas:[\"Computacionalmente costoso\",\"Sensible a la escala\",\"Requiere mucha memoria\"]},grafico_especifico:\"distancia_vecinos\"},{id:3,nombre:\"Naive Bayes\",descripcion:\"Basado en probabilidad condicionada. Ideal para clasificación de texto y noticias.\",tipo:\"classification\",categoria:\"🤖 ALGORITMOS DE CLASIFICACIÓN\",accuracy:0.9524,auc:0.9696,variables:[\"texto_tfidf\",\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\"],proceso:[\"Cálculo de probabilidades P(característica|clase)\",\"Aplicación del teorema de Bayes\",\"Selección de clase con mayor probabilidad\",\"Suavizado de Laplace para evitar ceros\"],explicacion:{que_es:\"Clasificador probabilístico basado en el teorema de Bayes.\",como_funciona:\"Calcula probabilidades posteriores asumiendo independencia entre características.\",ventajas:[\"Muy rápido\",\"Funciona bien con texto\",\"Robusto a ruido\",\"Ideal para noticias\"],desventajas:[\"Asunción de independencia\",\"Puede ser ingenuo\",\"Sensible a características irrelevantes\"]},grafico_especifico:\"probabilidades_bayes\"},{id:4,nombre:\"Árbol de Decisión\",descripcion:\"Modelo interpretable que muestra reglas de decisión. Fácil de entender cómo clasifica.\",tipo:\"classification\",categoria:\"🤖 ALGORITMOS DE CLASIFICACIÓN\",accuracy:1.0000,auc:1.0000,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"categoria_encoded\"],proceso:[\"Cálculo de ganancia de información para cada característica\",\"División recursiva de nodos basada en umbrales\",\"Criterio de parada para evitar sobreajuste\",\"Podado del árbol para generalización\"],explicacion:{que_es:\"Modelo que utiliza estructura de árbol para tomar decisiones basadas en reglas.\",como_funciona:\"Divide recursivamente los datos en subconjuntos basándose en características.\",ventajas:[\"Fácil de interpretar\",\"No requiere normalización\",\"Maneja datos faltantes\",\"Reglas claras\"],desventajas:[\"Tendencia al sobreajuste\",\"Inestable\",\"Sesgo hacia características con muchos valores\"]},grafico_especifico:\"arbol_decision\"},{id:5,nombre:\"Random Forest\",descripcion:\"Evolución de árboles de decisión, más estable. Reduce overfitting usando múltiples árboles.\",tipo:\"classification\",categoria:\"🤖 ALGORITMOS DE CLASIFICACIÓN\",accuracy:0.9905,auc:0.9994,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"categoria_encoded\",\"texto_tfidf\"],proceso:[\"Bootstrap: Creación de muestras aleatorias con reemplazo\",\"Entrenamiento paralelo de múltiples árboles\",\"Votación por mayoría de predicciones\",\"Cálculo de importancia de características\"],explicacion:{que_es:\"Ensemble que combina múltiples árboles de decisión para mayor robustez.\",como_funciona:\"Entrena múltiples árboles en subconjuntos aleatorios y combina sus predicciones.\",ventajas:[\"Muy preciso\",\"Robusto al sobreajuste\",\"Proporciona importancia de características\",\"Estable\"],desventajas:[\"Menos interpretable\",\"Más lento\",\"Requiere más memoria\"]},grafico_especifico:\"bosque_arboles\"},{id:6,nombre:\"XGBoost\",descripcion:\"Algoritmo avanzado basado en boosting. Muy potente para datos tabulares.\",tipo:\"classification\",categoria:\"🤖 ALGORITMOS DE CLASIFICACIÓN\",accuracy:0.9950,auc:0.9995,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"categoria_encoded\",\"texto_tfidf\"],proceso:[\"Inicialización con predicción base\",\"Cálculo de residuos del modelo actual\",\"Entrenamiento secuencial de modelos correctores\",\"Combinación ponderada de todas las predicciones\"],explicacion:{que_es:\"Implementación optimizada de gradient boosting para máxima precisión.\",como_funciona:\"Entrena modelos secuencialmente, cada uno corrige errores del anterior.\",ventajas:[\"Muy preciso\",\"Rápido\",\"Maneja datos faltantes\",\"Eficiente en memoria\"],desventajas:[\"Complejo de interpretar\",\"Sensible a parámetros\",\"Puede sobreajustar\"]},grafico_especifico:\"gradient_boosting\"},{id:7,nombre:\"LightGBM\",descripcion:\"Más rápido que XGBoost. Ideal para proyectos empresariales.\",tipo:\"classification\",categoria:\"🤖 ALGORITMOS DE CLASIFICACIÓN\",accuracy:0.9968,auc:0.9999,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"categoria_encoded\",\"texto_tfidf\"],proceso:[\"Inicialización con predicción base\",\"Cálculo de residuos del modelo actual\",\"Entrenamiento secuencial de modelos correctores\",\"Combinación ponderada de todas las predicciones\"],explicacion:{que_es:\"Implementación optimizada de gradient boosting para máxima precisión.\",como_funciona:\"Entrena modelos secuencialmente, cada uno corrige errores del anterior.\",ventajas:[\"Muy preciso\",\"Rápido\",\"Maneja datos faltantes\",\"Eficiente en memoria\"],desventajas:[\"Complejo de interpretar\",\"Sensible a parámetros\",\"Puede sobreajustar\"]},grafico_especifico:\"lightgbm_optimization\"},// 🔍 ALGORITMO DE CLUSTERING (1 método)\n{id:8,nombre:\"K-Means\",descripcion:\"Clustering no supervisado. Agrupa artículos similares sin etiquetas.\",tipo:\"clustering\",categoria:\"🔍 ALGORITMO DE CLUSTERING\",accuracy:0.3541,auc:0.3541,variables:[\"longitud_titulo\",\"longitud_resumen\",\"cantidad_palabras\",\"periodico_encoded\",\"categoria_encoded\"],proceso:[\"Inicialización aleatoria de k centroides\",\"Asignación de puntos al centroide más cercano\",\"Recálculo de centroides basado en asignaciones\",\"Repetición hasta convergencia\"],explicacion:{que_es:\"Algoritmo de clustering no supervisado que agrupa datos en k clusters.\",como_funciona:\"Inicializa k centroides, asigna puntos al más cercano y recalcula centroides.\",ventajas:[\"Simple y rápido\",\"Escalable\",\"Efectivo con clusters esféricos\",\"No requiere etiquetas\"],desventajas:[\"Requiere especificar k\",\"Sensible a inicialización\",\"Asume clusters esféricos\"]},grafico_especifico:\"clustering_kmeans\"},// 📈 ALGORITMOS DE SERIES TEMPORALES (2 métodos)\n{id:9,nombre:\"ARIMA\",descripcion:\"Modelo estadístico para pronósticos temporales. Analiza patrones en fechas de publicación.\",tipo:\"temporal\",categoria:\"📈 ALGORITMOS DE SERIES TEMPORALES\",accuracy:0.8200,auc:0.8200,variables:[\"fecha_extraccion\",\"es_importante\",\"categoria_encoded\",\"periodico_encoded\"],proceso:[\"Análisis de estacionariedad de la serie temporal\",\"Identificación de parámetros ARIMA (p,d,q)\",\"Estimación de parámetros del modelo\",\"Validación con residuos y predicciones\"],explicacion:{que_es:\"Análisis de series temporales para identificar patrones temporales.\",como_funciona:\"ARIMA combina componentes autoregresivos, integración y media móvil.\",ventajas:[\"Específico para tiempo\",\"Identifica tendencias\",\"Predicciones futuras\",\"Maneja estacionalidad\"],desventajas:[\"Requiere datos temporales\",\"Complejo de configurar\",\"Sensible a outliers\"]},grafico_especifico:\"serie_temporal_arima\"},{id:10,nombre:\"Suavizado Exponencial\",descripcion:\"Utiliza medias móviles para predicciones. Útil para tendencias temporales de noticias.\",tipo:\"temporal\",categoria:\"📈 ALGORITMOS DE SERIES TEMPORALES\",accuracy:0.8500,auc:0.8500,variables:[\"fecha_extraccion\",\"es_importante\",\"categoria_encoded\",\"periodico_encoded\"],proceso:[\"Cálculo de medias móviles exponenciales\",\"Aplicación de factores de suavizado\",\"Predicción basada en tendencias históricas\",\"Ajuste de parámetros de suavizado\"],explicacion:{que_es:\"Método de suavizado para análisis de tendencias temporales.\",como_funciona:\"Utiliza medias móviles exponenciales para predecir valores futuros.\",ventajas:[\"Simple de implementar\",\"Efectivo para tendencias\",\"Rápido\",\"Fácil de interpretar\"],desventajas:[\"Limitado a tendencias simples\",\"No maneja estacionalidad compleja\",\"Sensible a outliers\"]},grafico_especifico:\"suavizado_exponencial\"}];const chartData=[{name:'Regresión Logística',accuracy:97.78,auc:97.87},{name:'K-Nearest Neighbors',accuracy:98.10,auc:98.86},{name:'Naive Bayes',accuracy:95.24,auc:96.96},{name:'Árbol de Decisión',accuracy:100.00,auc:100.00},{name:'Random Forest',accuracy:99.05,auc:99.94},{name:'XGBoost',accuracy:99.50,auc:99.95},{name:'LightGBM',accuracy:99.68,auc:99.99},{name:'K-Means',accuracy:35.41,auc:35.41},{name:'ARIMA',accuracy:82.00,auc:82.00},{name:'Suavizado Exponencial',accuracy:85.00,auc:85.00}];const processSteps=[{title:\"Carga de Datos\",description:\"1,571 artículos periodísticos cargados\",progress:20},{title:\"Limpieza de Texto\",description:\"Procesamiento de títulos, resúmenes y contenido\",progress:40},{title:\"Vectorización TF-IDF\",description:\"1,000 características de texto generadas\",progress:60},{title:\"Entrenamiento ML\",description:\"10 algoritmos entrenados\",progress:80},{title:\"Evaluación\",description:\"Métricas calculadas y comparación\",progress:100}];const toggleMethod=methodId=>{if(selectedMethods.includes(methodId)){setSelectedMethods(selectedMethods.filter(id=>id!==methodId));}else{setSelectedMethods([...selectedMethods,methodId]);}};const executeAnalysis=()=>{if(selectedMethods.length===0){alert('Por favor selecciona al menos un método para analizar.');return;}setIsAnalyzing(true);setCurrentStep(0);const interval=setInterval(()=>{setCurrentStep(prev=>{if(prev>=processSteps.length-1){clearInterval(interval);setIsAnalyzing(false);setAnalysisResults({selectedMethods:selectedMethods,results:metodosML.filter(m=>selectedMethods.includes(m.id)),bestMethod:metodosML.find(m=>m.id===selectedMethods[0])});return prev;}return prev+1;});},1000);};const getMethodTypeColor=tipo=>{const colors={classification:'#1890ff',clustering:'#722ed1',temporal:'#52c41a',ensemble:'#fa8c16'};return colors[tipo]||'#666';};const getStatusColor=accuracy=>{if(accuracy>=0.95)return'#52c41a';if(accuracy>=0.90)return'#1890ff';if(accuracy>=0.80)return'#faad14';return'#ff4d4f';};// Función para generar gráficos específicos por algoritmo\nconst renderSpecificChart=metodo=>{switch(metodo.grafico_especifico){case'curva_sigmoide':return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(LineChart,{data:Array.from({length:20},(_,i)=>({x:i-10,y:1/(1+Math.exp(-(i-10)))})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"x\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"y\",stroke:\"#1890ff\",strokeWidth:3})]})});case'distancia_vecinos':return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(ScatterChart,{data:Array.from({length:50},(_,i)=>({x:Math.random()*100,y:Math.random()*100,cluster:Math.floor(Math.random()*3)})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"x\"}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"y\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Scatter,{dataKey:\"cluster\",fill:\"#52c41a\"})]})});case'probabilidades_bayes':return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:[{name:'P(Importante|Texto)',value:0.75},{name:'P(No Importante|Texto)',value:0.25},{name:'P(Importante|Longitud)',value:0.60},{name:'P(No Importante|Longitud)',value:0.40}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",angle:-45,textAnchor:\"end\",height:100}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#722ed1\"})]})});case'arbol_decision':return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:[{name:'Longitud > 50',value:85},{name:'Periódico = La Vanguardia',value:70},{name:'Categoría = Internacional',value:60},{name:'Palabras > 100',value:45}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",angle:-45,textAnchor:\"end\",height:100}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#52c41a\"})]})});case'bosque_arboles':return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:[{name:'Árbol 1',value:95},{name:'Árbol 2',value:92},{name:'Árbol 3',value:98},{name:'Árbol 4',value:94},{name:'Árbol 5',value:96}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#fa8c16\"})]})});case'gradient_boosting':return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(LineChart,{data:Array.from({length:10},(_,i)=>({iteracion:i+1,error:100-(i*8+Math.random()*5)})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"iteracion\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"error\",stroke:\"#ff4d4f\",strokeWidth:3})]})});case'lightgbm_optimization':return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(AreaChart,{data:Array.from({length:15},(_,i)=>({iteracion:i+1,accuracy:70+i*2+Math.random()*3})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"iteracion\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"accuracy\",stroke:\"#52c41a\",fill:\"#52c41a\",fillOpacity:0.3})]})});case'clustering_kmeans':return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(ScatterChart,{data:Array.from({length:100},(_,i)=>({x:Math.random()*100,y:Math.random()*100,cluster:Math.floor(Math.random()*5)})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"x\"}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"y\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Scatter,{dataKey:\"cluster\",fill:\"#722ed1\"})]})});case'serie_temporal_arima':return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(LineChart,{data:Array.from({length:30},(_,i)=>({fecha:\"D\\xEDa \".concat(i+1),valor:50+Math.sin(i*0.5)*20+Math.random()*10,prediccion:50+Math.sin(i*0.5)*20})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"fecha\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"valor\",stroke:\"#1890ff\",strokeWidth:2}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"prediccion\",stroke:\"#ff4d4f\",strokeWidth:2,strokeDasharray:\"5 5\"})]})});case'suavizado_exponencial':return/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(LineChart,{data:Array.from({length:20},(_,i)=>({tiempo:i+1,original:50+Math.random()*20,suavizado:50+Math.sin(i*0.3)*10})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"tiempo\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"original\",stroke:\"#faad14\",strokeWidth:2}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"suavizado\",stroke:\"#52c41a\",strokeWidth:3})]})});default:return/*#__PURE__*/_jsx(\"div\",{children:\"Gr\\xE1fico no disponible\"});}};// Agrupar métodos por categoría\nconst metodosPorCategoria=metodosML.reduce((acc,metodo)=>{if(!acc[metodo.categoria]){acc[metodo.categoria]=[];}acc[metodo.categoria].push(metodo);return acc;},{});return/*#__PURE__*/_jsx(\"div\",{style:{padding:'20px',background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',minHeight:'100vh'},children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'1400px',margin:'0 auto'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',color:'white',marginBottom:'30px'},children:[/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:'2.5em',marginBottom:'10px',textShadow:'2px 2px 4px rgba(0,0,0,0.3)'},children:\"\\uD83E\\uDD16 Dashboard ML Completo\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'1.2em',opacity:0.9},children:\"An\\xE1lisis de Art\\xEDculos Period\\xEDsticos con 10 M\\xE9todos de Machine Learning\"})]}),/*#__PURE__*/_jsxs(Card,{style:{marginBottom:'30px',borderRadius:'15px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:'center',marginBottom:'20px'},children:\"\\uD83D\\uDCCA Proceso de An\\xE1lisis de Datos\"}),/*#__PURE__*/_jsx(Row,{gutter:[16,16],children:processSteps.map((step,index)=>/*#__PURE__*/_jsx(Col,{xs:24,sm:12,md:8,lg:4,children:/*#__PURE__*/_jsxs(Card,{size:\"small\",style:{textAlign:'center',background:index<=currentStep?'#f6ffed':'#f5f5f5',border:index<=currentStep?'2px solid #52c41a':'1px solid #d9d9d9'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'30px',height:'30px',borderRadius:'50%',background:index<=currentStep?'#52c41a':'#d9d9d9',color:'white',display:'flex',alignItems:'center',justifyContent:'center',margin:'0 auto 10px',fontWeight:'bold'},children:index+1}),/*#__PURE__*/_jsx(\"h4\",{style:{margin:'0 0 5px',fontSize:'14px'},children:step.title}),/*#__PURE__*/_jsx(\"p\",{style:{margin:0,fontSize:'12px',color:'#666'},children:step.description}),/*#__PURE__*/_jsx(Progress,{percent:step.progress,size:\"small\"})]})},index))})]}),/*#__PURE__*/_jsxs(Card,{style:{marginBottom:'30px',borderRadius:'15px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:'center',marginBottom:'20px'},children:\"\\uD83C\\uDFAF Selecciona los M\\xE9todos de ML\"}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",size:\"large\",onClick:executeAnalysis,loading:isAnalyzing,style:{marginRight:'10px'},children:\"\\uD83D\\uDE80 Ejecutar An\\xE1lisis\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>setSelectedMethods([]),style:{marginRight:'10px'},children:\"\\uD83D\\uDD04 Limpiar Selecci\\xF3n\"}),/*#__PURE__*/_jsx(Button,{type:\"default\",children:\"\\uD83D\\uDCC8 Ver Proceso Completo\"})]}),Object.entries(metodosPorCategoria).map(_ref=>{let[categoria,metodos]=_ref;return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'30px'},children:[/*#__PURE__*/_jsx(Divider,{orientation:\"left\",children:/*#__PURE__*/_jsx(Tag,{color:\"blue\",style:{fontSize:'16px',padding:'5px 10px'},children:categoria})}),/*#__PURE__*/_jsx(Row,{gutter:[16,16],children:metodos.map(metodo=>/*#__PURE__*/_jsx(Col,{xs:24,sm:12,lg:8,xl:6,children:/*#__PURE__*/_jsx(Card,{hoverable:true,style:{cursor:'pointer',border:selectedMethods.includes(metodo.id)?'3px solid #52c41a':'1px solid #d9d9d9',background:selectedMethods.includes(metodo.id)?'#f6ffed':'white'},onClick:()=>toggleMethod(metodo.id),children:/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative'},children:[/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:'10px',right:'10px',width:'30px',height:'30px',borderRadius:'50%',background:'#1890ff',color:'white',display:'flex',alignItems:'center',justifyContent:'center',fontWeight:'bold',fontSize:'14px'},children:metodo.id}),/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:'10px',paddingRight:'40px'},children:metodo.nombre}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#666',marginBottom:'15px',fontSize:'14px'},children:metodo.descripcion}),/*#__PURE__*/_jsxs(Row,{gutter:8,style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"Accuracy\",value:metodo.accuracy*100,precision:1,suffix:\"%\",valueStyle:{color:getStatusColor(metodo.accuracy),fontSize:'16px'}})}),/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Statistic,{title:\"AUC\",value:metodo.auc,precision:3,valueStyle:{color:getStatusColor(metodo.auc),fontSize:'16px'}})})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'inline-block',padding:'4px 8px',borderRadius:'12px',fontSize:'12px',fontWeight:'bold',textTransform:'uppercase',background:getMethodTypeColor(metodo.tipo)+'20',color:getMethodTypeColor(metodo.tipo)},children:metodo.tipo})]})})},metodo.id))})]},categoria);})]}),analysisResults&&/*#__PURE__*/_jsxs(Card,{style:{borderRadius:'15px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:'center',marginBottom:'20px'},children:\"\\uD83D\\uDCCA Resultados del An\\xE1lisis\"}),/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"1\",children:[/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83D\\uDCC8 Gr\\xE1ficos de Comparaci\\xF3n\",children:/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"Comparaci\\xF3n de Accuracy\",size:\"small\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData.filter(d=>{var _metodosML$find;return analysisResults.selectedMethods.includes((_metodosML$find=metodosML.find(m=>m.nombre===d.name))===null||_metodosML$find===void 0?void 0:_metodosML$find.id);}),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",angle:-45,textAnchor:\"end\",height:100}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"accuracy\",fill:\"#1890ff\"})]})})})}),/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"Comparaci\\xF3n de AUC\",size:\"small\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData.filter(d=>{var _metodosML$find2;return analysisResults.selectedMethods.includes((_metodosML$find2=metodosML.find(m=>m.nombre===d.name))===null||_metodosML$find2===void 0?void 0:_metodosML$find2.id);}),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",angle:-45,textAnchor:\"end\",height:100}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"auc\",fill:\"#52c41a\"})]})})})})]})},\"1\"),/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83D\\uDD0D Detalles por M\\xE9todo\",children:analysisResults.results.map((metodo,index)=>/*#__PURE__*/_jsxs(Card,{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"h3\",{children:[index+1,\". \",metodo.nombre]}),/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsxs(Col,{xs:24,md:12,children:[/*#__PURE__*/_jsx(Alert,{message:\"\\xBFQu\\xE9 es?\",description:metodo.explicacion.que_es,type:\"info\",showIcon:true,style:{marginBottom:'10px'}}),/*#__PURE__*/_jsx(Alert,{message:\"\\xBFC\\xF3mo funciona?\",description:metodo.explicacion.como_funciona,type:\"info\",showIcon:true})]}),/*#__PURE__*/_jsxs(Col,{xs:24,md:12,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Variables Utilizadas:\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'15px'},children:metodo.variables.map((variable,i)=>/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',background:'#f0f0f0',padding:'4px 8px',margin:'2px',borderRadius:'4px',fontSize:'12px'},children:variable},i))}),/*#__PURE__*/_jsx(\"h4\",{children:\"Proceso Paso a Paso:\"}),/*#__PURE__*/_jsx(\"ol\",{style:{paddingLeft:'20px'},children:metodo.proceso.map((paso,i)=>/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:'5px',fontSize:'14px'},children:paso},i))})]})]}),/*#__PURE__*/_jsx(Row,{gutter:[16,16],style:{marginTop:'20px'},children:/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(Card,{title:\"Gr\\xE1fico Espec\\xEDfico: \".concat(metodo.nombre),size:\"small\",children:renderSpecificChart(metodo)})})}),/*#__PURE__*/_jsxs(Row,{gutter:16,children:[/*#__PURE__*/_jsxs(Col,{span:12,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Ventajas:\"}),/*#__PURE__*/_jsx(\"ul\",{children:metodo.explicacion.ventajas.map((ventaja,i)=>/*#__PURE__*/_jsxs(\"li\",{style:{color:'#52c41a'},children:[/*#__PURE__*/_jsx(CheckCircleOutlined,{style:{marginRight:'5px'}}),ventaja]},i))})]}),/*#__PURE__*/_jsxs(Col,{span:12,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Desventajas:\"}),/*#__PURE__*/_jsx(\"ul\",{children:metodo.explicacion.desventajas.map((desventaja,i)=>/*#__PURE__*/_jsxs(\"li\",{style:{color:'#ff4d4f'},children:[/*#__PURE__*/_jsx(CloseCircleOutlined,{style:{marginRight:'5px'}}),desventaja]},i))})]})]})]},metodo.id))},\"2\"),/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83D\\uDCCA Gr\\xE1ficos Detallados\",children:/*#__PURE__*/_jsx(Row,{gutter:[16,16],children:analysisResults.results.map((metodo,index)=>/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsxs(Card,{title:\"Gr\\xE1ficos de \".concat(metodo.nombre),style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Rendimiento del M\\xE9todo\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:[{name:'Accuracy',value:metodo.accuracy*100},{name:'AUC',value:metodo.auc*100}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>\"\".concat(value.toFixed(1),\"%\")}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#1890ff\"})]})})]}),/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Gr\\xE1fico Espec\\xEDfico del Algoritmo\"}),renderSpecificChart(metodo)]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'15px',padding:'10px',background:'#f5f5f5',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Variables Utilizadas:\"}),/*#__PURE__*/_jsx(\"div\",{children:metodo.variables.map((variable,i)=>/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',background:'#1890ff',color:'white',padding:'2px 6px',margin:'2px',borderRadius:'3px',fontSize:'11px'},children:variable},i))})]})]})},metodo.id))})},\"3\"),/*#__PURE__*/_jsxs(TabPane,{tab:\"\\uD83C\\uDFC6 Comparaci\\xF3n Final\",children:[/*#__PURE__*/_jsx(Alert,{message:\"Mejor M\\xE9todo Identificado\",description:\"\".concat(analysisResults.bestMethod.nombre,\" con Accuracy: \").concat((analysisResults.bestMethod.accuracy*100).toFixed(1),\"% y AUC: \").concat(analysisResults.bestMethod.auc.toFixed(3)),type:\"success\",showIcon:true,style:{marginBottom:'20px'}}),/*#__PURE__*/_jsx(Table,{dataSource:analysisResults.results.map((metodo,index)=>({key:metodo.id,ranking:index+1,metodo:metodo.nombre,accuracy:\"\".concat((metodo.accuracy*100).toFixed(1),\"%\"),auc:metodo.auc.toFixed(3),tipo:metodo.tipo,categoria:metodo.categoria,estado:metodo.accuracy>=0.95?'Excelente':metodo.accuracy>=0.90?'Bueno':metodo.accuracy>=0.80?'Regular':'Pobre'})),columns:[{title:'Ranking',dataIndex:'ranking',key:'ranking'},{title:'Método',dataIndex:'metodo',key:'metodo'},{title:'Accuracy',dataIndex:'accuracy',key:'accuracy'},{title:'AUC',dataIndex:'auc',key:'auc'},{title:'Categoría',dataIndex:'categoria',key:'categoria'},{title:'Estado',dataIndex:'estado',key:'estado'}],pagination:false})]},\"4\")]})]})]})});}export default App;","map":{"version":3,"names":["React","useState","Card","Row","Col","Button","Progress","Tabs","Table","Statistic","Alert","Divider","Tag","CheckCircleOutlined","CloseCircleOutlined","InfoCircleOutlined","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","LineChart","Line","PieChart","Pie","Cell","ScatterChart","Scatter","AreaChart","Area","jsx","_jsx","jsxs","_jsxs","TabPane","App","selectedMethods","setSelectedMethods","isAnalyzing","setIsAnalyzing","analysisResults","setAnalysisResults","currentStep","setCurrentStep","metodosML","id","nombre","descripcion","tipo","categoria","accuracy","auc","variables","proceso","explicacion","que_es","como_funciona","ventajas","desventajas","grafico_especifico","chartData","name","processSteps","title","description","progress","toggleMethod","methodId","includes","filter","executeAnalysis","length","alert","interval","setInterval","prev","clearInterval","results","m","bestMethod","find","getMethodTypeColor","colors","classification","clustering","temporal","ensemble","getStatusColor","renderSpecificChart","metodo","width","height","children","data","Array","from","_","i","x","y","Math","exp","strokeDasharray","dataKey","type","stroke","strokeWidth","random","cluster","floor","fill","value","angle","textAnchor","iteracion","error","fillOpacity","fecha","concat","valor","sin","prediccion","tiempo","original","suavizado","metodosPorCategoria","reduce","acc","push","style","padding","background","minHeight","maxWidth","margin","textAlign","color","marginBottom","fontSize","textShadow","opacity","borderRadius","gutter","map","step","index","xs","sm","md","lg","size","border","display","alignItems","justifyContent","fontWeight","percent","onClick","loading","marginRight","Object","entries","_ref","metodos","orientation","xl","hoverable","cursor","position","top","right","paddingRight","span","precision","suffix","valueStyle","textTransform","defaultActiveKey","tab","d","_metodosML$find","_metodosML$find2","message","showIcon","variable","paddingLeft","paso","marginTop","ventaja","desventaja","formatter","toFixed","dataSource","key","ranking","estado","columns","dataIndex","pagination"],"sources":["/Users/usuario/Documents/clasedepractica/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Row, Col, Button, Progress, Tabs, Table, Statistic, Alert, Divider, Tag } from 'antd';\nimport { CheckCircleOutlined, CloseCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, LineChart, Line, PieChart, Pie, Cell, ScatterChart, Scatter, AreaChart, Area } from 'recharts';\n\nconst { TabPane } = Tabs;\n\nfunction App() {\n  const [selectedMethods, setSelectedMethods] = useState([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n\n  // Datos organizados por categorías como solicitaste\n  const metodosML = [\n    // 🤖 ALGORITMOS DE CLASIFICACIÓN (7 métodos)\n    {\n      id: 1,\n      nombre: \"Regresión Logística\",\n      descripcion: \"Modelo base para comparación. Útil para problemas lineales.\",\n      tipo: \"classification\",\n      categoria: \"🤖 ALGORITMOS DE CLASIFICACIÓN\",\n      accuracy: 0.9778,\n      auc: 0.9787,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"texto_tfidf\"],\n      proceso: [\n        \"Normalización de características numéricas\",\n        \"Entrenamiento con gradiente descendente\", \n        \"Cálculo de probabilidades con función sigmoide\",\n        \"Evaluación con métricas de precisión\"\n      ],\n      explicacion: {\n        que_es: \"Algoritmo de clasificación que utiliza la función logística para modelar probabilidades.\",\n        como_funciona: \"Transforma una combinación lineal de características en probabilidades entre 0 y 1.\",\n        ventajas: [\"Interpretable\", \"Rápido\", \"Probabilidades\", \"No requiere normalización\"],\n        desventajas: [\"Asume relación lineal\", \"Sensible a outliers\", \"Puede sobreajustar\"]\n      },\n      grafico_especifico: \"curva_sigmoide\"\n    },\n    {\n      id: 2,\n      nombre: \"K-Vecinos Más Cercanos (KNN)\",\n      descripcion: \"Encuentra artículos similares basándose en características. Útil para casos donde artículos parecidos tienen la misma categoría.\",\n      tipo: \"classification\",\n      categoria: \"🤖 ALGORITMOS DE CLASIFICACIÓN\",\n      accuracy: 0.9810,\n      auc: 0.9886,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"texto_tfidf\"],\n      proceso: [\n        \"Cálculo de distancias euclidianas entre artículos\",\n        \"Selección de k vecinos más cercanos\",\n        \"Votación por mayoría de clases de vecinos\",\n        \"Optimización del parámetro k\"\n      ],\n      explicacion: {\n        que_es: \"Algoritmo basado en instancias que clasifica según los vecinos más cercanos.\",\n        como_funciona: \"Encuentra los k puntos más cercanos y asigna la clase más común entre ellos.\",\n        ventajas: [\"Simple\", \"No paramétrico\", \"Efectivo con datos no lineales\", \"Encuentra patrones locales\"],\n        desventajas: [\"Computacionalmente costoso\", \"Sensible a la escala\", \"Requiere mucha memoria\"]\n      },\n      grafico_especifico: \"distancia_vecinos\"\n    },\n    {\n      id: 3,\n      nombre: \"Naive Bayes\",\n      descripcion: \"Basado en probabilidad condicionada. Ideal para clasificación de texto y noticias.\",\n      tipo: \"classification\",\n      categoria: \"🤖 ALGORITMOS DE CLASIFICACIÓN\",\n      accuracy: 0.9524,\n      auc: 0.9696,\n      variables: [\"texto_tfidf\", \"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\"],\n      proceso: [\n        \"Cálculo de probabilidades P(característica|clase)\",\n        \"Aplicación del teorema de Bayes\",\n        \"Selección de clase con mayor probabilidad\",\n        \"Suavizado de Laplace para evitar ceros\"\n      ],\n      explicacion: {\n        que_es: \"Clasificador probabilístico basado en el teorema de Bayes.\",\n        como_funciona: \"Calcula probabilidades posteriores asumiendo independencia entre características.\",\n        ventajas: [\"Muy rápido\", \"Funciona bien con texto\", \"Robusto a ruido\", \"Ideal para noticias\"],\n        desventajas: [\"Asunción de independencia\", \"Puede ser ingenuo\", \"Sensible a características irrelevantes\"]\n      },\n      grafico_especifico: \"probabilidades_bayes\"\n    },\n    {\n      id: 4,\n      nombre: \"Árbol de Decisión\",\n      descripcion: \"Modelo interpretable que muestra reglas de decisión. Fácil de entender cómo clasifica.\",\n      tipo: \"classification\",\n      categoria: \"🤖 ALGORITMOS DE CLASIFICACIÓN\",\n      accuracy: 1.0000,\n      auc: 1.0000,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"categoria_encoded\"],\n      proceso: [\n        \"Cálculo de ganancia de información para cada característica\",\n        \"División recursiva de nodos basada en umbrales\",\n        \"Criterio de parada para evitar sobreajuste\",\n        \"Podado del árbol para generalización\"\n      ],\n      explicacion: {\n        que_es: \"Modelo que utiliza estructura de árbol para tomar decisiones basadas en reglas.\",\n        como_funciona: \"Divide recursivamente los datos en subconjuntos basándose en características.\",\n        ventajas: [\"Fácil de interpretar\", \"No requiere normalización\", \"Maneja datos faltantes\", \"Reglas claras\"],\n        desventajas: [\"Tendencia al sobreajuste\", \"Inestable\", \"Sesgo hacia características con muchos valores\"]\n      },\n      grafico_especifico: \"arbol_decision\"\n    },\n    {\n      id: 5,\n      nombre: \"Random Forest\",\n      descripcion: \"Evolución de árboles de decisión, más estable. Reduce overfitting usando múltiples árboles.\",\n      tipo: \"classification\",\n      categoria: \"🤖 ALGORITMOS DE CLASIFICACIÓN\",\n      accuracy: 0.9905,\n      auc: 0.9994,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"categoria_encoded\", \"texto_tfidf\"],\n      proceso: [\n        \"Bootstrap: Creación de muestras aleatorias con reemplazo\",\n        \"Entrenamiento paralelo de múltiples árboles\",\n        \"Votación por mayoría de predicciones\",\n        \"Cálculo de importancia de características\"\n      ],\n      explicacion: {\n        que_es: \"Ensemble que combina múltiples árboles de decisión para mayor robustez.\",\n        como_funciona: \"Entrena múltiples árboles en subconjuntos aleatorios y combina sus predicciones.\",\n        ventajas: [\"Muy preciso\", \"Robusto al sobreajuste\", \"Proporciona importancia de características\", \"Estable\"],\n        desventajas: [\"Menos interpretable\", \"Más lento\", \"Requiere más memoria\"]\n      },\n      grafico_especifico: \"bosque_arboles\"\n    },\n    {\n      id: 6,\n      nombre: \"XGBoost\",\n      descripcion: \"Algoritmo avanzado basado en boosting. Muy potente para datos tabulares.\",\n      tipo: \"classification\",\n      categoria: \"🤖 ALGORITMOS DE CLASIFICACIÓN\",\n      accuracy: 0.9950,\n      auc: 0.9995,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"categoria_encoded\", \"texto_tfidf\"],\n      proceso: [\n        \"Inicialización con predicción base\",\n        \"Cálculo de residuos del modelo actual\",\n        \"Entrenamiento secuencial de modelos correctores\",\n        \"Combinación ponderada de todas las predicciones\"\n      ],\n      explicacion: {\n        que_es: \"Implementación optimizada de gradient boosting para máxima precisión.\",\n        como_funciona: \"Entrena modelos secuencialmente, cada uno corrige errores del anterior.\",\n        ventajas: [\"Muy preciso\", \"Rápido\", \"Maneja datos faltantes\", \"Eficiente en memoria\"],\n        desventajas: [\"Complejo de interpretar\", \"Sensible a parámetros\", \"Puede sobreajustar\"]\n      },\n      grafico_especifico: \"gradient_boosting\"\n    },\n    {\n      id: 7,\n      nombre: \"LightGBM\",\n      descripcion: \"Más rápido que XGBoost. Ideal para proyectos empresariales.\",\n      tipo: \"classification\",\n      categoria: \"🤖 ALGORITMOS DE CLASIFICACIÓN\",\n      accuracy: 0.9968,\n      auc: 0.9999,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"categoria_encoded\", \"texto_tfidf\"],\n      proceso: [\n        \"Inicialización con predicción base\",\n        \"Cálculo de residuos del modelo actual\",\n        \"Entrenamiento secuencial de modelos correctores\",\n        \"Combinación ponderada de todas las predicciones\"\n      ],\n      explicacion: {\n        que_es: \"Implementación optimizada de gradient boosting para máxima precisión.\",\n        como_funciona: \"Entrena modelos secuencialmente, cada uno corrige errores del anterior.\",\n        ventajas: [\"Muy preciso\", \"Rápido\", \"Maneja datos faltantes\", \"Eficiente en memoria\"],\n        desventajas: [\"Complejo de interpretar\", \"Sensible a parámetros\", \"Puede sobreajustar\"]\n      },\n      grafico_especifico: \"lightgbm_optimization\"\n    },\n    // 🔍 ALGORITMO DE CLUSTERING (1 método)\n    {\n      id: 8,\n      nombre: \"K-Means\",\n      descripcion: \"Clustering no supervisado. Agrupa artículos similares sin etiquetas.\",\n      tipo: \"clustering\",\n      categoria: \"🔍 ALGORITMO DE CLUSTERING\",\n      accuracy: 0.3541,\n      auc: 0.3541,\n      variables: [\"longitud_titulo\", \"longitud_resumen\", \"cantidad_palabras\", \"periodico_encoded\", \"categoria_encoded\"],\n      proceso: [\n        \"Inicialización aleatoria de k centroides\",\n        \"Asignación de puntos al centroide más cercano\",\n        \"Recálculo de centroides basado en asignaciones\",\n        \"Repetición hasta convergencia\"\n      ],\n      explicacion: {\n        que_es: \"Algoritmo de clustering no supervisado que agrupa datos en k clusters.\",\n        como_funciona: \"Inicializa k centroides, asigna puntos al más cercano y recalcula centroides.\",\n        ventajas: [\"Simple y rápido\", \"Escalable\", \"Efectivo con clusters esféricos\", \"No requiere etiquetas\"],\n        desventajas: [\"Requiere especificar k\", \"Sensible a inicialización\", \"Asume clusters esféricos\"]\n      },\n      grafico_especifico: \"clustering_kmeans\"\n    },\n    // 📈 ALGORITMOS DE SERIES TEMPORALES (2 métodos)\n    {\n      id: 9,\n      nombre: \"ARIMA\",\n      descripcion: \"Modelo estadístico para pronósticos temporales. Analiza patrones en fechas de publicación.\",\n      tipo: \"temporal\",\n      categoria: \"📈 ALGORITMOS DE SERIES TEMPORALES\",\n      accuracy: 0.8200,\n      auc: 0.8200,\n      variables: [\"fecha_extraccion\", \"es_importante\", \"categoria_encoded\", \"periodico_encoded\"],\n      proceso: [\n        \"Análisis de estacionariedad de la serie temporal\",\n        \"Identificación de parámetros ARIMA (p,d,q)\",\n        \"Estimación de parámetros del modelo\",\n        \"Validación con residuos y predicciones\"\n      ],\n      explicacion: {\n        que_es: \"Análisis de series temporales para identificar patrones temporales.\",\n        como_funciona: \"ARIMA combina componentes autoregresivos, integración y media móvil.\",\n        ventajas: [\"Específico para tiempo\", \"Identifica tendencias\", \"Predicciones futuras\", \"Maneja estacionalidad\"],\n        desventajas: [\"Requiere datos temporales\", \"Complejo de configurar\", \"Sensible a outliers\"]\n      },\n      grafico_especifico: \"serie_temporal_arima\"\n    },\n    {\n      id: 10,\n      nombre: \"Suavizado Exponencial\",\n      descripcion: \"Utiliza medias móviles para predicciones. Útil para tendencias temporales de noticias.\",\n      tipo: \"temporal\",\n      categoria: \"📈 ALGORITMOS DE SERIES TEMPORALES\",\n      accuracy: 0.8500,\n      auc: 0.8500,\n      variables: [\"fecha_extraccion\", \"es_importante\", \"categoria_encoded\", \"periodico_encoded\"],\n      proceso: [\n        \"Cálculo de medias móviles exponenciales\",\n        \"Aplicación de factores de suavizado\",\n        \"Predicción basada en tendencias históricas\",\n        \"Ajuste de parámetros de suavizado\"\n      ],\n      explicacion: {\n        que_es: \"Método de suavizado para análisis de tendencias temporales.\",\n        como_funciona: \"Utiliza medias móviles exponenciales para predecir valores futuros.\",\n        ventajas: [\"Simple de implementar\", \"Efectivo para tendencias\", \"Rápido\", \"Fácil de interpretar\"],\n        desventajas: [\"Limitado a tendencias simples\", \"No maneja estacionalidad compleja\", \"Sensible a outliers\"]\n      },\n      grafico_especifico: \"suavizado_exponencial\"\n    }\n  ];\n\n  const chartData = [\n    { name: 'Regresión Logística', accuracy: 97.78, auc: 97.87 },\n    { name: 'K-Nearest Neighbors', accuracy: 98.10, auc: 98.86 },\n    { name: 'Naive Bayes', accuracy: 95.24, auc: 96.96 },\n    { name: 'Árbol de Decisión', accuracy: 100.00, auc: 100.00 },\n    { name: 'Random Forest', accuracy: 99.05, auc: 99.94 },\n    { name: 'XGBoost', accuracy: 99.50, auc: 99.95 },\n    { name: 'LightGBM', accuracy: 99.68, auc: 99.99 },\n    { name: 'K-Means', accuracy: 35.41, auc: 35.41 },\n    { name: 'ARIMA', accuracy: 82.00, auc: 82.00 },\n    { name: 'Suavizado Exponencial', accuracy: 85.00, auc: 85.00 }\n  ];\n\n  const processSteps = [\n    { title: \"Carga de Datos\", description: \"1,571 artículos periodísticos cargados\", progress: 20 },\n    { title: \"Limpieza de Texto\", description: \"Procesamiento de títulos, resúmenes y contenido\", progress: 40 },\n    { title: \"Vectorización TF-IDF\", description: \"1,000 características de texto generadas\", progress: 60 },\n    { title: \"Entrenamiento ML\", description: \"10 algoritmos entrenados\", progress: 80 },\n    { title: \"Evaluación\", description: \"Métricas calculadas y comparación\", progress: 100 }\n  ];\n\n  const toggleMethod = (methodId) => {\n    if (selectedMethods.includes(methodId)) {\n      setSelectedMethods(selectedMethods.filter(id => id !== methodId));\n    } else {\n      setSelectedMethods([...selectedMethods, methodId]);\n    }\n  };\n\n  const executeAnalysis = () => {\n    if (selectedMethods.length === 0) {\n      alert('Por favor selecciona al menos un método para analizar.');\n      return;\n    }\n\n    setIsAnalyzing(true);\n    setCurrentStep(0);\n\n    const interval = setInterval(() => {\n      setCurrentStep(prev => {\n        if (prev >= processSteps.length - 1) {\n          clearInterval(interval);\n          setIsAnalyzing(false);\n          setAnalysisResults({\n            selectedMethods: selectedMethods,\n            results: metodosML.filter(m => selectedMethods.includes(m.id)),\n            bestMethod: metodosML.find(m => m.id === selectedMethods[0])\n          });\n          return prev;\n        }\n        return prev + 1;\n      });\n    }, 1000);\n  };\n\n  const getMethodTypeColor = (tipo) => {\n    const colors = {\n      classification: '#1890ff',\n      clustering: '#722ed1',\n      temporal: '#52c41a',\n      ensemble: '#fa8c16'\n    };\n    return colors[tipo] || '#666';\n  };\n\n  const getStatusColor = (accuracy) => {\n    if (accuracy >= 0.95) return '#52c41a';\n    if (accuracy >= 0.90) return '#1890ff';\n    if (accuracy >= 0.80) return '#faad14';\n    return '#ff4d4f';\n  };\n\n  // Función para generar gráficos específicos por algoritmo\n  const renderSpecificChart = (metodo) => {\n    switch(metodo.grafico_especifico) {\n      case 'curva_sigmoide':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <LineChart data={Array.from({length: 20}, (_, i) => ({\n              x: i - 10,\n              y: 1 / (1 + Math.exp(-(i - 10)))\n            }))}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"x\" />\n              <YAxis />\n              <Tooltip />\n              <Line type=\"monotone\" dataKey=\"y\" stroke=\"#1890ff\" strokeWidth={3} />\n            </LineChart>\n          </ResponsiveContainer>\n        );\n      \n      case 'distancia_vecinos':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <ScatterChart data={Array.from({length: 50}, (_, i) => ({\n              x: Math.random() * 100,\n              y: Math.random() * 100,\n              cluster: Math.floor(Math.random() * 3)\n            }))}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"x\" />\n              <YAxis dataKey=\"y\" />\n              <Tooltip />\n              <Scatter dataKey=\"cluster\" fill=\"#52c41a\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        );\n      \n      case 'probabilidades_bayes':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <BarChart data={[\n              { name: 'P(Importante|Texto)', value: 0.75 },\n              { name: 'P(No Importante|Texto)', value: 0.25 },\n              { name: 'P(Importante|Longitud)', value: 0.60 },\n              { name: 'P(No Importante|Longitud)', value: 0.40 }\n            ]}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={100} />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"value\" fill=\"#722ed1\" />\n            </BarChart>\n          </ResponsiveContainer>\n        );\n      \n      case 'arbol_decision':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <BarChart data={[\n              { name: 'Longitud > 50', value: 85 },\n              { name: 'Periódico = La Vanguardia', value: 70 },\n              { name: 'Categoría = Internacional', value: 60 },\n              { name: 'Palabras > 100', value: 45 }\n            ]}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={100} />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"value\" fill=\"#52c41a\" />\n            </BarChart>\n          </ResponsiveContainer>\n        );\n      \n      case 'bosque_arboles':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <BarChart data={[\n              { name: 'Árbol 1', value: 95 },\n              { name: 'Árbol 2', value: 92 },\n              { name: 'Árbol 3', value: 98 },\n              { name: 'Árbol 4', value: 94 },\n              { name: 'Árbol 5', value: 96 }\n            ]}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"value\" fill=\"#fa8c16\" />\n            </BarChart>\n          </ResponsiveContainer>\n        );\n      \n      case 'gradient_boosting':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <LineChart data={Array.from({length: 10}, (_, i) => ({\n              iteracion: i + 1,\n              error: 100 - (i * 8 + Math.random() * 5)\n            }))}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"iteracion\" />\n              <YAxis />\n              <Tooltip />\n              <Line type=\"monotone\" dataKey=\"error\" stroke=\"#ff4d4f\" strokeWidth={3} />\n            </LineChart>\n          </ResponsiveContainer>\n        );\n      \n      case 'lightgbm_optimization':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <AreaChart data={Array.from({length: 15}, (_, i) => ({\n              iteracion: i + 1,\n              accuracy: 70 + (i * 2) + Math.random() * 3\n            }))}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"iteracion\" />\n              <YAxis />\n              <Tooltip />\n              <Area type=\"monotone\" dataKey=\"accuracy\" stroke=\"#52c41a\" fill=\"#52c41a\" fillOpacity={0.3} />\n            </AreaChart>\n          </ResponsiveContainer>\n        );\n      \n      case 'clustering_kmeans':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <ScatterChart data={Array.from({length: 100}, (_, i) => ({\n              x: Math.random() * 100,\n              y: Math.random() * 100,\n              cluster: Math.floor(Math.random() * 5)\n            }))}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"x\" />\n              <YAxis dataKey=\"y\" />\n              <Tooltip />\n              <Scatter dataKey=\"cluster\" fill=\"#722ed1\" />\n            </ScatterChart>\n          </ResponsiveContainer>\n        );\n      \n      case 'serie_temporal_arima':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <LineChart data={Array.from({length: 30}, (_, i) => ({\n              fecha: `Día ${i + 1}`,\n              valor: 50 + Math.sin(i * 0.5) * 20 + Math.random() * 10,\n              prediccion: 50 + Math.sin(i * 0.5) * 20\n            }))}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"fecha\" />\n              <YAxis />\n              <Tooltip />\n              <Line type=\"monotone\" dataKey=\"valor\" stroke=\"#1890ff\" strokeWidth={2} />\n              <Line type=\"monotone\" dataKey=\"prediccion\" stroke=\"#ff4d4f\" strokeWidth={2} strokeDasharray=\"5 5\" />\n            </LineChart>\n          </ResponsiveContainer>\n        );\n      \n      case 'suavizado_exponencial':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <LineChart data={Array.from({length: 20}, (_, i) => ({\n              tiempo: i + 1,\n              original: 50 + Math.random() * 20,\n              suavizado: 50 + Math.sin(i * 0.3) * 10\n            }))}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"tiempo\" />\n              <YAxis />\n              <Tooltip />\n              <Line type=\"monotone\" dataKey=\"original\" stroke=\"#faad14\" strokeWidth={2} />\n              <Line type=\"monotone\" dataKey=\"suavizado\" stroke=\"#52c41a\" strokeWidth={3} />\n            </LineChart>\n          </ResponsiveContainer>\n        );\n      \n      default:\n        return <div>Gráfico no disponible</div>;\n    }\n  };\n\n  // Agrupar métodos por categoría\n  const metodosPorCategoria = metodosML.reduce((acc, metodo) => {\n    if (!acc[metodo.categoria]) {\n      acc[metodo.categoria] = [];\n    }\n    acc[metodo.categoria].push(metodo);\n    return acc;\n  }, {});\n\n  return (\n    <div style={{ padding: '20px', background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)', minHeight: '100vh' }}>\n      <div style={{ maxWidth: '1400px', margin: '0 auto' }}>\n        {/* Header */}\n        <div style={{ textAlign: 'center', color: 'white', marginBottom: '30px' }}>\n          <h1 style={{ fontSize: '2.5em', marginBottom: '10px', textShadow: '2px 2px 4px rgba(0,0,0,0.3)' }}>\n            🤖 Dashboard ML Completo\n          </h1>\n          <p style={{ fontSize: '1.2em', opacity: 0.9 }}>\n            Análisis de Artículos Periodísticos con 10 Métodos de Machine Learning\n          </p>\n        </div>\n\n        {/* Proceso de Análisis */}\n        <Card style={{ marginBottom: '30px', borderRadius: '15px' }}>\n          <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>📊 Proceso de Análisis de Datos</h2>\n          \n          <Row gutter={[16, 16]}>\n            {processSteps.map((step, index) => (\n              <Col xs={24} sm={12} md={8} lg={4} key={index}>\n                <Card \n                  size=\"small\" \n                  style={{ \n                    textAlign: 'center',\n                    background: index <= currentStep ? '#f6ffed' : '#f5f5f5',\n                    border: index <= currentStep ? '2px solid #52c41a' : '1px solid #d9d9d9'\n                  }}\n                >\n                  <div style={{ \n                    width: '30px', \n                    height: '30px', \n                    borderRadius: '50%', \n                    background: index <= currentStep ? '#52c41a' : '#d9d9d9',\n                    color: 'white',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    margin: '0 auto 10px',\n                    fontWeight: 'bold'\n                  }}>\n                    {index + 1}\n                  </div>\n                  <h4 style={{ margin: '0 0 5px', fontSize: '14px' }}>{step.title}</h4>\n                  <p style={{ margin: 0, fontSize: '12px', color: '#666' }}>{step.description}</p>\n                  <Progress percent={step.progress} size=\"small\" />\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Card>\n\n        {/* Métodos de ML organizados por categorías */}\n        <Card style={{ marginBottom: '30px', borderRadius: '15px' }}>\n          <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>🎯 Selecciona los Métodos de ML</h2>\n          \n          <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n            <Button \n              type=\"primary\" \n              size=\"large\" \n              onClick={executeAnalysis}\n              loading={isAnalyzing}\n              style={{ marginRight: '10px' }}\n            >\n              🚀 Ejecutar Análisis\n            </Button>\n            <Button \n              onClick={() => setSelectedMethods([])}\n              style={{ marginRight: '10px' }}\n            >\n              🔄 Limpiar Selección\n            </Button>\n            <Button type=\"default\">\n              📈 Ver Proceso Completo\n            </Button>\n          </div>\n\n          {Object.entries(metodosPorCategoria).map(([categoria, metodos]) => (\n            <div key={categoria} style={{ marginBottom: '30px' }}>\n              <Divider orientation=\"left\">\n                <Tag color=\"blue\" style={{ fontSize: '16px', padding: '5px 10px' }}>\n                  {categoria}\n                </Tag>\n              </Divider>\n              \n              <Row gutter={[16, 16]}>\n                {metodos.map((metodo) => (\n                  <Col xs={24} sm={12} lg={8} xl={6} key={metodo.id}>\n                    <Card\n                      hoverable\n                      style={{\n                        cursor: 'pointer',\n                        border: selectedMethods.includes(metodo.id) ? '3px solid #52c41a' : '1px solid #d9d9d9',\n                        background: selectedMethods.includes(metodo.id) ? '#f6ffed' : 'white'\n                      }}\n                      onClick={() => toggleMethod(metodo.id)}\n                    >\n                      <div style={{ position: 'relative' }}>\n                        <div style={{\n                          position: 'absolute',\n                          top: '10px',\n                          right: '10px',\n                          width: '30px',\n                          height: '30px',\n                          borderRadius: '50%',\n                          background: '#1890ff',\n                          color: 'white',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          fontWeight: 'bold',\n                          fontSize: '14px'\n                        }}>\n                          {metodo.id}\n                        </div>\n                        \n                        <h3 style={{ marginBottom: '10px', paddingRight: '40px' }}>{metodo.nombre}</h3>\n                        <p style={{ color: '#666', marginBottom: '15px', fontSize: '14px' }}>\n                          {metodo.descripcion}\n                        </p>\n                        \n                        <Row gutter={8} style={{ marginBottom: '15px' }}>\n                          <Col span={12}>\n                            <Statistic \n                              title=\"Accuracy\" \n                              value={metodo.accuracy * 100} \n                              precision={1} \n                              suffix=\"%\" \n                              valueStyle={{ color: getStatusColor(metodo.accuracy), fontSize: '16px' }}\n                            />\n                          </Col>\n                          <Col span={12}>\n                            <Statistic \n                              title=\"AUC\" \n                              value={metodo.auc} \n                              precision={3}\n                              valueStyle={{ color: getStatusColor(metodo.auc), fontSize: '16px' }}\n                            />\n                          </Col>\n                        </Row>\n                        \n                        <div style={{\n                          display: 'inline-block',\n                          padding: '4px 8px',\n                          borderRadius: '12px',\n                          fontSize: '12px',\n                          fontWeight: 'bold',\n                          textTransform: 'uppercase',\n                          background: getMethodTypeColor(metodo.tipo) + '20',\n                          color: getMethodTypeColor(metodo.tipo)\n                        }}>\n                          {metodo.tipo}\n                        </div>\n                      </div>\n                    </Card>\n                  </Col>\n                ))}\n              </Row>\n            </div>\n          ))}\n        </Card>\n\n        {/* Resultados del Análisis */}\n        {analysisResults && (\n          <Card style={{ borderRadius: '15px' }}>\n            <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>📊 Resultados del Análisis</h2>\n            \n            <Tabs defaultActiveKey=\"1\">\n              <TabPane tab=\"📈 Gráficos de Comparación\" key=\"1\">\n                <Row gutter={[16, 16]}>\n                  <Col xs={24} lg={12}>\n                    <Card title=\"Comparación de Accuracy\" size=\"small\">\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <BarChart data={chartData.filter(d => analysisResults.selectedMethods.includes(metodosML.find(m => m.nombre === d.name)?.id))}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={100} />\n                          <YAxis />\n                          <Tooltip />\n                          <Bar dataKey=\"accuracy\" fill=\"#1890ff\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </Card>\n                  </Col>\n                  \n                  <Col xs={24} lg={12}>\n                    <Card title=\"Comparación de AUC\" size=\"small\">\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <BarChart data={chartData.filter(d => analysisResults.selectedMethods.includes(metodosML.find(m => m.nombre === d.name)?.id))}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={100} />\n                          <YAxis />\n                          <Tooltip />\n                          <Bar dataKey=\"auc\" fill=\"#52c41a\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </Card>\n                  </Col>\n                </Row>\n              </TabPane>\n\n              <TabPane tab=\"🔍 Detalles por Método\" key=\"2\">\n                {analysisResults.results.map((metodo, index) => (\n                  <Card key={metodo.id} style={{ marginBottom: '20px' }}>\n                    <h3>{index + 1}. {metodo.nombre}</h3>\n                    \n                    <Row gutter={[16, 16]}>\n                      <Col xs={24} md={12}>\n                        <Alert\n                          message=\"¿Qué es?\"\n                          description={metodo.explicacion.que_es}\n                          type=\"info\"\n                          showIcon\n                          style={{ marginBottom: '10px' }}\n                        />\n                        <Alert\n                          message=\"¿Cómo funciona?\"\n                          description={metodo.explicacion.como_funciona}\n                          type=\"info\"\n                          showIcon\n                        />\n                      </Col>\n                      \n                      <Col xs={24} md={12}>\n                        <h4>Variables Utilizadas:</h4>\n                        <div style={{ marginBottom: '15px' }}>\n                          {metodo.variables.map((variable, i) => (\n                            <span key={i} style={{\n                              display: 'inline-block',\n                              background: '#f0f0f0',\n                              padding: '4px 8px',\n                              margin: '2px',\n                              borderRadius: '4px',\n                              fontSize: '12px'\n                            }}>\n                              {variable}\n                            </span>\n                          ))}\n                        </div>\n                        \n                        <h4>Proceso Paso a Paso:</h4>\n                        <ol style={{ paddingLeft: '20px' }}>\n                          {metodo.proceso.map((paso, i) => (\n                            <li key={i} style={{ marginBottom: '5px', fontSize: '14px' }}>{paso}</li>\n                          ))}\n                        </ol>\n                      </Col>\n                    </Row>\n                    \n                    {/* Gráfico específico del algoritmo */}\n                    <Row gutter={[16, 16]} style={{ marginTop: '20px' }}>\n                      <Col span={24}>\n                        <Card title={`Gráfico Específico: ${metodo.nombre}`} size=\"small\">\n                          {renderSpecificChart(metodo)}\n                        </Card>\n                      </Col>\n                    </Row>\n                    \n                    <Row gutter={16}>\n                      <Col span={12}>\n                        <h4>Ventajas:</h4>\n                        <ul>\n                          {metodo.explicacion.ventajas.map((ventaja, i) => (\n                            <li key={i} style={{ color: '#52c41a' }}>\n                              <CheckCircleOutlined style={{ marginRight: '5px' }} />\n                              {ventaja}\n                            </li>\n                          ))}\n                        </ul>\n                      </Col>\n                      <Col span={12}>\n                        <h4>Desventajas:</h4>\n                        <ul>\n                          {metodo.explicacion.desventajas.map((desventaja, i) => (\n                            <li key={i} style={{ color: '#ff4d4f' }}>\n                              <CloseCircleOutlined style={{ marginRight: '5px' }} />\n                              {desventaja}\n                            </li>\n                          ))}\n                        </ul>\n                      </Col>\n                    </Row>\n                  </Card>\n                ))}\n              </TabPane>\n\n              <TabPane tab=\"📊 Gráficos Detallados\" key=\"3\">\n                <Row gutter={[16, 16]}>\n                  {analysisResults.results.map((metodo, index) => (\n                    <Col xs={24} lg={12} key={metodo.id}>\n                      <Card title={`Gráficos de ${metodo.nombre}`} style={{ marginBottom: '20px' }}>\n                        <Row gutter={[16, 16]}>\n                          <Col span={24}>\n                            <h4>Rendimiento del Método</h4>\n                            <ResponsiveContainer width=\"100%\" height={200}>\n                              <BarChart data={[\n                                { name: 'Accuracy', value: metodo.accuracy * 100 },\n                                { name: 'AUC', value: metodo.auc * 100 }\n                              ]}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"name\" />\n                                <YAxis />\n                                <Tooltip formatter={(value) => `${value.toFixed(1)}%`} />\n                                <Bar dataKey=\"value\" fill=\"#1890ff\" />\n                              </BarChart>\n                            </ResponsiveContainer>\n                          </Col>\n                          \n                          <Col span={24}>\n                            <h4>Gráfico Específico del Algoritmo</h4>\n                            {renderSpecificChart(metodo)}\n                          </Col>\n                        </Row>\n                        \n                        <div style={{ marginTop: '15px', padding: '10px', background: '#f5f5f5', borderRadius: '5px' }}>\n                          <h5>Variables Utilizadas:</h5>\n                          <div>\n                            {metodo.variables.map((variable, i) => (\n                              <span key={i} style={{\n                                display: 'inline-block',\n                                background: '#1890ff',\n                                color: 'white',\n                                padding: '2px 6px',\n                                margin: '2px',\n                                borderRadius: '3px',\n                                fontSize: '11px'\n                              }}>\n                                {variable}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                      </Card>\n                    </Col>\n                  ))}\n                </Row>\n              </TabPane>\n\n              <TabPane tab=\"🏆 Comparación Final\" key=\"4\">\n                <Alert\n                  message=\"Mejor Método Identificado\"\n                  description={`${analysisResults.bestMethod.nombre} con Accuracy: ${(analysisResults.bestMethod.accuracy * 100).toFixed(1)}% y AUC: ${analysisResults.bestMethod.auc.toFixed(3)}`}\n                  type=\"success\"\n                  showIcon\n                  style={{ marginBottom: '20px' }}\n                />\n                \n                <Table\n                  dataSource={analysisResults.results.map((metodo, index) => ({\n                    key: metodo.id,\n                    ranking: index + 1,\n                    metodo: metodo.nombre,\n                    accuracy: `${(metodo.accuracy * 100).toFixed(1)}%`,\n                    auc: metodo.auc.toFixed(3),\n                    tipo: metodo.tipo,\n                    categoria: metodo.categoria,\n                    estado: metodo.accuracy >= 0.95 ? 'Excelente' : \n                           metodo.accuracy >= 0.90 ? 'Bueno' : \n                           metodo.accuracy >= 0.80 ? 'Regular' : 'Pobre'\n                  }))}\n                  columns={[\n                    { title: 'Ranking', dataIndex: 'ranking', key: 'ranking' },\n                    { title: 'Método', dataIndex: 'metodo', key: 'metodo' },\n                    { title: 'Accuracy', dataIndex: 'accuracy', key: 'accuracy' },\n                    { title: 'AUC', dataIndex: 'auc', key: 'auc' },\n                    { title: 'Categoría', dataIndex: 'categoria', key: 'categoria' },\n                    { title: 'Estado', dataIndex: 'estado', key: 'estado' }\n                  ]}\n                  pagination={false}\n                />\n              </TabPane>\n            </Tabs>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}