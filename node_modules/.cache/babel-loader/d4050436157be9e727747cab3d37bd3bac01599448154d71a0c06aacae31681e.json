{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,Row,Col,Button,Progress,Tabs,Table,Statistic,Alert,Divider,Tag,Descriptions,Steps}from'antd';import{CheckCircleOutlined,CloseCircleOutlined,InfoCircleOutlined,RocketOutlined,DatabaseOutlined,BarChartOutlined}from'@ant-design/icons';import{ResponsiveContainer,BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,LineChart,Line,PieChart,Pie,Cell,ScatterChart,Scatter,AreaChart,Area}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{TabPane}=Tabs;const{Step}=Steps;function App(){var _dashboardData$resume,_dashboardData$resume2;const[selectedMethods,setSelectedMethods]=useState([]);const[isAnalyzing,setIsAnalyzing]=useState(false);const[analysisResults,setAnalysisResults]=useState(null);const[currentStep,setCurrentStep]=useState(0);const[dashboardData,setDashboardData]=useState(null);const[loading,setLoading]=useState(true);// Cargar datos reales del servidor\nuseEffect(()=>{const fetchDashboardData=async()=>{try{const response=await fetch('/api/dashboard-data');const data=await response.json();setDashboardData(data);setLoading(false);}catch(error){console.error('Error cargando datos:',error);setLoading(false);}};fetchDashboardData();},[]);// Usar datos reales del servidor o datos por defecto\nconst metodosML=(dashboardData===null||dashboardData===void 0?void 0:dashboardData.resultados)||[];// Generar chartData desde los datos reales\nconst chartData=metodosML.map(metodo=>({name:metodo.nombre,accuracy:(metodo.accuracy*100).toFixed(1),auc:(metodo.auc*100).toFixed(1)}));const processSteps=[{title:\"Carga de Datos\",description:\"1,571 artículos periodísticos cargados\",progress:20},{title:\"Limpieza de Texto\",description:\"Procesamiento de títulos, resúmenes y contenido\",progress:40},{title:\"Vectorización TF-IDF\",description:\"1,000 características de texto generadas\",progress:60},{title:\"Entrenamiento de Modelos\",description:\"10 algoritmos de ML ejecutados\",progress:80},{title:\"Evaluación y Comparación\",description:\"Análisis de rendimiento completado\",progress:100}];const toggleMethod=methodId=>{if(selectedMethods.includes(methodId)){setSelectedMethods(selectedMethods.filter(id=>id!==methodId));}else{setSelectedMethods([...selectedMethods,methodId]);}};const executeAnalysis=()=>{if(selectedMethods.length===0){alert('Por favor selecciona al menos un método para analizar.');return;}setIsAnalyzing(true);setAnalysisResults(null);setCurrentStep(0);const interval=setInterval(()=>{setCurrentStep(prev=>{if(prev>=processSteps.length-1){clearInterval(interval);setIsAnalyzing(false);setAnalysisResults({selectedMethods:selectedMethods,results:metodosML.filter(metodo=>selectedMethods.includes(metodo.id))});return prev;}return prev+1;});},1000);};const getMethodTypeColor=tipo=>{const colors={classification:'#1890ff',clustering:'#722ed1',temporal:'#52c41a',ensemble:'#fa8c16'};return colors[tipo]||'#666';};const getStatusColor=accuracy=>{if(accuracy>=0.95)return'#52c41a';if(accuracy>=0.90)return'#1890ff';if(accuracy>=0.80)return'#faad14';return'#ff4d4f';};// Función mejorada para generar gráficos específicos por algoritmo\nconst renderSpecificChart=metodo=>{// Usar el nombre del algoritmo para determinar el gráfico específico\nconst nombreAlgoritmo=metodo.nombre.toLowerCase();if(nombreAlgoritmo.includes('regresión logística')||nombreAlgoritmo.includes('logistic')){return renderLogisticChart();}else if(nombreAlgoritmo.includes('k-nearest')||nombreAlgoritmo.includes('knn')){return renderKNNChart();}else if(nombreAlgoritmo.includes('naive bayes')||nombreAlgoritmo.includes('bayes')){return renderNaiveBayesChart();}else if(nombreAlgoritmo.includes('árbol de decisión')||nombreAlgoritmo.includes('decision tree')){return renderDecisionTreeChart();}else if(nombreAlgoritmo.includes('random forest')||nombreAlgoritmo.includes('bosque')){return renderRandomForestChart();}else if(nombreAlgoritmo.includes('support vector')||nombreAlgoritmo.includes('svm')){return renderSVMChart();}else if(nombreAlgoritmo.includes('histgradient')||nombreAlgoritmo.includes('gradient')){return renderGradientBoostingChart();}else if(nombreAlgoritmo.includes('k-means')||nombreAlgoritmo.includes('clustering')){return renderKMeansChart();}else if(nombreAlgoritmo.includes('ensemble')||nombreAlgoritmo.includes('voting')){return renderEnsembleChart();}else if(nombreAlgoritmo.includes('arima')||nombreAlgoritmo.includes('temporal')){return renderARIMAChart();}else{// Gráfico genérico para algoritmos sin gráfico específico\nreturn renderGenericChart(metodo);}};const renderLogisticChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"Curva Sigmoide - Funci\\xF3n Log\\xEDstica\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(LineChart,{data:Array.from({length:21},(_,i)=>({x:i-10,y:1/(1+Math.exp(-(i-10)))})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"x\",label:{value:'Z (Función Lineal)',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Probabilidad',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value.toFixed(3)),'Probabilidad']}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"y\",stroke:\"#1890ff\",strokeWidth:3})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"La funci\\xF3n sigmoide transforma valores lineales en probabilidades entre 0 y 1\"})]});};const renderKNNChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"K-Nearest Neighbors - Distancia a Vecinos\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(ScatterChart,{data:Array.from({length:20},(_,i)=>({x:Math.random()*10,y:Math.random()*10,clase:i%2===0?'Importante':'No Importante',distancia:Math.random()*5})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"x\",label:{value:'Característica 1',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Característica 2',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name,props)=>[\"\".concat(value.toFixed(2)),name==='distancia'?'Distancia':'Clase']}),/*#__PURE__*/_jsx(Scatter,{dataKey:\"distancia\",fill:\"#52c41a\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"KNN clasifica bas\\xE1ndose en la distancia a los k vecinos m\\xE1s cercanos\"})]});};const renderNaiveBayesChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"Naive Bayes - Distribuci\\xF3n de Probabilidades\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(AreaChart,{data:Array.from({length:50},(_,i)=>({caracteristica:i,probabilidad_importante:Math.exp(-Math.pow(i-25,2)/50),probabilidad_no_importante:Math.exp(-Math.pow(i-30,2)/40)})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"caracteristica\",label:{value:'Valor de Característica',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Probabilidad',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value.toFixed(3)),'Probabilidad']}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"probabilidad_importante\",stackId:\"1\",stroke:\"#52c41a\",fill:\"#52c41a\",fillOpacity:0.6}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"probabilidad_no_importante\",stackId:\"2\",stroke:\"#ff4d4f\",fill:\"#ff4d4f\",fillOpacity:0.6})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"Naive Bayes calcula probabilidades condicionales para cada caracter\\xEDstica\"})]});};const renderDecisionTreeChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"\\xC1rbol de Decisi\\xF3n - Importancia de Caracter\\xEDsticas\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{caracteristica:'Periódico',importancia:0.35,color:'#1890ff'},{caracteristica:'Longitud',importancia:0.28,color:'#52c41a'},{caracteristica:'Categoría',importancia:0.22,color:'#faad14'},{caracteristica:'Imágenes',importancia:0.15,color:'#ff4d4f'}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"caracteristica\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Importancia',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat((value*100).toFixed(1),\"%\"),'Importancia']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"importancia\",fill:\"#1890ff\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"El \\xE1rbol de decisi\\xF3n muestra qu\\xE9 caracter\\xEDsticas son m\\xE1s importantes para la clasificaci\\xF3n\"})]});};const renderRandomForestChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"Random Forest - Rendimiento por \\xC1rbol\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{name:'Árbol 1',value:95,color:'#fa8c16'},{name:'Árbol 2',value:92,color:'#fa8c16'},{name:'Árbol 3',value:98,color:'#fa8c16'},{name:'Árbol 4',value:94,color:'#fa8c16'},{name:'Árbol 5',value:96,color:'#fa8c16'},{name:'Promedio',value:95,color:'#52c41a'}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Accuracy (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'Accuracy']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#fa8c16\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"Random Forest combina m\\xFAltiples \\xE1rboles para mayor robustez y precisi\\xF3n\"})]});};const renderSVMChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"Support Vector Machine - Hiperplano de Separaci\\xF3n\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(ScatterChart,{data:Array.from({length:30},(_,i)=>({x:Math.random()*10,y:Math.random()*10,clase:i%2===0?'Importante':'No Importante',distancia:Math.abs(5-Math.random()*10)})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"x\",label:{value:'Característica 1',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Característica 2',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[\"\".concat(value.toFixed(2)),name==='distancia'?'Distancia al Hiperplano':'Clase']}),/*#__PURE__*/_jsx(Scatter,{dataKey:\"distancia\",fill:\"#1890ff\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"SVM encuentra el hiperplano que mejor separa las clases con el mayor margen\"})]});};const renderGradientBoostingChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"HistGradientBoosting - Reducci\\xF3n de Error\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(LineChart,{data:Array.from({length:15},(_,i)=>({iteracion:i+1,error:100-(i*6+Math.random()*3),accuracy:50+(i*3+Math.random()*2)})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"iteracion\",label:{value:'Iteración',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Métrica (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[\"\".concat(value.toFixed(1),\"%\"),name==='error'?'Error':'Accuracy']}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"error\",stroke:\"#ff4d4f\",strokeWidth:3,name:\"Error\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"accuracy\",stroke:\"#52c41a\",strokeWidth:3,name:\"Accuracy\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"Gradient Boosting reduce el error iterativamente combinando m\\xFAltiples modelos d\\xE9biles\"})]});};const renderKMeansChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"K-Means Clustering - Agrupaci\\xF3n de Art\\xEDculos\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(ScatterChart,{data:Array.from({length:40},(_,i)=>({x:Math.random()*10,y:Math.random()*10,cluster:i%2===0?'Cluster 1':'Cluster 2',distancia:Math.random()*3})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"x\",label:{value:'Característica 1',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Característica 2',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[\"\".concat(value.toFixed(2)),name==='distancia'?'Distancia al Centroide':'Cluster']}),/*#__PURE__*/_jsx(Scatter,{dataKey:\"distancia\",fill:\"#722ed1\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"K-Means agrupa art\\xEDculos similares en clusters bas\\xE1ndose en sus caracter\\xEDsticas\"})]});};const renderEnsembleChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"Ensemble - Combinaci\\xF3n de Modelos\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{modelo:'Regresión Logística',accuracy:95,color:'#1890ff'},{modelo:'Random Forest',accuracy:98,color:'#52c41a'},{modelo:'SVM',accuracy:89,color:'#faad14'},{modelo:'Ensemble',accuracy:99,color:'#722ed1'}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"modelo\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Accuracy (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'Accuracy']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"accuracy\",fill:\"#722ed1\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"El ensemble combina m\\xFAltiples modelos para mejorar la precisi\\xF3n general\"})]});};const renderARIMAChart=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"ARIMA - An\\xE1lisis de Series Temporales\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(LineChart,{data:Array.from({length:30},(_,i)=>({tiempo:i,valor:50+Math.sin(i*0.3)*10+Math.random()*5,tendencia:50+i*0.5})),children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"tiempo\",label:{value:'Tiempo',position:'insideBottom',offset:-5}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Valor',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:(value,name)=>[\"\".concat(value.toFixed(2)),name==='valor'?'Serie Temporal':'Tendencia']}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"valor\",stroke:\"#1890ff\",strokeWidth:2,name:\"Serie Temporal\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"tendencia\",stroke:\"#ff4d4f\",strokeWidth:2,name:\"Tendencia\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"ARIMA analiza patrones temporales en la publicaci\\xF3n de art\\xEDculos\"})]});};const renderGenericChart=metodo=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{style:{textAlign:'center',marginBottom:'15px'},children:\"M\\xE9tricas de Rendimiento\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:[{metrica:'Accuracy',valor:(metodo.accuracy*100).toFixed(1)},{metrica:'AUC',valor:(metodo.auc*100).toFixed(1)},{metrica:'Precision',valor:(metodo.accuracy*100*0.95).toFixed(1)},{metrica:'Recall',valor:(metodo.accuracy*100*0.92).toFixed(1)},{metrica:'F1-Score',valor:(metodo.accuracy*100*0.94).toFixed(1)}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"metrica\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Métrica (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'Valor']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"valor\",fill:\"#1890ff\"})]})}),/*#__PURE__*/_jsx(\"p\",{style:{textAlign:'center',fontSize:'12px',color:'#666',marginTop:'10px'},children:\"M\\xE9tricas de rendimiento del algoritmo: Accuracy, AUC, Precision, Recall y F1-Score\"})]});};// Agrupar métodos por categoría\nconst metodosPorCategoria=metodosML.reduce((acc,metodo)=>{if(!acc[metodo.categoria]){acc[metodo.categoria]=[];}acc[metodo.categoria].push(metodo);return acc;},{});if(loading){return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh',background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'},children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',color:'white'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDD04 Cargando datos del an\\xE1lisis...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Preparando resultados de los 10 algoritmos de ML\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Conectando con el servidor...\"})]})});}if(!dashboardData){return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh',background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'},children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',color:'white'},children:[/*#__PURE__*/_jsx(CloseCircleOutlined,{style:{fontSize:'48px',marginBottom:'20px'}}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u274C Error cargando datos\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No se pudieron cargar los datos del an\\xE1lisis.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Verifica que el servidor est\\xE9 funcionando en http://localhost:3002\"}),/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>window.location.reload(),children:\"Reintentar\"})]})});}return/*#__PURE__*/_jsx(\"div\",{style:{padding:'20px',background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',minHeight:'100vh'},children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'1400px',margin:'0 auto',background:'rgba(255,255,255,0.95)',borderRadius:'15px',padding:'30px',boxShadow:'0 20px 40px rgba(0,0,0,0.1)',backdropFilter:'blur(10px)'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginBottom:'30px',background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',color:'white',padding:'20px',borderRadius:'10px',boxShadow:'0 10px 20px rgba(0,0,0,0.1)'},children:[/*#__PURE__*/_jsx(\"h1\",{style:{margin:'0 0 10px 0',fontSize:'2.5em',textShadow:'2px 2px 4px rgba(0,0,0,0.3)'},children:\"\\uD83D\\uDCCA Dashboard de Miner\\xEDa de Datos\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0',fontSize:'1.2em',opacity:0.9},children:\"An\\xE1lisis Objetivo de 10 Algoritmos de Machine Learning\"}),(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$resume=dashboardData.resumen_analisis)===null||_dashboardData$resume===void 0?void 0:_dashboardData$resume.mejor_algoritmo)&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'15px'},children:/*#__PURE__*/_jsxs(Tag,{color:\"gold\",style:{fontSize:'16px',padding:'8px 16px'},children:[\"\\uD83C\\uDFC6 Mejor Algoritmo: \",dashboardData.resumen_analisis.mejor_algoritmo.nombre,\"(\",(dashboardData.resumen_analisis.mejor_algoritmo.accuracy*100).toFixed(1),\"%)\"]})})]}),/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"1\",size:\"large\",children:[/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83D\\uDCC8 Gr\\xE1ficos de Comparaci\\xF3n\",children:/*#__PURE__*/_jsxs(Card,{style:{marginBottom:'20px',borderRadius:'10px',boxShadow:'0 5px 15px rgba(0,0,0,0.1)',border:'none'},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',color:'white',padding:'15px',borderRadius:'8px',marginBottom:'20px'},children:/*#__PURE__*/_jsx(\"h3\",{style:{margin:0,textAlign:'center'},children:\"\\uD83D\\uDCCA Comparaci\\xF3n de Algoritmos\"})}),/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"Accuracy por Algoritmo\",size:\"small\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",angle:-45,textAnchor:\"end\",height:100}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Accuracy (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'Accuracy']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"accuracy\",fill:\"#52c41a\"})]})})})}),/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsx(Card,{title:\"AUC-ROC por Algoritmo\",size:\"small\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:chartData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\",angle:-45,textAnchor:\"end\",height:100}),/*#__PURE__*/_jsx(YAxis,{label:{value:'AUC (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'AUC']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"auc\",fill:\"#1890ff\"})]})})})})]})]})},\"1\"),/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83E\\uDD16 Detalles por M\\xE9todo\",children:/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',color:'white',padding:'15px',borderRadius:'8px',marginBottom:'20px'},children:/*#__PURE__*/_jsx(\"h3\",{style:{margin:0,textAlign:'center'},children:\"\\uD83D\\uDD0D Detalles por M\\xE9todo\"})}),Object.entries(metodosPorCategoria).map(_ref=>{let[categoria,metodos]=_ref;return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'40px'},children:[/*#__PURE__*/_jsx(Divider,{orientation:\"left\",children:/*#__PURE__*/_jsx(Tag,{color:\"blue\",style:{fontSize:'16px',padding:'8px 16px',borderRadius:'20px',boxShadow:'0 2px 8px rgba(0,0,0,0.1)'},children:categoria})}),/*#__PURE__*/_jsx(Row,{gutter:[16,16],children:metodos.map(metodo=>/*#__PURE__*/_jsx(Col,{xs:24,sm:12,lg:8,xl:6,children:/*#__PURE__*/_jsx(Card,{hoverable:true,style:{marginBottom:'20px',borderRadius:'10px',boxShadow:'0 5px 15px rgba(0,0,0,0.1)',border:'none',background:selectedMethods.includes(metodo.id)?'#e6f7ff':'white',border:selectedMethods.includes(metodo.id)?'2px solid #1890ff':'1px solid #f0f0f0',transform:selectedMethods.includes(metodo.id)?'translateY(-2px)':'none',boxShadow:selectedMethods.includes(metodo.id)?'0 8px 25px rgba(24, 144, 255, 0.3)':'0 5px 15px rgba(0,0,0,0.1)'},onClick:()=>toggleMethod(metodo.id),children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{color:'#1890ff',marginBottom:'10px'},children:metodo.nombre}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'10px'},children:/*#__PURE__*/_jsx(Tag,{color:getStatusColor(metodo.accuracy),style:{fontSize:'14px',padding:'4px 8px'},children:metodo.estado})}),/*#__PURE__*/_jsx(Statistic,{title:\"Accuracy\",value:(metodo.accuracy*100).toFixed(1),suffix:\"%\",valueStyle:{color:getStatusColor(metodo.accuracy)}}),/*#__PURE__*/_jsx(Statistic,{title:\"AUC\",value:metodo.auc.toFixed(3),valueStyle:{color:'#1890ff'}}),/*#__PURE__*/_jsx(Button,{type:selectedMethods.includes(metodo.id)?'primary':'default',size:\"small\",style:{marginTop:'10px',borderRadius:'20px',height:'32px',padding:'0 16px',fontSize:'12px',fontWeight:'bold',boxShadow:'0 2px 8px rgba(0,0,0,0.1)'},children:selectedMethods.includes(metodo.id)?'Seleccionado':'Seleccionar'})]})})},metodo.id))})]},categoria);})]})},\"2\"),/*#__PURE__*/_jsx(TabPane,{tab:\"\\uD83D\\uDCCA Gr\\xE1ficos Detallados\",children:/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',color:'white',padding:'15px',borderRadius:'8px',marginBottom:'20px'},children:/*#__PURE__*/_jsx(\"h3\",{style:{margin:0,textAlign:'center'},children:\"\\uD83D\\uDCCA Gr\\xE1ficos Detallados\"})}),/*#__PURE__*/_jsx(Row,{gutter:[16,16],children:metodosML.map((metodo,index)=>/*#__PURE__*/_jsx(Col,{xs:24,lg:12,children:/*#__PURE__*/_jsxs(Card,{title:\"Gr\\xE1ficos de \".concat(metodo.nombre),style:{marginBottom:'20px',borderRadius:'10px',boxShadow:'0 5px 15px rgba(0,0,0,0.1)',border:'none'},children:[/*#__PURE__*/_jsxs(Row,{gutter:[16,16],children:[/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Rendimiento del Algoritmo\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:200,children:/*#__PURE__*/_jsxs(BarChart,{data:[{metrica:'Accuracy',valor:(metodo.accuracy*100).toFixed(1)},{metrica:'AUC',valor:(metodo.auc*100).toFixed(1)}],children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"metrica\"}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Métrica (%)',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[\"\".concat(value,\"%\"),'Valor']}),/*#__PURE__*/_jsx(Bar,{dataKey:\"valor\",fill:\"#1890ff\"})]})})]}),/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Gr\\xE1fico Espec\\xEDfico del Algoritmo\"}),renderSpecificChart(metodo)]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'15px',padding:'10px',background:'#f5f5f5',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Variables Utilizadas:\"}),/*#__PURE__*/_jsx(\"div\",{children:(metodo.variables_utilizadas||[]).map((variable,i)=>/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',background:'#1890ff',color:'white',padding:'2px 6px',margin:'2px',borderRadius:'3px',fontSize:'11px'},children:variable},i))})]})]})},metodo.id))})]})},\"3\"),/*#__PURE__*/_jsxs(TabPane,{tab:\"\\uD83C\\uDFC6 Comparaci\\xF3n Final\",children:[(dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$resume2=dashboardData.resumen_analisis)===null||_dashboardData$resume2===void 0?void 0:_dashboardData$resume2.mejor_algoritmo)&&/*#__PURE__*/_jsx(Alert,{message:\"Mejor M\\xE9todo Identificado\",description:\"\".concat(dashboardData.resumen_analisis.mejor_algoritmo.nombre,\" con Accuracy: \").concat((dashboardData.resumen_analisis.mejor_algoritmo.accuracy*100).toFixed(1),\"% y AUC: \").concat(dashboardData.resumen_analisis.mejor_algoritmo.auc.toFixed(3)),type:\"success\",showIcon:true,style:{marginBottom:'20px'}}),/*#__PURE__*/_jsx(Table,{dataSource:metodosML.map(metodo=>({key:metodo.id,ranking:metodo.ranking||metodo.id,nombre:metodo.nombre,categoria:metodo.categoria,accuracy:\"\".concat((metodo.accuracy*100).toFixed(1),\"%\"),auc:metodo.auc.toFixed(3),estado:metodo.estado})),columns:[{title:'Ranking',dataIndex:'ranking',key:'ranking',width:80,render:ranking=>/*#__PURE__*/_jsxs(Tag,{color:ranking<=3?'gold':ranking<=5?'blue':'default',children:[\"#\",ranking]})},{title:'Algoritmo',dataIndex:'nombre',key:'nombre',render:nombre=>/*#__PURE__*/_jsx(\"strong\",{children:nombre})},{title:'Categoría',dataIndex:'categoria',key:'categoria',render:categoria=>/*#__PURE__*/_jsx(Tag,{color:getMethodTypeColor(categoria.toLowerCase()),children:categoria})},{title:'Accuracy',dataIndex:'accuracy',key:'accuracy',render:accuracy=>/*#__PURE__*/_jsx(\"strong\",{style:{color:'#52c41a'},children:accuracy})},{title:'AUC',dataIndex:'auc',key:'auc',render:auc=>/*#__PURE__*/_jsx(\"strong\",{style:{color:'#1890ff'},children:auc})},{title:'Estado',dataIndex:'estado',key:'estado',render:estado=>/*#__PURE__*/_jsx(Tag,{color:estado==='Excelente'?'green':estado==='Bueno'?'blue':estado==='Regular'?'orange':'red',children:estado})}],pagination:false,style:{marginBottom:'20px'}})]},\"4\")]})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Card","Row","Col","Button","Progress","Tabs","Table","Statistic","Alert","Divider","Tag","Descriptions","Steps","CheckCircleOutlined","CloseCircleOutlined","InfoCircleOutlined","RocketOutlined","DatabaseOutlined","BarChartOutlined","ResponsiveContainer","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","LineChart","Line","PieChart","Pie","Cell","ScatterChart","Scatter","AreaChart","Area","jsx","_jsx","jsxs","_jsxs","TabPane","Step","App","_dashboardData$resume","_dashboardData$resume2","selectedMethods","setSelectedMethods","isAnalyzing","setIsAnalyzing","analysisResults","setAnalysisResults","currentStep","setCurrentStep","dashboardData","setDashboardData","loading","setLoading","fetchDashboardData","response","fetch","data","json","error","console","metodosML","resultados","chartData","map","metodo","name","nombre","accuracy","toFixed","auc","processSteps","title","description","progress","toggleMethod","methodId","includes","filter","id","executeAnalysis","length","alert","interval","setInterval","prev","clearInterval","results","getMethodTypeColor","tipo","colors","classification","clustering","temporal","ensemble","getStatusColor","renderSpecificChart","nombreAlgoritmo","toLowerCase","renderLogisticChart","renderKNNChart","renderNaiveBayesChart","renderDecisionTreeChart","renderRandomForestChart","renderSVMChart","renderGradientBoostingChart","renderKMeansChart","renderEnsembleChart","renderARIMAChart","renderGenericChart","children","style","textAlign","marginBottom","width","height","Array","from","_","i","x","y","Math","exp","strokeDasharray","dataKey","label","value","position","offset","angle","formatter","concat","type","stroke","strokeWidth","fontSize","color","marginTop","random","clase","distancia","props","fill","caracteristica","probabilidad_importante","pow","probabilidad_no_importante","stackId","fillOpacity","importancia","abs","iteracion","cluster","modelo","tiempo","valor","sin","tendencia","metrica","metodosPorCategoria","reduce","acc","categoria","push","display","justifyContent","alignItems","background","onClick","window","location","reload","padding","minHeight","maxWidth","margin","borderRadius","boxShadow","backdropFilter","textShadow","opacity","resumen_analisis","mejor_algoritmo","defaultActiveKey","size","tab","border","gutter","xs","lg","textAnchor","Object","entries","_ref","metodos","orientation","sm","xl","hoverable","transform","estado","suffix","valueStyle","fontWeight","index","span","variables_utilizadas","variable","message","showIcon","dataSource","key","ranking","columns","dataIndex","render","pagination"],"sources":["/Users/usuario/Documents/clasedepractica/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Button, Progress, Tabs, Table, Statistic, Alert, Divider, Tag, Descriptions, Steps } from 'antd';\nimport { CheckCircleOutlined, CloseCircleOutlined, InfoCircleOutlined, RocketOutlined, DatabaseOutlined, BarChartOutlined } from '@ant-design/icons';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, LineChart, Line, PieChart, Pie, Cell, ScatterChart, Scatter, AreaChart, Area } from 'recharts';\n\nconst { TabPane } = Tabs;\nconst { Step } = Steps;\n\nfunction App() {\n  const [selectedMethods, setSelectedMethods] = useState([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Cargar datos reales del servidor\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const response = await fetch('/api/dashboard-data');\n        const data = await response.json();\n        setDashboardData(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error cargando datos:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  // Usar datos reales del servidor o datos por defecto\n  const metodosML = dashboardData?.resultados || [];\n\n  // Generar chartData desde los datos reales\n  const chartData = metodosML.map(metodo => ({\n    name: metodo.nombre,\n    accuracy: (metodo.accuracy * 100).toFixed(1),\n    auc: (metodo.auc * 100).toFixed(1)\n  }));\n\n  const processSteps = [\n    { title: \"Carga de Datos\", description: \"1,571 artículos periodísticos cargados\", progress: 20 },\n    { title: \"Limpieza de Texto\", description: \"Procesamiento de títulos, resúmenes y contenido\", progress: 40 },\n    { title: \"Vectorización TF-IDF\", description: \"1,000 características de texto generadas\", progress: 60 },\n    { title: \"Entrenamiento de Modelos\", description: \"10 algoritmos de ML ejecutados\", progress: 80 },\n    { title: \"Evaluación y Comparación\", description: \"Análisis de rendimiento completado\", progress: 100 }\n  ];\n\n  const toggleMethod = (methodId) => {\n    if (selectedMethods.includes(methodId)) {\n      setSelectedMethods(selectedMethods.filter(id => id !== methodId));\n    } else {\n      setSelectedMethods([...selectedMethods, methodId]);\n    }\n  };\n\n  const executeAnalysis = () => {\n    if (selectedMethods.length === 0) {\n      alert('Por favor selecciona al menos un método para analizar.');\n      return;\n    }\n    \n    setIsAnalyzing(true);\n    setAnalysisResults(null);\n    setCurrentStep(0);\n    \n    const interval = setInterval(() => {\n      setCurrentStep(prev => {\n        if (prev >= processSteps.length - 1) {\n          clearInterval(interval);\n          setIsAnalyzing(false);\n          setAnalysisResults({\n            selectedMethods: selectedMethods,\n            results: metodosML.filter(metodo => selectedMethods.includes(metodo.id))\n          });\n          return prev;\n        }\n        return prev + 1;\n      });\n    }, 1000);\n  };\n\n  const getMethodTypeColor = (tipo) => {\n    const colors = {\n      classification: '#1890ff',\n      clustering: '#722ed1',\n      temporal: '#52c41a',\n      ensemble: '#fa8c16'\n    };\n    return colors[tipo] || '#666';\n  };\n\n  const getStatusColor = (accuracy) => {\n    if (accuracy >= 0.95) return '#52c41a';\n    if (accuracy >= 0.90) return '#1890ff';\n    if (accuracy >= 0.80) return '#faad14';\n    return '#ff4d4f';\n  };\n\n  // Función mejorada para generar gráficos específicos por algoritmo\n  const renderSpecificChart = (metodo) => {\n    // Usar el nombre del algoritmo para determinar el gráfico específico\n    const nombreAlgoritmo = metodo.nombre.toLowerCase();\n    \n    if (nombreAlgoritmo.includes('regresión logística') || nombreAlgoritmo.includes('logistic')) {\n      return renderLogisticChart();\n    } else if (nombreAlgoritmo.includes('k-nearest') || nombreAlgoritmo.includes('knn')) {\n      return renderKNNChart();\n    } else if (nombreAlgoritmo.includes('naive bayes') || nombreAlgoritmo.includes('bayes')) {\n      return renderNaiveBayesChart();\n    } else if (nombreAlgoritmo.includes('árbol de decisión') || nombreAlgoritmo.includes('decision tree')) {\n      return renderDecisionTreeChart();\n    } else if (nombreAlgoritmo.includes('random forest') || nombreAlgoritmo.includes('bosque')) {\n      return renderRandomForestChart();\n    } else if (nombreAlgoritmo.includes('support vector') || nombreAlgoritmo.includes('svm')) {\n      return renderSVMChart();\n    } else if (nombreAlgoritmo.includes('histgradient') || nombreAlgoritmo.includes('gradient')) {\n      return renderGradientBoostingChart();\n    } else if (nombreAlgoritmo.includes('k-means') || nombreAlgoritmo.includes('clustering')) {\n      return renderKMeansChart();\n    } else if (nombreAlgoritmo.includes('ensemble') || nombreAlgoritmo.includes('voting')) {\n      return renderEnsembleChart();\n    } else if (nombreAlgoritmo.includes('arima') || nombreAlgoritmo.includes('temporal')) {\n      return renderARIMAChart();\n    } else {\n      // Gráfico genérico para algoritmos sin gráfico específico\n      return renderGenericChart(metodo);\n    }\n  };\n\n  const renderLogisticChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Curva Sigmoide - Función Logística</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <LineChart data={Array.from({length: 21}, (_, i) => ({\n            x: i - 10,\n            y: 1 / (1 + Math.exp(-(i - 10)))\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"x\" label={{ value: 'Z (Función Lineal)', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Probabilidad', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${value.toFixed(3)}`, 'Probabilidad']} />\n            <Line type=\"monotone\" dataKey=\"y\" stroke=\"#1890ff\" strokeWidth={3} />\n          </LineChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          La función sigmoide transforma valores lineales en probabilidades entre 0 y 1\n        </p>\n      </div>\n    );\n  };\n\n  const renderKNNChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>K-Nearest Neighbors - Distancia a Vecinos</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <ScatterChart data={Array.from({length: 20}, (_, i) => ({\n            x: Math.random() * 10,\n            y: Math.random() * 10,\n            clase: i % 2 === 0 ? 'Importante' : 'No Importante',\n            distancia: Math.random() * 5\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"x\" label={{ value: 'Característica 1', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Característica 2', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value, name, props) => [\n              `${value.toFixed(2)}`, \n              name === 'distancia' ? 'Distancia' : 'Clase'\n            ]} />\n            <Scatter dataKey=\"distancia\" fill=\"#52c41a\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          KNN clasifica basándose en la distancia a los k vecinos más cercanos\n        </p>\n      </div>\n    );\n  };\n\n  const renderNaiveBayesChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Naive Bayes - Distribución de Probabilidades</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <AreaChart data={Array.from({length: 50}, (_, i) => ({\n            caracteristica: i,\n            probabilidad_importante: Math.exp(-Math.pow(i - 25, 2) / 50),\n            probabilidad_no_importante: Math.exp(-Math.pow(i - 30, 2) / 40)\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"caracteristica\" label={{ value: 'Valor de Característica', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Probabilidad', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${value.toFixed(3)}`, 'Probabilidad']} />\n            <Area type=\"monotone\" dataKey=\"probabilidad_importante\" stackId=\"1\" stroke=\"#52c41a\" fill=\"#52c41a\" fillOpacity={0.6} />\n            <Area type=\"monotone\" dataKey=\"probabilidad_no_importante\" stackId=\"2\" stroke=\"#ff4d4f\" fill=\"#ff4d4f\" fillOpacity={0.6} />\n          </AreaChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          Naive Bayes calcula probabilidades condicionales para cada característica\n        </p>\n      </div>\n    );\n  };\n\n  const renderDecisionTreeChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Árbol de Decisión - Importancia de Características</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={[\n            { caracteristica: 'Periódico', importancia: 0.35, color: '#1890ff' },\n            { caracteristica: 'Longitud', importancia: 0.28, color: '#52c41a' },\n            { caracteristica: 'Categoría', importancia: 0.22, color: '#faad14' },\n            { caracteristica: 'Imágenes', importancia: 0.15, color: '#ff4d4f' }\n          ]}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"caracteristica\" />\n            <YAxis label={{ value: 'Importancia', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${(value * 100).toFixed(1)}%`, 'Importancia']} />\n            <Bar dataKey=\"importancia\" fill=\"#1890ff\" />\n          </BarChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          El árbol de decisión muestra qué características son más importantes para la clasificación\n        </p>\n      </div>\n    );\n  };\n\n  const renderRandomForestChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Random Forest - Rendimiento por Árbol</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={[\n            { name: 'Árbol 1', value: 95, color: '#fa8c16' },\n            { name: 'Árbol 2', value: 92, color: '#fa8c16' },\n            { name: 'Árbol 3', value: 98, color: '#fa8c16' },\n            { name: 'Árbol 4', value: 94, color: '#fa8c16' },\n            { name: 'Árbol 5', value: 96, color: '#fa8c16' },\n            { name: 'Promedio', value: 95, color: '#52c41a' }\n          ]}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis label={{ value: 'Accuracy (%)', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${value}%`, 'Accuracy']} />\n            <Bar dataKey=\"value\" fill=\"#fa8c16\" />\n          </BarChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          Random Forest combina múltiples árboles para mayor robustez y precisión\n        </p>\n      </div>\n    );\n  };\n\n  const renderSVMChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Support Vector Machine - Hiperplano de Separación</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <ScatterChart data={Array.from({length: 30}, (_, i) => ({\n            x: Math.random() * 10,\n            y: Math.random() * 10,\n            clase: i % 2 === 0 ? 'Importante' : 'No Importante',\n            distancia: Math.abs(5 - Math.random() * 10)\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"x\" label={{ value: 'Característica 1', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Característica 2', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value, name) => [\n              `${value.toFixed(2)}`, \n              name === 'distancia' ? 'Distancia al Hiperplano' : 'Clase'\n            ]} />\n            <Scatter dataKey=\"distancia\" fill=\"#1890ff\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          SVM encuentra el hiperplano que mejor separa las clases con el mayor margen\n        </p>\n      </div>\n    );\n  };\n\n  const renderGradientBoostingChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>HistGradientBoosting - Reducción de Error</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <LineChart data={Array.from({length: 15}, (_, i) => ({\n            iteracion: i + 1,\n            error: 100 - (i * 6 + Math.random() * 3),\n            accuracy: 50 + (i * 3 + Math.random() * 2)\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"iteracion\" label={{ value: 'Iteración', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Métrica (%)', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value, name) => [`${value.toFixed(1)}%`, name === 'error' ? 'Error' : 'Accuracy']} />\n            <Line type=\"monotone\" dataKey=\"error\" stroke=\"#ff4d4f\" strokeWidth={3} name=\"Error\" />\n            <Line type=\"monotone\" dataKey=\"accuracy\" stroke=\"#52c41a\" strokeWidth={3} name=\"Accuracy\" />\n          </LineChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          Gradient Boosting reduce el error iterativamente combinando múltiples modelos débiles\n        </p>\n      </div>\n    );\n  };\n\n  const renderKMeansChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>K-Means Clustering - Agrupación de Artículos</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <ScatterChart data={Array.from({length: 40}, (_, i) => ({\n            x: Math.random() * 10,\n            y: Math.random() * 10,\n            cluster: i % 2 === 0 ? 'Cluster 1' : 'Cluster 2',\n            distancia: Math.random() * 3\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"x\" label={{ value: 'Característica 1', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Característica 2', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value, name) => [\n              `${value.toFixed(2)}`, \n              name === 'distancia' ? 'Distancia al Centroide' : 'Cluster'\n            ]} />\n            <Scatter dataKey=\"distancia\" fill=\"#722ed1\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          K-Means agrupa artículos similares en clusters basándose en sus características\n        </p>\n      </div>\n    );\n  };\n\n  const renderEnsembleChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Ensemble - Combinación de Modelos</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={[\n            { modelo: 'Regresión Logística', accuracy: 95, color: '#1890ff' },\n            { modelo: 'Random Forest', accuracy: 98, color: '#52c41a' },\n            { modelo: 'SVM', accuracy: 89, color: '#faad14' },\n            { modelo: 'Ensemble', accuracy: 99, color: '#722ed1' }\n          ]}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"modelo\" />\n            <YAxis label={{ value: 'Accuracy (%)', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${value}%`, 'Accuracy']} />\n            <Bar dataKey=\"accuracy\" fill=\"#722ed1\" />\n          </BarChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          El ensemble combina múltiples modelos para mejorar la precisión general\n        </p>\n      </div>\n    );\n  };\n\n  const renderARIMAChart = () => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>ARIMA - Análisis de Series Temporales</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <LineChart data={Array.from({length: 30}, (_, i) => ({\n            tiempo: i,\n            valor: 50 + Math.sin(i * 0.3) * 10 + Math.random() * 5,\n            tendencia: 50 + i * 0.5\n          }))}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"tiempo\" label={{ value: 'Tiempo', position: 'insideBottom', offset: -5 }} />\n            <YAxis label={{ value: 'Valor', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value, name) => [\n              `${value.toFixed(2)}`, \n              name === 'valor' ? 'Serie Temporal' : 'Tendencia'\n            ]} />\n            <Line type=\"monotone\" dataKey=\"valor\" stroke=\"#1890ff\" strokeWidth={2} name=\"Serie Temporal\" />\n            <Line type=\"monotone\" dataKey=\"tendencia\" stroke=\"#ff4d4f\" strokeWidth={2} name=\"Tendencia\" />\n          </LineChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          ARIMA analiza patrones temporales en la publicación de artículos\n        </p>\n      </div>\n    );\n  };\n\n  const renderGenericChart = (metodo) => {\n    return (\n      <div>\n        <h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Métricas de Rendimiento</h4>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={[\n            { metrica: 'Accuracy', valor: (metodo.accuracy * 100).toFixed(1) },\n            { metrica: 'AUC', valor: (metodo.auc * 100).toFixed(1) },\n            { metrica: 'Precision', valor: (metodo.accuracy * 100 * 0.95).toFixed(1) },\n            { metrica: 'Recall', valor: (metodo.accuracy * 100 * 0.92).toFixed(1) },\n            { metrica: 'F1-Score', valor: (metodo.accuracy * 100 * 0.94).toFixed(1) }\n          ]}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"metrica\" />\n            <YAxis label={{ value: 'Métrica (%)', angle: -90, position: 'insideLeft' }} />\n            <Tooltip formatter={(value) => [`${value}%`, 'Valor']} />\n            <Bar dataKey=\"valor\" fill=\"#1890ff\" />\n          </BarChart>\n        </ResponsiveContainer>\n        <p style={{ textAlign: 'center', fontSize: '12px', color: '#666', marginTop: '10px' }}>\n          Métricas de rendimiento del algoritmo: Accuracy, AUC, Precision, Recall y F1-Score\n        </p>\n      </div>\n    );\n  };\n\n  // Agrupar métodos por categoría\n  const metodosPorCategoria = metodosML.reduce((acc, metodo) => {\n    if (!acc[metodo.categoria]) {\n      acc[metodo.categoria] = [];\n    }\n    acc[metodo.categoria].push(metodo);\n    return acc;\n  }, {});\n\n  if (loading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '100vh',\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\n      }}>\n        <div style={{ textAlign: 'center', color: 'white' }}>\n          <h2>🔄 Cargando datos del análisis...</h2>\n          <p>Preparando resultados de los 10 algoritmos de ML</p>\n          <p>Conectando con el servidor...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!dashboardData) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '100vh',\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\n      }}>\n        <div style={{ textAlign: 'center', color: 'white' }}>\n          <CloseCircleOutlined style={{ fontSize: '48px', marginBottom: '20px' }} />\n          <h2>❌ Error cargando datos</h2>\n          <p>No se pudieron cargar los datos del análisis.</p>\n          <p>Verifica que el servidor esté funcionando en http://localhost:3002</p>\n          <Button type=\"primary\" onClick={() => window.location.reload()}>\n            Reintentar\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ \n      padding: '20px', \n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)', \n      minHeight: '100vh'\n    }}>\n      <div style={{ \n        maxWidth: '1400px', \n        margin: '0 auto',\n        background: 'rgba(255,255,255,0.95)',\n        borderRadius: '15px',\n        padding: '30px',\n        boxShadow: '0 20px 40px rgba(0,0,0,0.1)',\n        backdropFilter: 'blur(10px)'\n      }}>\n        {/* Header */}\n        <div style={{ \n          textAlign: 'center', \n          marginBottom: '30px',\n          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n          color: 'white',\n          padding: '20px',\n          borderRadius: '10px',\n          boxShadow: '0 10px 20px rgba(0,0,0,0.1)'\n        }}>\n          <h1 style={{ \n            margin: '0 0 10px 0', \n            fontSize: '2.5em',\n            textShadow: '2px 2px 4px rgba(0,0,0,0.3)'\n          }}>\n            📊 Dashboard de Minería de Datos\n          </h1>\n          <p style={{ \n            margin: '0', \n            fontSize: '1.2em',\n            opacity: 0.9\n          }}>\n            Análisis Objetivo de 10 Algoritmos de Machine Learning\n          </p>\n          {dashboardData?.resumen_analisis?.mejor_algoritmo && (\n            <div style={{ marginTop: '15px' }}>\n              <Tag color=\"gold\" style={{ fontSize: '16px', padding: '8px 16px' }}>\n                🏆 Mejor Algoritmo: {dashboardData.resumen_analisis.mejor_algoritmo.nombre} \n                ({(dashboardData.resumen_analisis.mejor_algoritmo.accuracy * 100).toFixed(1)}%)\n              </Tag>\n            </div>\n          )}\n        </div>\n\n        <Tabs defaultActiveKey=\"1\" size=\"large\">\n          <TabPane tab=\"📈 Gráficos de Comparación\" key=\"1\">\n            <Card style={{ marginBottom: '20px', borderRadius: '10px', boxShadow: '0 5px 15px rgba(0,0,0,0.1)', border: 'none' }}>\n              <div style={{ \n                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                color: 'white',\n                padding: '15px',\n                borderRadius: '8px',\n                marginBottom: '20px'\n              }}>\n                <h3 style={{ margin: 0, textAlign: 'center' }}>📊 Comparación de Algoritmos</h3>\n              </div>\n              \n              <Row gutter={[16, 16]}>\n                <Col xs={24} lg={12}>\n                  <Card title=\"Accuracy por Algoritmo\" size=\"small\">\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <BarChart data={chartData}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={100} />\n                        <YAxis label={{ value: 'Accuracy (%)', angle: -90, position: 'insideLeft' }} />\n                        <Tooltip formatter={(value) => [`${value}%`, 'Accuracy']} />\n                        <Bar dataKey=\"accuracy\" fill=\"#52c41a\" />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </Card>\n                </Col>\n                \n                <Col xs={24} lg={12}>\n                  <Card title=\"AUC-ROC por Algoritmo\" size=\"small\">\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <BarChart data={chartData}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={100} />\n                        <YAxis label={{ value: 'AUC (%)', angle: -90, position: 'insideLeft' }} />\n                        <Tooltip formatter={(value) => [`${value}%`, 'AUC']} />\n                        <Bar dataKey=\"auc\" fill=\"#1890ff\" />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </Card>\n                </Col>\n              </Row>\n            </Card>\n          </TabPane>\n\n          <TabPane tab=\"🤖 Detalles por Método\" key=\"2\">\n            <div style={{ marginBottom: '20px' }}>\n              <div style={{ \n                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                color: 'white',\n                padding: '15px',\n                borderRadius: '8px',\n                marginBottom: '20px'\n              }}>\n                <h3 style={{ margin: 0, textAlign: 'center' }}>🔍 Detalles por Método</h3>\n              </div>\n\n              {Object.entries(metodosPorCategoria).map(([categoria, metodos]) => (\n                <div key={categoria} style={{ marginBottom: '40px' }}>\n                  <Divider orientation=\"left\">\n                    <Tag \n                      color=\"blue\" \n                      style={{\n                        fontSize: '16px',\n                        padding: '8px 16px',\n                        borderRadius: '20px',\n                        boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n                      }}\n                    >\n                      {categoria}\n                    </Tag>\n                  </Divider>\n                  \n                  <Row gutter={[16, 16]}>\n                    {metodos.map((metodo) => (\n                      <Col xs={24} sm={12} lg={8} xl={6} key={metodo.id}>\n                        <Card\n                          hoverable\n                          style={{ \n                            marginBottom: '20px',\n                            borderRadius: '10px',\n                            boxShadow: '0 5px 15px rgba(0,0,0,0.1)',\n                            border: 'none',\n                            background: selectedMethods.includes(metodo.id) ? '#e6f7ff' : 'white',\n                            border: selectedMethods.includes(metodo.id) ? '2px solid #1890ff' : '1px solid #f0f0f0',\n                            transform: selectedMethods.includes(metodo.id) ? 'translateY(-2px)' : 'none',\n                            boxShadow: selectedMethods.includes(metodo.id) ? '0 8px 25px rgba(24, 144, 255, 0.3)' : '0 5px 15px rgba(0,0,0,0.1)'\n                          }}\n                          onClick={() => toggleMethod(metodo.id)}\n                        >\n                          <div style={{ textAlign: 'center' }}>\n                            <h4 style={{ color: '#1890ff', marginBottom: '10px' }}>{metodo.nombre}</h4>\n                            <div style={{ marginBottom: '10px' }}>\n                              <Tag color={getStatusColor(metodo.accuracy)} style={{ fontSize: '14px', padding: '4px 8px' }}>\n                                {metodo.estado}\n                              </Tag>\n                            </div>\n                            <Statistic\n                              title=\"Accuracy\"\n                              value={(metodo.accuracy * 100).toFixed(1)}\n                              suffix=\"%\"\n                              valueStyle={{ color: getStatusColor(metodo.accuracy) }}\n                            />\n                            <Statistic\n                              title=\"AUC\"\n                              value={metodo.auc.toFixed(3)}\n                              valueStyle={{ color: '#1890ff' }}\n                            />\n                            <Button \n                              type={selectedMethods.includes(metodo.id) ? 'primary' : 'default'}\n                              size=\"small\"\n                              style={{ \n                                marginTop: '10px',\n                                borderRadius: '20px',\n                                height: '32px',\n                                padding: '0 16px',\n                                fontSize: '12px',\n                                fontWeight: 'bold',\n                                boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n                              }}\n                            >\n                              {selectedMethods.includes(metodo.id) ? 'Seleccionado' : 'Seleccionar'}\n                            </Button>\n                          </div>\n                        </Card>\n                      </Col>\n                    ))}\n                  </Row>\n                </div>\n              ))}\n            </div>\n          </TabPane>\n\n          <TabPane tab=\"📊 Gráficos Detallados\" key=\"3\">\n            <div style={{ marginBottom: '20px' }}>\n              <div style={{ \n                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                color: 'white',\n                padding: '15px',\n                borderRadius: '8px',\n                marginBottom: '20px'\n              }}>\n                <h3 style={{ margin: 0, textAlign: 'center' }}>📊 Gráficos Detallados</h3>\n              </div>\n\n              <Row gutter={[16, 16]}>\n                {metodosML.map((metodo, index) => (\n                  <Col xs={24} lg={12} key={metodo.id}>\n                    <Card title={`Gráficos de ${metodo.nombre}`} style={{ marginBottom: '20px', borderRadius: '10px', boxShadow: '0 5px 15px rgba(0,0,0,0.1)', border: 'none' }}>\n                      <Row gutter={[16, 16]}>\n                        <Col span={24}>\n                          <h4>Rendimiento del Algoritmo</h4>\n                          <ResponsiveContainer width=\"100%\" height={200}>\n                            <BarChart data={[\n                              { metrica: 'Accuracy', valor: (metodo.accuracy * 100).toFixed(1) },\n                              { metrica: 'AUC', valor: (metodo.auc * 100).toFixed(1) }\n                            ]}>\n                              <CartesianGrid strokeDasharray=\"3 3\" />\n                              <XAxis dataKey=\"metrica\" />\n                              <YAxis label={{ value: 'Métrica (%)', angle: -90, position: 'insideLeft' }} />\n                              <Tooltip formatter={(value) => [`${value}%`, 'Valor']} />\n                              <Bar dataKey=\"valor\" fill=\"#1890ff\" />\n                            </BarChart>\n                          </ResponsiveContainer>\n                        </Col>\n                        \n                        <Col span={24}>\n                          <h4>Gráfico Específico del Algoritmo</h4>\n                          {renderSpecificChart(metodo)}\n                        </Col>\n                      </Row>\n                      \n                      <div style={{ marginTop: '15px', padding: '10px', background: '#f5f5f5', borderRadius: '5px' }}>\n                        <h5>Variables Utilizadas:</h5>\n                        <div>\n                          {(metodo.variables_utilizadas || []).map((variable, i) => (\n                            <span key={i} style={{\n                              display: 'inline-block',\n                              background: '#1890ff',\n                              color: 'white',\n                              padding: '2px 6px',\n                              margin: '2px',\n                              borderRadius: '3px',\n                              fontSize: '11px'\n                            }}>\n                              {variable}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n                    </Card>\n                  </Col>\n                ))}\n              </Row>\n            </div>\n          </TabPane>\n\n          <TabPane tab=\"🏆 Comparación Final\" key=\"4\">\n            {dashboardData?.resumen_analisis?.mejor_algoritmo && (\n              <Alert\n                message=\"Mejor Método Identificado\"\n                description={`${dashboardData.resumen_analisis.mejor_algoritmo.nombre} con Accuracy: ${(dashboardData.resumen_analisis.mejor_algoritmo.accuracy * 100).toFixed(1)}% y AUC: ${dashboardData.resumen_analisis.mejor_algoritmo.auc.toFixed(3)}`}\n                type=\"success\"\n                showIcon\n                style={{ marginBottom: '20px' }}\n              />\n            )}\n            \n            <Table\n              dataSource={metodosML.map((metodo) => ({\n                key: metodo.id,\n                ranking: metodo.ranking || metodo.id,\n                nombre: metodo.nombre,\n                categoria: metodo.categoria,\n                accuracy: `${(metodo.accuracy * 100).toFixed(1)}%`,\n                auc: metodo.auc.toFixed(3),\n                estado: metodo.estado\n              }))}\n              columns={[\n                {\n                  title: 'Ranking',\n                  dataIndex: 'ranking',\n                  key: 'ranking',\n                  width: 80,\n                  render: (ranking) => (\n                    <Tag color={ranking <= 3 ? 'gold' : ranking <= 5 ? 'blue' : 'default'}>\n                      #{ranking}\n                    </Tag>\n                  )\n                },\n                {\n                  title: 'Algoritmo',\n                  dataIndex: 'nombre',\n                  key: 'nombre',\n                  render: (nombre) => <strong>{nombre}</strong>\n                },\n                {\n                  title: 'Categoría',\n                  dataIndex: 'categoria',\n                  key: 'categoria',\n                  render: (categoria) => (\n                    <Tag color={getMethodTypeColor(categoria.toLowerCase())}>\n                      {categoria}\n                    </Tag>\n                  )\n                },\n                {\n                  title: 'Accuracy',\n                  dataIndex: 'accuracy',\n                  key: 'accuracy',\n                  render: (accuracy) => <strong style={{ color: '#52c41a' }}>{accuracy}</strong>\n                },\n                {\n                  title: 'AUC',\n                  dataIndex: 'auc',\n                  key: 'auc',\n                  render: (auc) => <strong style={{ color: '#1890ff' }}>{auc}</strong>\n                },\n                {\n                  title: 'Estado',\n                  dataIndex: 'estado',\n                  key: 'estado',\n                  render: (estado) => (\n                    <Tag color={estado === 'Excelente' ? 'green' : estado === 'Bueno' ? 'blue' : estado === 'Regular' ? 'orange' : 'red'}>\n                      {estado}\n                    </Tag>\n                  )\n                }\n              ]}\n              pagination={false}\n              style={{ marginBottom: '20px' }}\n            />\n          </TabPane>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}